
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant.v
Parsing Verilog input from `src/servant_1.2.1/service/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/service/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/service/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/service/service.v
Parsing Verilog input from `src/servant_1.2.1/service/service.v' to AST representation.
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

28. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile
Generating RTLIL representation for module `$paramod$f1f69d35145dc335c26e91ab6cce31100837bffd\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

31. Executing SYNTH_ICE40 pass.

31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

31.2. Executing HIERARCHY pass (managing design hierarchy).

31.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

31.3.1. Analyzing design hierarchy..
Top module:  \service

31.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.
src/servant_1.2.1/service/uart_tx.v:108: Warning: Identifier `\done' is implicitly declared.

31.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile
Generating RTLIL representation for module `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram'.
Preloading $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram from /home/paul/Bachelor_Project/fusesoc_libraries/serv/sw/simple_BLE.hex

31.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
Parameter \memfile
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant'.

31.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

31.3.6. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

31.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

31.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/service/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

31.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

31.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

31.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

31.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

31.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

31.3.14. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

31.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

31.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

31.3.18. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

31.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

31.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

31.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

31.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

31.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

31.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

31.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

31.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

31.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

31.3.29. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.30. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 27 unused modules.

31.4. Executing PROC pass (convert processes to netlists).

31.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$631'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$337'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$337'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:64$75'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:64$75'.
Cleaned up 7 empty switches.

31.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$98 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$78 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$78 in module uart_rx.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:48$49 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$25 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$25 in module uart_tx.
Removed a total of 2 dead cases.

31.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$96'.
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$95'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$94'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$93'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$92'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$91'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$90'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$89'.
  Set init value: \r_Rx_temp = 1'1
Found init rule in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$74'.
  Set init value: \recieve = 1'0
Found init rule in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$73'.
  Set init value: \my_adr = 11534336
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
  Set init value: \o_wb_rdt = 1'1
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:136$23'.
  Set init value: \my_adr = 3072

31.4.4. Executing PROC_ARST pass (detect async resets in processes).

31.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$631'.
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\ibus_cyc[0:0]
     6/7: $0\init_done[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$359'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$313'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$254'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
     5/10: $0\mstatus_mie[0:0]
     6/10: $0\mcause31[0:0]
     7/10: $0\mstatus_mpie[0:0]
     8/10: $0\timer_irq_r[0:0]
     9/10: $0\o_new_irq[0:0]
    10/10: $0\mie_mtie[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$152'.
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$151'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$144'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$131'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN[1:0]$128
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_DATA[1:0]$129
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_ADDR[9:0]$127
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$121'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$106'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$102'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$97'.
     1/1: $0\o_wb_dat[31:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$96'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$95'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$94'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$93'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$92'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$91'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$90'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$89'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
    10/13: $0\data_index[2:0]
    11/13: $0\state[1:0]
    12/13: $0\temp_done[0:0]
    13/13: $0\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$77'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$74'.
     1/1: $1\recieve[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$73'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
     1/14: $0\o_wb_rdt[31:0]
     2/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56
     3/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_DATA[31:0]$55
     4/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_ADDR[10:0]$54
     5/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59
     6/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_DATA[31:0]$58
     7/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_ADDR[10:0]$57
     8/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62
     9/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_DATA[31:0]$61
    10/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_ADDR[10:0]$60
    11/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65
    12/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_DATA[31:0]$64
    13/14: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_ADDR[10:0]$63
    14/14: $0\my_adr[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$49'.
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$48'.
     1/1: $0\recieve[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
     1/1: $1\o_wb_rdt[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
     1/6: $0\data_index[2:0]
     2/6: $0\state[1:0]
     3/6: $0\temp_data[7:0]
     4/6: $0\temp_done[0:0]
     5/6: $0\clock_count[6:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:146$24'.
     1/1: $0\recieve[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:136$23'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
     1/5: $0\my_adr[31:0]
     2/5: $0\data_to[7:0]
     3/5: $0\pc_active[0:0]
     4/5: $0\data_to_ble[7:0]
     5/5: $0\tx_active[0:0]

31.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$97'.
No latch inferred for signal `\service.\recieve' from process `\service.$proc$src/servant_1.2.1/service/service.v:146$24'.

31.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$631'.
  created $dff cell `$procdff$1074' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1075' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1076' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1077' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1078' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1079' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1090' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1091' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1092' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1093' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1094' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
  created $dff cell `$procdff$1095' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
  created $dff cell `$procdff$1096' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$359'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$313'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$313'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$254'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$152'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$151'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$144'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$144'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$144'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$131'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$121'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$106'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$102'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$102'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$77'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$77'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\my_adr' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1152' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1153' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1154' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1155' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
  created $dff cell `$procdff$1156' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$49'.
  created $dff cell `$procdff$1157' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\recieve' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$48'.
  created $dff cell `$procdff$1158' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1159' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\service.\my_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1169' with positive edge clock.

31.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$631'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$631'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$607'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$545'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$544'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$383'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$369'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$359'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$359'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$328'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$313'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$313'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$254'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$254'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$175'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$152'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$152'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$151'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$148'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$144'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$131'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$126'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$121'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$106'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$106'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$102'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$102'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$98'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$97'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$96'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$95'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$94'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$93'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$92'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$91'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$90'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$89'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$78'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$77'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$74'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$73'.
Found and cleaned up 5 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$53'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$49'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$49'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$48'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:146$24'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:136$23'.
Found and cleaned up 5 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:148$19'.
Cleaned up 62 empty switches.

31.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram for cells of type $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Using template $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant for cells of type $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Using template uart_tx for cells of type uart_tx.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template uart_rx for cells of type uart_rx.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~25 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module uart_rx.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Deleting now unused module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Deleting now unused module uart_tx.

31.6. Executing TRIBUF pass.

31.7. Executing DEMINOUT pass (demote inout ports to input or output).

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~96 debug messages>

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 142 unused cells and 609 unused wires.
<suppressed ~148 debug messages>

31.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

31.11. Executing OPT pass (performing simple optimizations).

31.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~303 debug messages>
Removed a total of 101 cells.

31.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1064: \pc_active -> 1'0
      Replacing known input bits on port A of cell $procmux$1070: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

31.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$132: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$548: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$260: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$479: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    New ctrl vector for $mux cell $procmux$1064: { }
    New ctrl vector for $mux cell $procmux$1070: { }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$968:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$974:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$980:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$986:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$45_EN[31:0]$65 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$731:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN[1:0]$128
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN[1:0]$128 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN[1:0]$128 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$125_EN[1:0]$128 [0]
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1055: { $techmap\tx_to_ble.$procmux$1022_CMP $techmap\tx_to_ble.$procmux$1005_CMP $auto$opt_reduce.cc:132:opt_mux$1171 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1055: { $techmap\tx_to_pc.$procmux$1022_CMP $techmap\tx_to_pc.$procmux$1005_CMP $auto$opt_reduce.cc:132:opt_mux$1173 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1170: { $techmap\tx_to_ble.$procmux$1011_CMP $techmap\tx_to_ble.$procmux$1006_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1172: { $techmap\tx_to_pc.$procmux$1011_CMP $techmap\tx_to_pc.$procmux$1006_CMP }
  Optimizing cells in module \service.
Performed a total of 15 changes.

31.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

31.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \my_adr = 3072 to constant driver in module service.
Promoting init spec \ram.recieve = 1'0 to constant driver in module service.
Promoting init spec \ram.my_adr = 11534336 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \tx_to_pc.temp_done = 1'0 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.state = 2'00 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.clock_count = 7'0000000 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.data_index = 3'000 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.rx_byte = 8'00000000 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.rx_bit = 1'1 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.r_Rx_temp = 1'1 to constant driver in module service.
Promoted 13 init specs to constant drivers.

31.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 115 unused wires.
<suppressed ~9 debug messages>

31.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.9. Rerunning OPT passes. (Maybe there is more to do..)

31.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

31.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1044: { $techmap\tx_to_ble.$procmux$1006_CMP $auto$opt_reduce.cc:132:opt_mux$1175 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1044: { $techmap\tx_to_pc.$procmux$1006_CMP $auto$opt_reduce.cc:132:opt_mux$1177 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1174: { $techmap\tx_to_ble.$procmux$1022_CMP $techmap\tx_to_ble.$procmux$1011_CMP $techmap\tx_to_ble.$procmux$1005_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1176: { $techmap\tx_to_pc.$procmux$1022_CMP $techmap\tx_to_pc.$procmux$1011_CMP $techmap\tx_to_pc.$procmux$1005_CMP }
  Optimizing cells in module \service.
Performed a total of 4 changes.

31.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.16. Rerunning OPT passes. (Maybe there is more to do..)

31.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

31.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.23. Finished OPT passes. (There is nothing left to do.)

31.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:69$68 (ram.mem).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:175$21 ($eq).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1156 ($dff).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:163$20 ($eq).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1153 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1150 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1147 ($dff).
Removed cell service.$techmap\ram.$procmux$990 ($mux).
Removed cell service.$techmap\ram.$procmux$988 ($mux).
Removed cell service.$techmap\ram.$procmux$984 ($mux).
Removed cell service.$techmap\ram.$procmux$982 ($mux).
Removed cell service.$techmap\ram.$procmux$978 ($mux).
Removed cell service.$techmap\ram.$procmux$976 ($mux).
Removed cell service.$techmap\ram.$procmux$972 ($mux).
Removed cell service.$techmap\ram.$procmux$970 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1024 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1022_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1013 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$32 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1024 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1022_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1013 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$32 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$111 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1126 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$735 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$733 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$149 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$143 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$143 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$543 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$537 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$367 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$367 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$560 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$161 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$154 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$280 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$272 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$353 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$347 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1153 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1150 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1147 ($dff).
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_DATA[31:0]$55.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN[31:0]$56.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_DATA[31:0]$58.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN[31:0]$59.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_DATA[31:0]$61.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN[31:0]$62.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$42_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$43_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$44_EN.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28_Y.
Removed top 29 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_ble.$procmux$1013_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_ble.$procmux$1024_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28_Y.
Removed top 29 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_pc.$procmux$1013_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_pc.$procmux$1024_Y.
Removed top 21 bits (of 32) from wire service.servant.arbiter.i_wb_cpu_ibus_adr.
Removed top 21 bits (of 32) from wire service.servant.cpu.cpu.ctrl.o_ibus_adr.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

31.13. Executing PEEPOPT pass (run peephole optimizers).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 37 unused wires.
<suppressed ~2 debug messages>

31.15. Executing SHARE pass (SAT-based resource sharing).

31.16. Executing TECHMAP pass (map to technology primitives).

31.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.16.2. Continuing TECHMAP pass.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~227 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

31.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$291 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$292 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$294 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$295 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$367 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$368 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$316 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$317 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$324 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$325 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$149 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$143 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$324 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$325.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$316 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$317.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$367 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$368.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$294 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$295.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$291 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$292.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$143.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$149.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$325.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$317.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$368.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$295.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$292.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33.
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$101 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27: $auto$alumacc.cc:474:replace_alu$1233
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27: $auto$alumacc.cc:474:replace_alu$1238
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$101: $auto$alumacc.cc:474:replace_alu$1243
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33: $auto$alumacc.cc:474:replace_alu$1256
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$292: $auto$alumacc.cc:474:replace_alu$1259
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28: $auto$alumacc.cc:474:replace_alu$1262
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$295: $auto$alumacc.cc:474:replace_alu$1265
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33: $auto$alumacc.cc:474:replace_alu$1268
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$368: $auto$alumacc.cc:474:replace_alu$1271
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$343: $auto$alumacc.cc:474:replace_alu$1274
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28: $auto$alumacc.cc:474:replace_alu$1277
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$317: $auto$alumacc.cc:474:replace_alu$1280
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100: $auto$alumacc.cc:474:replace_alu$1283
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$325: $auto$alumacc.cc:474:replace_alu$1286
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617: $auto$alumacc.cc:474:replace_alu$1289
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$149: $auto$alumacc.cc:474:replace_alu$1292
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$143: $auto$alumacc.cc:474:replace_alu$1295
  created 17 $alu and 0 $macc cells.

31.20. Executing OPT pass (performing simple optimizations).

31.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~12 debug messages>

31.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

31.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1254: { $auto$rtlil.cc:1832:Not$1253 $auto$rtlil.cc:1835:ReduceAnd$1247 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1246: { $auto$alumacc.cc:490:replace_alu$1244 [0] $auto$alumacc.cc:490:replace_alu$1244 [1] $auto$alumacc.cc:490:replace_alu$1244 [2] $auto$alumacc.cc:490:replace_alu$1244 [3] $auto$alumacc.cc:490:replace_alu$1244 [4] $auto$alumacc.cc:490:replace_alu$1244 [5] $auto$alumacc.cc:490:replace_alu$1244 [6] $auto$alumacc.cc:490:replace_alu$1244 [7] $auto$alumacc.cc:490:replace_alu$1244 [8] $auto$alumacc.cc:490:replace_alu$1244 [9] $auto$alumacc.cc:490:replace_alu$1244 [10] $auto$alumacc.cc:490:replace_alu$1244 [11] $auto$alumacc.cc:490:replace_alu$1244 [12] $auto$alumacc.cc:490:replace_alu$1244 [13] $auto$alumacc.cc:490:replace_alu$1244 [14] $auto$alumacc.cc:490:replace_alu$1244 [15] $auto$alumacc.cc:490:replace_alu$1244 [16] $auto$alumacc.cc:490:replace_alu$1244 [17] $auto$alumacc.cc:490:replace_alu$1244 [18] $auto$alumacc.cc:490:replace_alu$1244 [19] $auto$alumacc.cc:490:replace_alu$1244 [20] $auto$alumacc.cc:490:replace_alu$1244 [21] $auto$alumacc.cc:490:replace_alu$1244 [22] $auto$alumacc.cc:490:replace_alu$1244 [23] $auto$alumacc.cc:490:replace_alu$1244 [24] $auto$alumacc.cc:490:replace_alu$1244 [25] $auto$alumacc.cc:490:replace_alu$1244 [26] $auto$alumacc.cc:490:replace_alu$1244 [27] $auto$alumacc.cc:490:replace_alu$1244 [28] $auto$alumacc.cc:490:replace_alu$1244 [29] $auto$alumacc.cc:490:replace_alu$1244 [30] $auto$alumacc.cc:490:replace_alu$1244 [31] }
  Optimizing cells in module \service.
Performed a total of 2 changes.

31.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 7 unused cells and 13 unused wires.
<suppressed ~8 debug messages>

31.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.9. Rerunning OPT passes. (Maybe there is more to do..)

31.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

31.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.16. Finished OPT passes. (There is nothing left to do.)

31.21. Executing FSM pass (extract and optimize FSM).

31.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_pc.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

31.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

31.22. Executing OPT pass (performing simple optimizations).

31.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.22.5. Finished fast OPT passes.

31.23. Executing MEMORY pass.

31.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$69' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$70' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$71' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$72' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$136' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:61$67' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$130' in module `\service': merged data $dff to cell.

31.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 14 unused cells and 16 unused wires.
<suppressed ~15 debug messages>

31.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \clock_gen.pll.o_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$69) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$70) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$71) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$72) has addr \adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

31.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:69$68 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$72 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:61$67 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$136 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$130 ($memrd)

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

31.26. Executing TECHMAP pass (map to technology primitives).

31.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

31.26.2. Continuing TECHMAP pass.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$ea1f16c7747077142c75d256c25c294278ba7f80\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$d4fe3c6b58fc4d8948c754ba98c015ca60fbd308\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b99d8fc116edf30532d30b9688c531753845632a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1bfd5c614dbd8084fe537013134fb65bf6c1ec0f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

31.27. Executing ICE40_BRAMINIT pass.

31.28. Executing OPT pass (performing simple optimizations).

31.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~58 debug messages>

31.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

31.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 386 unused wires.
<suppressed ~2 debug messages>

31.28.5. Finished fast OPT passes.

31.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

31.30. Executing OPT pass (performing simple optimizations).

31.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~94 debug messages>

31.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1511\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [1] $auto$rtlil.cc:1906:Mux$1483 [2] $auto$rtlil.cc:1906:Mux$1483 [3] $auto$rtlil.cc:1906:Mux$1483 [4] $auto$rtlil.cc:1906:Mux$1483 [5] $auto$rtlil.cc:1906:Mux$1483 [6] $auto$rtlil.cc:1906:Mux$1483 [7] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [9] $auto$rtlil.cc:1906:Mux$1483 [10] $auto$rtlil.cc:1906:Mux$1483 [11] $auto$rtlil.cc:1906:Mux$1483 [12] $auto$rtlil.cc:1906:Mux$1483 [13] $auto$rtlil.cc:1906:Mux$1483 [14] $auto$rtlil.cc:1906:Mux$1483 [15] }
    New input vector for $reduce_or cell $techmap$techmap1510\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [1] $auto$rtlil.cc:1906:Mux$1379 [2] $auto$rtlil.cc:1906:Mux$1379 [3] $auto$rtlil.cc:1906:Mux$1379 [4] $auto$rtlil.cc:1906:Mux$1379 [5] $auto$rtlil.cc:1906:Mux$1379 [6] $auto$rtlil.cc:1906:Mux$1379 [7] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [9] $auto$rtlil.cc:1906:Mux$1379 [10] $auto$rtlil.cc:1906:Mux$1379 [11] $auto$rtlil.cc:1906:Mux$1379 [12] $auto$rtlil.cc:1906:Mux$1379 [13] $auto$rtlil.cc:1906:Mux$1379 [14] $auto$rtlil.cc:1906:Mux$1379 [15] }
    New input vector for $reduce_or cell $techmap$techmap1509\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [1] $auto$rtlil.cc:1906:Mux$1340 [2] $auto$rtlil.cc:1906:Mux$1340 [3] $auto$rtlil.cc:1906:Mux$1340 [4] $auto$rtlil.cc:1906:Mux$1340 [5] $auto$rtlil.cc:1906:Mux$1340 [6] $auto$rtlil.cc:1906:Mux$1340 [7] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [9] $auto$rtlil.cc:1906:Mux$1340 [10] $auto$rtlil.cc:1906:Mux$1340 [11] $auto$rtlil.cc:1906:Mux$1340 [12] $auto$rtlil.cc:1906:Mux$1340 [13] $auto$rtlil.cc:1906:Mux$1340 [14] $auto$rtlil.cc:1906:Mux$1340 [15] }
    New input vector for $reduce_or cell $techmap$techmap1508\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [1] $auto$rtlil.cc:1906:Mux$1470 [2] $auto$rtlil.cc:1906:Mux$1470 [3] $auto$rtlil.cc:1906:Mux$1470 [4] $auto$rtlil.cc:1906:Mux$1470 [5] $auto$rtlil.cc:1906:Mux$1470 [6] $auto$rtlil.cc:1906:Mux$1470 [7] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [9] $auto$rtlil.cc:1906:Mux$1470 [10] $auto$rtlil.cc:1906:Mux$1470 [11] $auto$rtlil.cc:1906:Mux$1470 [12] $auto$rtlil.cc:1906:Mux$1470 [13] $auto$rtlil.cc:1906:Mux$1470 [14] $auto$rtlil.cc:1906:Mux$1470 [15] }
    New input vector for $reduce_or cell $techmap$techmap1507\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [1] $auto$rtlil.cc:1906:Mux$1392 [2] $auto$rtlil.cc:1906:Mux$1392 [3] $auto$rtlil.cc:1906:Mux$1392 [4] $auto$rtlil.cc:1906:Mux$1392 [5] $auto$rtlil.cc:1906:Mux$1392 [6] $auto$rtlil.cc:1906:Mux$1392 [7] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [9] $auto$rtlil.cc:1906:Mux$1392 [10] $auto$rtlil.cc:1906:Mux$1392 [11] $auto$rtlil.cc:1906:Mux$1392 [12] $auto$rtlil.cc:1906:Mux$1392 [13] $auto$rtlil.cc:1906:Mux$1392 [14] $auto$rtlil.cc:1906:Mux$1392 [15] }
    New input vector for $reduce_or cell $techmap$techmap1506\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [1] $auto$rtlil.cc:1906:Mux$1366 [2] $auto$rtlil.cc:1906:Mux$1366 [3] $auto$rtlil.cc:1906:Mux$1366 [4] $auto$rtlil.cc:1906:Mux$1366 [5] $auto$rtlil.cc:1906:Mux$1366 [6] $auto$rtlil.cc:1906:Mux$1366 [7] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [9] $auto$rtlil.cc:1906:Mux$1366 [10] $auto$rtlil.cc:1906:Mux$1366 [11] $auto$rtlil.cc:1906:Mux$1366 [12] $auto$rtlil.cc:1906:Mux$1366 [13] $auto$rtlil.cc:1906:Mux$1366 [14] $auto$rtlil.cc:1906:Mux$1366 [15] }
    New input vector for $reduce_or cell $techmap$techmap1503\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [1] $auto$rtlil.cc:1906:Mux$1353 [2] $auto$rtlil.cc:1906:Mux$1353 [3] $auto$rtlil.cc:1906:Mux$1353 [4] $auto$rtlil.cc:1906:Mux$1353 [5] $auto$rtlil.cc:1906:Mux$1353 [6] $auto$rtlil.cc:1906:Mux$1353 [7] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [9] $auto$rtlil.cc:1906:Mux$1353 [10] $auto$rtlil.cc:1906:Mux$1353 [11] $auto$rtlil.cc:1906:Mux$1353 [12] $auto$rtlil.cc:1906:Mux$1353 [13] $auto$rtlil.cc:1906:Mux$1353 [14] $auto$rtlil.cc:1906:Mux$1353 [15] }
    New input vector for $reduce_or cell $techmap$techmap1502\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [1] $auto$rtlil.cc:1906:Mux$1444 [2] $auto$rtlil.cc:1906:Mux$1444 [3] $auto$rtlil.cc:1906:Mux$1444 [4] $auto$rtlil.cc:1906:Mux$1444 [5] $auto$rtlil.cc:1906:Mux$1444 [6] $auto$rtlil.cc:1906:Mux$1444 [7] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [9] $auto$rtlil.cc:1906:Mux$1444 [10] $auto$rtlil.cc:1906:Mux$1444 [11] $auto$rtlil.cc:1906:Mux$1444 [12] $auto$rtlil.cc:1906:Mux$1444 [13] $auto$rtlil.cc:1906:Mux$1444 [14] $auto$rtlil.cc:1906:Mux$1444 [15] }
    New input vector for $reduce_or cell $techmap$techmap1501\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [1] $auto$rtlil.cc:1906:Mux$1418 [2] $auto$rtlil.cc:1906:Mux$1418 [3] $auto$rtlil.cc:1906:Mux$1418 [4] $auto$rtlil.cc:1906:Mux$1418 [5] $auto$rtlil.cc:1906:Mux$1418 [6] $auto$rtlil.cc:1906:Mux$1418 [7] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [9] $auto$rtlil.cc:1906:Mux$1418 [10] $auto$rtlil.cc:1906:Mux$1418 [11] $auto$rtlil.cc:1906:Mux$1418 [12] $auto$rtlil.cc:1906:Mux$1418 [13] $auto$rtlil.cc:1906:Mux$1418 [14] $auto$rtlil.cc:1906:Mux$1418 [15] }
    New input vector for $reduce_or cell $techmap$techmap1500\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [1] $auto$rtlil.cc:1906:Mux$1457 [2] $auto$rtlil.cc:1906:Mux$1457 [3] $auto$rtlil.cc:1906:Mux$1457 [4] $auto$rtlil.cc:1906:Mux$1457 [5] $auto$rtlil.cc:1906:Mux$1457 [6] $auto$rtlil.cc:1906:Mux$1457 [7] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [9] $auto$rtlil.cc:1906:Mux$1457 [10] $auto$rtlil.cc:1906:Mux$1457 [11] $auto$rtlil.cc:1906:Mux$1457 [12] $auto$rtlil.cc:1906:Mux$1457 [13] $auto$rtlil.cc:1906:Mux$1457 [14] $auto$rtlil.cc:1906:Mux$1457 [15] }
    New input vector for $reduce_or cell $techmap$techmap1499\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1498: { $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [1] $auto$rtlil.cc:1906:Mux$1405 [2] $auto$rtlil.cc:1906:Mux$1405 [3] $auto$rtlil.cc:1906:Mux$1405 [4] $auto$rtlil.cc:1906:Mux$1405 [5] $auto$rtlil.cc:1906:Mux$1405 [6] $auto$rtlil.cc:1906:Mux$1405 [7] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [9] $auto$rtlil.cc:1906:Mux$1405 [10] $auto$rtlil.cc:1906:Mux$1405 [11] $auto$rtlil.cc:1906:Mux$1405 [12] $auto$rtlil.cc:1906:Mux$1405 [13] $auto$rtlil.cc:1906:Mux$1405 [14] $auto$rtlil.cc:1906:Mux$1405 [15] }
    New input vector for $reduce_or cell $techmap$techmap1496\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1495: { $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [1] $auto$rtlil.cc:1906:Mux$1314 [2] $auto$rtlil.cc:1906:Mux$1314 [3] $auto$rtlil.cc:1906:Mux$1314 [4] $auto$rtlil.cc:1906:Mux$1314 [5] $auto$rtlil.cc:1906:Mux$1314 [6] $auto$rtlil.cc:1906:Mux$1314 [7] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [9] $auto$rtlil.cc:1906:Mux$1314 [10] $auto$rtlil.cc:1906:Mux$1314 [11] $auto$rtlil.cc:1906:Mux$1314 [12] $auto$rtlil.cc:1906:Mux$1314 [13] $auto$rtlil.cc:1906:Mux$1314 [14] $auto$rtlil.cc:1906:Mux$1314 [15] }
    New input vector for $reduce_or cell $techmap$techmap1493\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [1] $auto$rtlil.cc:1906:Mux$1327 [2] $auto$rtlil.cc:1906:Mux$1327 [3] $auto$rtlil.cc:1906:Mux$1327 [4] $auto$rtlil.cc:1906:Mux$1327 [5] $auto$rtlil.cc:1906:Mux$1327 [6] $auto$rtlil.cc:1906:Mux$1327 [7] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [9] $auto$rtlil.cc:1906:Mux$1327 [10] $auto$rtlil.cc:1906:Mux$1327 [11] $auto$rtlil.cc:1906:Mux$1327 [12] $auto$rtlil.cc:1906:Mux$1327 [13] $auto$rtlil.cc:1906:Mux$1327 [14] $auto$rtlil.cc:1906:Mux$1327 [15] }
    New input vector for $reduce_or cell $techmap$techmap1492\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [1] $auto$rtlil.cc:1906:Mux$1431 [2] $auto$rtlil.cc:1906:Mux$1431 [3] $auto$rtlil.cc:1906:Mux$1431 [4] $auto$rtlil.cc:1906:Mux$1431 [5] $auto$rtlil.cc:1906:Mux$1431 [6] $auto$rtlil.cc:1906:Mux$1431 [7] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [9] $auto$rtlil.cc:1906:Mux$1431 [10] $auto$rtlil.cc:1906:Mux$1431 [11] $auto$rtlil.cc:1906:Mux$1431 [12] $auto$rtlil.cc:1906:Mux$1431 [13] $auto$rtlil.cc:1906:Mux$1431 [14] $auto$rtlil.cc:1906:Mux$1431 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1313:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1314
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1314 [15:9] $auto$rtlil.cc:1906:Mux$1314 [7:1] } = { $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [8] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1326:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1327
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1327 [15:9] $auto$rtlil.cc:1906:Mux$1327 [7:1] } = { $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [8] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1339:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1340
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1340 [15:9] $auto$rtlil.cc:1906:Mux$1340 [7:1] } = { $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [8] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1352:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1353
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1353 [15:9] $auto$rtlil.cc:1906:Mux$1353 [7:1] } = { $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [8] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1365:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1366
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1366 [15:9] $auto$rtlil.cc:1906:Mux$1366 [7:1] } = { $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [8] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1378:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1379
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1379 [15:9] $auto$rtlil.cc:1906:Mux$1379 [7:1] } = { $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [8] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1391:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1392
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1392 [15:9] $auto$rtlil.cc:1906:Mux$1392 [7:1] } = { $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [8] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1404:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1405
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1405 [15:9] $auto$rtlil.cc:1906:Mux$1405 [7:1] } = { $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [8] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1417:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1418
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1418 [15:9] $auto$rtlil.cc:1906:Mux$1418 [7:1] } = { $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [8] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1430:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1431
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1431 [15:9] $auto$rtlil.cc:1906:Mux$1431 [7:1] } = { $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [8] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1443:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1444
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1444 [15:9] $auto$rtlil.cc:1906:Mux$1444 [7:1] } = { $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [8] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1456:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1457
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1457 [15:9] $auto$rtlil.cc:1906:Mux$1457 [7:1] } = { $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [8] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1469:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1470
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1470 [15:9] $auto$rtlil.cc:1906:Mux$1470 [7:1] } = { $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [8] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1482:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1483
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1483 [15:9] $auto$rtlil.cc:1906:Mux$1483 [7:1] } = { $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [8] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [0] }
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1008:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1008_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1008_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1008_Y [1] = $techmap\tx_to_ble.$procmux$1008_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1016:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1190 [0] }, Y=$techmap\tx_to_ble.$procmux$1016_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1190 [0], Y=$techmap\tx_to_ble.$procmux$1016_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1016_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1008:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1008_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1008_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1008_Y [1] = $techmap\tx_to_pc.$procmux$1008_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1016:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1194 [0] }, Y=$techmap\tx_to_pc.$procmux$1016_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1194 [0], Y=$techmap\tx_to_pc.$procmux$1016_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1016_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1511\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1483 [0] $auto$rtlil.cc:1906:Mux$1483 [8] }
    New input vector for $reduce_or cell $techmap$techmap1510\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1379 [0] $auto$rtlil.cc:1906:Mux$1379 [8] }
    New input vector for $reduce_or cell $techmap$techmap1509\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1340 [0] $auto$rtlil.cc:1906:Mux$1340 [8] }
    New input vector for $reduce_or cell $techmap$techmap1508\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1470 [0] $auto$rtlil.cc:1906:Mux$1470 [8] }
    New input vector for $reduce_or cell $techmap$techmap1507\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1392 [0] $auto$rtlil.cc:1906:Mux$1392 [8] }
    New input vector for $reduce_or cell $techmap$techmap1506\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1366 [0] $auto$rtlil.cc:1906:Mux$1366 [8] }
    New input vector for $reduce_or cell $techmap$techmap1503\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1353 [0] $auto$rtlil.cc:1906:Mux$1353 [8] }
    New input vector for $reduce_or cell $techmap$techmap1502\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1444 [0] $auto$rtlil.cc:1906:Mux$1444 [8] }
    New input vector for $reduce_or cell $techmap$techmap1501\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1418 [0] $auto$rtlil.cc:1906:Mux$1418 [8] }
    New input vector for $reduce_or cell $techmap$techmap1500\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1457 [0] $auto$rtlil.cc:1906:Mux$1457 [8] }
    New input vector for $reduce_or cell $techmap$techmap1499\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1498: { $auto$rtlil.cc:1906:Mux$1405 [0] $auto$rtlil.cc:1906:Mux$1405 [8] }
    New input vector for $reduce_or cell $techmap$techmap1496\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1495: { $auto$rtlil.cc:1906:Mux$1314 [0] $auto$rtlil.cc:1906:Mux$1314 [8] }
    New input vector for $reduce_or cell $techmap$techmap1493\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1327 [0] $auto$rtlil.cc:1906:Mux$1327 [8] }
    New input vector for $reduce_or cell $techmap$techmap1492\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1491: { $auto$rtlil.cc:1906:Mux$1431 [0] $auto$rtlil.cc:1906:Mux$1431 [8] }
  Optimizing cells in module \service.
Performed a total of 46 changes.

31.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

31.30.9. Rerunning OPT passes. (Maybe there is more to do..)

31.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~94 debug messages>

31.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

31.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.16. Finished OPT passes. (There is nothing left to do.)

31.31. Executing TECHMAP pass (map to technology primitives).

31.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

31.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~1374 debug messages>

31.32. Executing ICE40_OPT pass (performing simple optimizations).

31.32.1. Running ICE40 specific optimizations.

31.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~453 debug messages>

31.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~198 debug messages>
Removed a total of 66 cells.

31.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 159 unused cells and 699 unused wires.
<suppressed ~164 debug messages>

31.32.6. Rerunning OPT passes. (Removed registers in this run.)

31.32.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1233.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1238.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1256.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1262.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1268.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1274.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1277.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1283.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1292.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1295.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1256.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1262.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1268.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1274.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1277.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1283.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1292.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1295.slice[1].adder back to logic.

31.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~102 debug messages>

31.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

31.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

31.32.12. Rerunning OPT passes. (Removed registers in this run.)

31.32.13. Running ICE40 specific optimizations.

31.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.18. Finished OPT passes. (There is nothing left to do.)

31.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

31.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1788 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1789 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1790 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1791 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1792 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1793 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1794 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1795 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1797 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1798 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1799 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1800 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1801 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1802 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1803 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1804 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1850 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1858 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1859 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1860 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1863 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1864 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1865 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1866 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1867 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1868 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1869 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1870 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2009 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2015 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2016 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2017 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$1975_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2020 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2021 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2022 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2023 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2024 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2025 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2026 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2027 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1032.$ternary$/usr/bin/../share/yosys/techmap.v:445$1940_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2108 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2109 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2119 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2120 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2121 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2122 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2123 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2124 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2125 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2126 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2127 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2128 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2129 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2130 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2131 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2132 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2133 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2134 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2135 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2136 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2137 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2139 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2305 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2444 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2481 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2591 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2592 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2593 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2594 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2595 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2596 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2597 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2598 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2599 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2600 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2601 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2602 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2759 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2760 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2761 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2762 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2763 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2764 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2765 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2766 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2767 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2768 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2769 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2770 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2771 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2772 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2773 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2774 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2775 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2776 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2777 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2778 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2779 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2780 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2781 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2782 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2783 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2784 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2785 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2786 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2787 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2788 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2789 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2790 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2835 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2873 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2877 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2878 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2879 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3006 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3007 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3008 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3009 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3010 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3011 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3012 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3013 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3014 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3015 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3016 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3017 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3018 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3019 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3020 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3021 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3022 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3023 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3024 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3025 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3026 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3027 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3028 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3029 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3030 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3031 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3032 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3033 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3110 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3111 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3112 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3113 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3114 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3115 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3116 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3117 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3118 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3196 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3197 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3198 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3199 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3200 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3201 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3202 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3203 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3204 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3205 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3206 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3207 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3208 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3209 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3210 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3211 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3212 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3213 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3214 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3215 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3216 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3217 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3218 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3219 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3220 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3221 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3222 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3223 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3224 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3225 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3227 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3423 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3424 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3425 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3426 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3427 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3428 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3429 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3430 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3431 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3432 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3433 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3434 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3435 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3436 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3437 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3438 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3439 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3440 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3441 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3442 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3443 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3444 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3445 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3446 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3447 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3448 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3449 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3450 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3451 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3452 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3453 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3454 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3517 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.

31.35. Executing TECHMAP pass (map to technology primitives).

31.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

31.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~319 debug messages>

31.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~442 debug messages>

31.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1852 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1851 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1854 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1849 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1853 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1864 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1860 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1858 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1861 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1850 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1868 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1871 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1869 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2009 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1863 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2010 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2011 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2012 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2013 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2014 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2017 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2016 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2008 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2018 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2021 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2027 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2026 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2022 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2023 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2024 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2025 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2015 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2028 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2020 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1867 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1866 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1865 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1862 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1855 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1859 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1870 (SB_DFFE): \tx_to_ble.temp_data [7] = 1

31.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$1928 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1852 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2185 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1816 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:52$52_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$1813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2309 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$108_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1927 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1851 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1930 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1854 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1925 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1849 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1929 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1853 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3267 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3264 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2892 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2870 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1926 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2265 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2046 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2047 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2010 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2048 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2011 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2049 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2012 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2050 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2013 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2051 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2014 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2045 (A=1'0, B=$techmap\tx_to_pc.$procmux$1042_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2008 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4371 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1010.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$1969_Y, S=$auto$opt_reduce.cc:132:opt_mux$1177) into $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2201 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2136 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2177 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2176 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2174 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2172 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2175 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2264 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2184 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2181 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2182 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2179 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2180 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2183 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2261 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2178 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2186 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2187 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2188 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2189 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2190 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2191 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2192 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2127 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2193 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2128 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2194 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2129 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2195 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2130 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2196 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2131 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2197 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2198 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2133 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2199 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2134 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2200 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2135 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2202 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2137 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2236 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$4820 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2139 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2239 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2237 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2140 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2235 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2242 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2240 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2238 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2141 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2246 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2244 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2171 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2241 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2247 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2245 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2249 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2250 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2251 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2252 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2253 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2254 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2256 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2262 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2257 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2258 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2259 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2260 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2255 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2263 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2173 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2266 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2248 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2243 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$100_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2445 (A=$techmap\servant.cpu.rf_ram_if.$procmux$727_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2437 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2446 (A=$techmap\servant.cpu.rf_ram_if.$procmux$727_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2438 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2455 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2434 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2447 (A=$techmap\servant.cpu.rf_ram_if.$procmux$727_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2439 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2448 (A=$techmap\servant.cpu.rf_ram_if.$procmux$727_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2440 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2449 (A=$techmap\servant.cpu.rf_ram_if.$procmux$727_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2441 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2458 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$2443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2456 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2436 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2888 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2875 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2889 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2876 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2885 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$615_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2867 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2891 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2869 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2890 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$622_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2868 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2886 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$616_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2872 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2893 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2871 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2887 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$617_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2874 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2882 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$612_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2877 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2880 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$613_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2878 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2894 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$632_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2879 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3119 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4688 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1010.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$1969_Y, S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1862 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3281 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3284 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3291 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1931 (A=1'0, B=$techmap\tx_to_ble.$procmux$1042_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1175) into $auto$simplemap.cc:420:simplemap_dff$1855 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3121 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$179_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3265 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3266 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3268 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3269 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3270 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3271 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3272 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3273 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3274 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3279 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3280 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3277 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3278 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3283 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3282 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3276 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3275 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3285 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3286 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3287 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3288 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3289 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3290 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3293 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3294 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3292 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3263 (A=1'0, B=\servant.cpu.cpu.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3196 (SB_DFFE).

31.40. Executing ICE40_OPT pass (performing simple optimizations).

31.40.1. Running ICE40 specific optimizations.

31.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~162 debug messages>

31.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

31.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 136 unused cells and 1863 unused wires.
<suppressed ~137 debug messages>

31.40.6. Rerunning OPT passes. (Removed registers in this run.)

31.40.7. Running ICE40 specific optimizations.

31.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.40.12. Finished OPT passes. (There is nothing left to do.)

31.41. Executing TECHMAP pass (map to technology primitives).

31.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.41.2. Continuing TECHMAP pass.
No more expansions possible.

31.42. Executing ABC pass (technology mapping using ABC).

31.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
Extracted 1471 gates and 2031 wires to a netlist network with 558 inputs and 305 outputs.

31.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     577.
ABC: Participating nodes from both networks       =    1257.
ABC: Participating nodes from the first network   =     578. (  81.75 % of nodes)
ABC: Participating nodes from the second network  =     679. (  96.04 % of nodes)
ABC: Node pairs (any polarity)                    =     578. (  81.75 % of names can be moved)
ABC: Node pairs (same polarity)                   =     470. (  66.48 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

31.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1412
ABC RESULTS:        internal signals:     1168
ABC RESULTS:           input signals:      558
ABC RESULTS:          output signals:      305
Removing temp directory.
Removed 0 unused cells and 1281 unused wires.

31.43. Executing TECHMAP pass (map to technology primitives).

31.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
No more expansions possible.
<suppressed ~2013 debug messages>
Removed 0 unused cells and 1408 unused wires.

31.44. Executing HIERARCHY pass (managing design hierarchy).

31.44.1. Analyzing design hierarchy..
Top module:  \service

31.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

31.45. Printing statistics.

=== service ===

   Number of wires:               1385
   Number of wire bits:           4072
   Number of public wires:         450
   Number of public wire bits:    2984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1200
     SB_CARRY                       98
     SB_DFF                         28
     SB_DFFE                       155
     SB_DFFESR                      72
     SB_DFFSR                       63
     SB_DFFSS                        1
     SB_LUT4                       767
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

31.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32. Executing JSON backend.

Warnings: 6 unique messages, 21 total
End of script. Logfile hash: 452db7ea4e
CPU: user 2.77s system 0.05s, MEM: 83.02 MB total, 64.85 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 24% 23x opt_clean (0 sec), 14% 23x opt_expr (0 sec), ...
