
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/service/queue.v
Parsing Verilog input from `src/servant_1.2.1/service/queue.v' to AST representation.
Storing AST representation for module `$abstract\queue'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant.v
Parsing Verilog input from `src/servant_1.2.1/service/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/service/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/service/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: src/servant_1.2.1/service/service.v
Parsing Verilog input from `src/servant_1.2.1/service/service.v' to AST representation.
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile
Generating RTLIL representation for module `$paramod$f1f69d35145dc335c26e91ab6cce31100837bffd\service'.
<<<<<<< HEAD
=======
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:141.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:142.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:152.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:154.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:156.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:162.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:166.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:167.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:172.
>>>>>>> refs/remotes/origin/main

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
<<<<<<< HEAD
=======
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:141.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:142.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:152.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:154.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:156.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:162.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:166.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:167.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:172.
>>>>>>> refs/remotes/origin/main

31. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
<<<<<<< HEAD
=======
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:141.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:142.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:152.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:154.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:156.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:162.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:166.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:167.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:172.
>>>>>>> refs/remotes/origin/main

32. Executing SYNTH_ICE40 pass.

32.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

32.2. Executing HIERARCHY pass (managing design hierarchy).

32.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
<<<<<<< HEAD
=======
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:141.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:142.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:152.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:154.
Warning: wire '\write_queue' is assigned in a block at src/servant_1.2.1/service/service.v:156.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:162.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:166.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:167.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:172.
>>>>>>> refs/remotes/origin/main

32.3.1. Analyzing design hierarchy..
Top module:  \service

<<<<<<< HEAD
32.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
=======
32.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\queue'.
Generating RTLIL representation for module `\queue'.
Warning: wire '\o_wb_rdt' is assigned in a block at src/servant_1.2.1/service/queue.v:25.
Warning: wire '\o_wb_rdt' is assigned in a block at src/servant_1.2.1/service/queue.v:48.

32.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
>>>>>>> refs/remotes/origin/main
Generating RTLIL representation for module `\uart_tx'.

<<<<<<< HEAD
32.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

32.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
=======
32.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

32.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
>>>>>>> refs/remotes/origin/main
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile
Generating RTLIL representation for module `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram'.
Preloading $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram from /home/paul/Bachelor_Project/fusesoc_libraries/serv/sw/simple_BLE.hex

<<<<<<< HEAD
32.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
=======
32.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
>>>>>>> refs/remotes/origin/main
Parameter \memfile
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant'.

<<<<<<< HEAD
32.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

32.3.7. Analyzing design hierarchy..
=======
32.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

32.3.8. Analyzing design hierarchy..
>>>>>>> refs/remotes/origin/main
Top module:  \service
Used module:     \queue
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

<<<<<<< HEAD
32.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
=======
32.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
>>>>>>> refs/remotes/origin/main
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/service/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

<<<<<<< HEAD
32.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
=======
32.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
>>>>>>> refs/remotes/origin/main
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

<<<<<<< HEAD
32.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

32.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

32.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

32.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

32.3.14. Analyzing design hierarchy..
=======
32.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

32.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

32.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

32.3.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

32.3.15. Analyzing design hierarchy..
>>>>>>> refs/remotes/origin/main
Top module:  \service
Used module:     \queue
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

<<<<<<< HEAD
32.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
=======
32.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
>>>>>>> refs/remotes/origin/main
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

<<<<<<< HEAD
32.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
=======
32.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
>>>>>>> refs/remotes/origin/main
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

<<<<<<< HEAD
32.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
=======
32.3.18. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
>>>>>>> refs/remotes/origin/main
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

<<<<<<< HEAD
32.3.18. Analyzing design hierarchy..
=======
32.3.19. Analyzing design hierarchy..
>>>>>>> refs/remotes/origin/main
Top module:  \service
Used module:     \queue
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

<<<<<<< HEAD
32.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

32.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

32.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

32.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

32.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
=======
32.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

32.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

32.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

32.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

32.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
>>>>>>> refs/remotes/origin/main
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

<<<<<<< HEAD
32.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

32.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

32.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

32.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
=======
32.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

32.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

32.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

32.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
>>>>>>> refs/remotes/origin/main
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

<<<<<<< HEAD
32.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
=======
32.3.29. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
>>>>>>> refs/remotes/origin/main
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

<<<<<<< HEAD
32.3.29. Analyzing design hierarchy..
=======
32.3.30. Analyzing design hierarchy..
>>>>>>> refs/remotes/origin/main
Top module:  \service
Used module:     \queue
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

<<<<<<< HEAD
32.3.30. Analyzing design hierarchy..
=======
32.3.31. Analyzing design hierarchy..
>>>>>>> refs/remotes/origin/main
Top module:  \service
Used module:     \queue
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\queue'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 28 unused modules.

32.4. Executing PROC pass (convert processes to netlists).

32.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
<<<<<<< HEAD
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$349'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$349'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$107'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$107'.
Found and cleaned up 1 empty switch in `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
Cleaned up 8 empty switches.

32.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$110 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:29$84 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$59 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$59 in module uart_rx.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$41 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$41 in module uart_tx.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/service.v:145$31 in module service.
Removed a total of 2 dead cases.

32.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$77'.
=======
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$807'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$513'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$513'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$271'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$271'.
Found and cleaned up 1 empty switch in `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
Cleaned up 8 empty switches.

32.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$274 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:29$248 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$223 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$223 in module uart_rx.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$205 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$205 in module uart_tx.
Marked 2 switch rules as full_case in process $proc$src/servant_1.2.1/service/queue.v:21$148 in module queue.
Marked 2 switch rules as full_case in process $proc$src/servant_1.2.1/service/service.v:139$103 in module service.
Removed a total of 2 dead cases.

32.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$241'.
>>>>>>> refs/remotes/origin/main
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$240'.
  Set init value: \clock_count = 7'0000000
<<<<<<< HEAD
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
  Set init value: \data_index = 4'0000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
=======
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$239'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$238'.
>>>>>>> refs/remotes/origin/main
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$237'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$236'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$235'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$234'.
  Set init value: \r_Rx_temp = 1'1
<<<<<<< HEAD
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
  Set init value: \data_index = 4'0000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
=======
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$221'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$220'.
>>>>>>> refs/remotes/origin/main
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$219'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$218'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$217'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$216'.
  Set init value: \o_wb_rdt = 1'1
<<<<<<< HEAD
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:132$40'.
=======
Found init rule in `\queue.$proc$src/servant_1.2.1/service/queue.v:18$204'.
  Set init value: \addr = 4'1111
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:126$136'.
>>>>>>> refs/remotes/origin/main
  Set init value: \ble_data_adr = 12582912

32.4.4. Executing PROC_ARST pass (detect async resets in processes).

32.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
<<<<<<< HEAD
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
=======
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$807'.
>>>>>>> refs/remotes/origin/main
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\init_done[0:0]
     6/7: $0\ibus_cyc[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$535'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$489'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$430'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
<<<<<<< HEAD
     5/10: $0\mstatus_mpie[0:0]
     6/10: $0\mstatus_mie[0:0]
     7/10: $0\mie_mtie[0:0]
     8/10: $0\timer_irq_r[0:0]
     9/10: $0\o_new_irq[0:0]
    10/10: $0\mcause31[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
=======
     5/10: $0\mie_mtie[0:0]
     6/10: $0\mstatus_mie[0:0]
     7/10: $0\mcause31[0:0]
     8/10: $0\mstatus_mpie[0:0]
     9/10: $0\timer_irq_r[0:0]
    10/10: $0\o_new_irq[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$328'.
>>>>>>> refs/remotes/origin/main
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$327'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$320'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$307'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN[1:0]$304
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_DATA[1:0]$305
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_ADDR[9:0]$303
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$297'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$282'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$278'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$273'.
     1/1: $0\o_wb_dat[31:0]
<<<<<<< HEAD
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
     1/13: $0\o_wb_rdt[31:0]
     2/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90
     3/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_DATA[31:0]$91
     4/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_ADDR[10:0]$94
     5/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93
     6/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_DATA[31:0]$92
     7/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_ADDR[10:0]$89
     8/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97
     9/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_DATA[31:0]$96
    10/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_ADDR[10:0]$95
    11/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100
    12/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_DATA[31:0]$99
    13/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_ADDR[10:0]$98
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$84'.
=======
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
     1/13: $0\o_wb_rdt[31:0]
     2/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255
     3/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_DATA[31:0]$259
     4/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_ADDR[10:0]$254
     5/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257
     6/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_DATA[31:0]$253
     7/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_ADDR[10:0]$256
     8/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261
     9/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_DATA[31:0]$260
    10/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_ADDR[10:0]$258
    11/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264
    12/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_DATA[31:0]$263
    13/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_ADDR[10:0]$262
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$248'.
>>>>>>> refs/remotes/origin/main
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$241'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$240'.
     1/1: $1\clock_count[6:0]
<<<<<<< HEAD
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
     1/1: $1\data_index[3:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
=======
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$239'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$238'.
>>>>>>> refs/remotes/origin/main
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$237'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$236'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$235'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$234'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
<<<<<<< HEAD
    10/13: $0\clock_count[6:0]
    11/13: $0\state[1:0]
    12/13: $0\temp_done[0:0]
    13/13: $0\data_index[3:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
     1/1: $1\data_index[3:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
=======
    10/13: $0\temp_done[0:0]
    11/13: $0\clock_count[6:0]
    12/13: $0\state[1:0]
    13/13: $0\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$222'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$221'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$220'.
>>>>>>> refs/remotes/origin/main
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$219'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$218'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$217'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$216'.
     1/1: $1\o_wb_rdt[0:0]
<<<<<<< HEAD
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
     1/6: $0\clock_count[6:0]
     2/6: $0\state[1:0]
     3/6: $0\temp_data[7:0]
     4/6: $0\temp_done[0:0]
     5/6: $0\data_index[3:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:132$40'.
     1/1: $1\ble_data_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
     1/5: $0\ble_data_adr[31:0]
     2/5: $0\data_to[7:0]
     3/5: $0\pc_active[0:0]
     4/5: $0\data_to_ble[7:0]
     5/5: $0\tx_active[0:0]

32.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$109'.

32.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
  created $dff cell `$procdff$1097' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1098' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1099' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1100' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1101' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1102' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1103' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1104' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1105' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1106' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1107' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$163'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$143'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$133'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
  created $dff cell `$procdff$1152' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
  created $dff cell `$procdff$1153' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
  created $dff cell `$procdff$1154' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1155' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1156' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1157' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1158' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1159' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$84'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `\service.\ble_data_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
  created $dff cell `$procdff$1190' with positive edge clock.

32.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$163'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$143'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$133'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$109'.
Found and cleaned up 4 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$88'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$84'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$84'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$77'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$76'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$73'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$72'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$71'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$70'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$55'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$54'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$53'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$52'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:132$40'.
Found and cleaned up 3 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:145$31'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:145$31'.
Cleaned up 59 empty switches.
=======
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
     1/6: $0\temp_done[0:0]
     2/6: $0\clock_count[6:0]
     3/6: $0\state[1:0]
     4/6: $0\temp_data[7:0]
     5/6: $0\data_index[2:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\queue.$proc$src/servant_1.2.1/service/queue.v:18$204'.
     1/1: $1\addr[3:0]
Creating decoders for process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
     1/33: $0\o_wb_rdt[7:0]
     2/33: $0$mem2bits$\queue$src/servant_1.2.1/service/queue.v:48$137[7:0]$155
     3/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151
     4/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_DATA[7:0]$156
     5/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_ADDR[3:0]$150
     6/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154
     7/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_DATA[7:0]$153
     8/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_ADDR[31:0]$152
     9/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158
    10/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_DATA[7:0]$157
    11/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_ADDR[31:0]$149
    12/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161
    13/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_DATA[7:0]$160
    14/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_ADDR[31:0]$159
    15/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164
    16/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_DATA[7:0]$163
    17/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_ADDR[31:0]$162
    18/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167
    19/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_DATA[7:0]$166
    20/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_ADDR[31:0]$165
    21/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170
    22/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_DATA[7:0]$169
    23/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_ADDR[31:0]$168
    24/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173
    25/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_DATA[7:0]$172
    26/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_ADDR[31:0]$171
    27/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176
    28/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_DATA[7:0]$175
    29/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_ADDR[31:0]$174
    30/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179
    31/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_DATA[7:0]$178
    32/33: $0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_ADDR[31:0]$177
    33/33: $0\addr[3:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:126$136'.
     1/1: $1\ble_data_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
     1/6: $0\write_queue[0:0]
     2/6: $0\ble_data_adr[31:0]
     3/6: $0\data_to[7:0]
     4/6: $0\pc_active[0:0]
     5/6: $0\data_to_ble[7:0]
     6/6: $0\tx_active[0:0]

32.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$273'.

32.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$807'.
  created $dff cell `$procdff$1511' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1512' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1513' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1514' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1515' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1516' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1517' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
  created $dff cell `$procdff$1518' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1519' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1520' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1521' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1522' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1523' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1524' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1525' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
  created $dff cell `$procdff$1526' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1527' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1528' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1529' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1530' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1531' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
  created $dff cell `$procdff$1532' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
  created $dff cell `$procdff$1533' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
  created $dff cell `$procdff$1534' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
  created $dff cell `$procdff$1535' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$535'.
  created $dff cell `$procdff$1536' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
  created $dff cell `$procdff$1537' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
  created $dff cell `$procdff$1538' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
  created $dff cell `$procdff$1539' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$489'.
  created $dff cell `$procdff$1540' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$489'.
  created $dff cell `$procdff$1541' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$430'.
  created $dff cell `$procdff$1542' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1543' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1544' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1545' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1546' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1547' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1548' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
  created $dff cell `$procdff$1549' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$328'.
  created $dff cell `$procdff$1550' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$327'.
  created $dff cell `$procdff$1551' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
  created $dff cell `$procdff$1552' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
  created $dff cell `$procdff$1553' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
  created $dff cell `$procdff$1554' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
  created $dff cell `$procdff$1555' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
  created $dff cell `$procdff$1556' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$320'.
  created $dff cell `$procdff$1557' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$320'.
  created $dff cell `$procdff$1558' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$320'.
  created $dff cell `$procdff$1559' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$307'.
  created $dff cell `$procdff$1560' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
  created $dff cell `$procdff$1561' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
  created $dff cell `$procdff$1562' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
  created $dff cell `$procdff$1563' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
  created $dff cell `$procdff$1564' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$297'.
  created $dff cell `$procdff$1565' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$282'.
  created $dff cell `$procdff$1566' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$278'.
  created $dff cell `$procdff$1567' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$278'.
  created $dff cell `$procdff$1568' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
  created $dff cell `$procdff$1569' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
  created $dff cell `$procdff$1570' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
  created $dff cell `$procdff$1571' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1572' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1573' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1574' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1575' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1576' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1577' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1578' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1579' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1580' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1581' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1582' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1583' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
  created $dff cell `$procdff$1584' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$248'.
  created $dff cell `$procdff$1585' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1586' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1587' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1588' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1589' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1590' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
  created $dff cell `$procdff$1591' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$222'.
  created $dff cell `$procdff$1592' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$222'.
  created $dff cell `$procdff$1593' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1594' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1595' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1596' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1597' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1598' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
  created $dff cell `$procdff$1599' with positive edge clock.
Creating register for signal `\queue.\o_wb_rdt' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1600' with positive edge clock.
Creating register for signal `\queue.\addr' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1601' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1602' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1603' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1604' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1605' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1606' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1607' with positive edge clock.
Creating register for signal `\queue.$mem2bits$\queue$src/servant_1.2.1/service/queue.v:48$137' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1608' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1609' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1610' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1611' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1612' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1613' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1614' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1615' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1616' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1617' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1618' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1619' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1620' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1621' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1622' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1623' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1624' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1625' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1626' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1627' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1628' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1629' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_ADDR' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1630' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_DATA' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1631' with positive edge clock.
Creating register for signal `\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN' using process `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
  created $dff cell `$procdff$1632' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1633' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1634' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1635' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1636' with positive edge clock.
Creating register for signal `\service.\ble_data_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1637' with positive edge clock.
Creating register for signal `\service.\write_queue' using process `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
  created $dff cell `$procdff$1638' with positive edge clock.

32.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$807'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$807'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$783'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$721'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$720'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$559'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$545'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$535'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$535'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$504'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$489'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$489'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$430'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$430'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$351'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$328'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$328'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$327'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$324'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$320'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$307'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$302'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$297'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$282'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$282'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$278'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$278'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$274'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$273'.
Found and cleaned up 4 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:36$252'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$248'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:29$248'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$241'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$240'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$239'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$238'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$237'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$236'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$235'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$234'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$223'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$222'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$221'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$220'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$219'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$218'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$217'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$216'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$205'.
Removing empty process `queue.$proc$src/servant_1.2.1/service/queue.v:18$204'.
Found and cleaned up 3 empty switches in `\queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
Removing empty process `queue.$proc$src/servant_1.2.1/service/queue.v:21$148'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:126$136'.
Found and cleaned up 5 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:139$103'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:139$103'.
Cleaned up 64 empty switches.
>>>>>>> refs/remotes/origin/main

32.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram for cells of type $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Using template $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant for cells of type $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Using template uart_rx for cells of type uart_rx.
Using template uart_tx for cells of type uart_tx.
Using template queue for cells of type queue.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~26 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Deleting now unused module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Deleting now unused module uart_rx.
Deleting now unused module uart_tx.
Deleting now unused module queue.

32.6. Executing TRIBUF pass.

32.7. Executing DEMINOUT pass (demote inout ports to input or output).

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<<<<<<< HEAD
<suppressed ~101 debug messages>

32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 28 unused cells and 509 unused wires.
<suppressed ~33 debug messages>
=======
<suppressed ~133 debug messages>

32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 29 unused cells and 640 unused wires.
<suppressed ~36 debug messages>
>>>>>>> refs/remotes/origin/main

32.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32.11. Executing OPT pass (performing simple optimizations).

32.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<<<<<<< HEAD
<suppressed ~390 debug messages>
Removed a total of 130 cells.
=======
<suppressed ~456 debug messages>
Removed a total of 152 cells.
>>>>>>> refs/remotes/origin/main

32.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
<<<<<<< HEAD
      Replacing known input bits on port A of cell $procmux$1090: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

32.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$144: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$560: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$272: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$491: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$763:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$769:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$775:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$781:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$81_EN[31:0]$100 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$743:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [0]
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1065: { $techmap\tx_to_ble.$procmux$1019_CMP $techmap\tx_to_ble.$procmux$1015_CMP $auto$opt_reduce.cc:132:opt_mux$1192 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1065: { $techmap\tx_to_pc.$procmux$1019_CMP $techmap\tx_to_pc.$procmux$1015_CMP $auto$opt_reduce.cc:132:opt_mux$1194 }
  Optimizing cells in module \service.
Performed a total of 11 changes.
=======
      Replacing known input bits on port A of cell $procmux$1504: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

32.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$308: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$724: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$436: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$655: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1372:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1372_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1372_Y [0]
      New connections: $techmap\queue.$procmux$1372_Y [7:1] = { $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] $techmap\queue.$procmux$1372_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1396:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1396_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1396_Y [0]
      New connections: $techmap\queue.$procmux$1396_Y [7:1] = { $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] $techmap\queue.$procmux$1396_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1420:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1420_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1420_Y [0]
      New connections: $techmap\queue.$procmux$1420_Y [7:1] = { $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] $techmap\queue.$procmux$1420_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1444:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1444_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1444_Y [0]
      New connections: $techmap\queue.$procmux$1444_Y [7:1] = { $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] $techmap\queue.$procmux$1444_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$927:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$933:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$939:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$945:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_EN[31:0]$264 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1348:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1348_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1348_Y [0]
      New connections: $techmap\queue.$procmux$1348_Y [7:1] = { $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] $techmap\queue.$procmux$1348_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1235:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1235_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1235_Y [0]
      New connections: $techmap\queue.$procmux$1235_Y [7:1] = { $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] $techmap\queue.$procmux$1235_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$907:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN[1:0]$304
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN[1:0]$304 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN[1:0]$304 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$301_EN[1:0]$304 [0]
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1252:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1252_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1252_Y [0]
      New connections: $techmap\queue.$procmux$1252_Y [7:1] = { $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] $techmap\queue.$procmux$1252_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1276:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1276_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1276_Y [0]
      New connections: $techmap\queue.$procmux$1276_Y [7:1] = { $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] $techmap\queue.$procmux$1276_Y [0] }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1229: { $techmap\tx_to_ble.$procmux$1189_CMP $techmap\tx_to_ble.$procmux$1185_CMP $auto$opt_reduce.cc:132:opt_mux$1640 }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1300:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1300_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1300_Y [0]
      New connections: $techmap\queue.$procmux$1300_Y [7:1] = { $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] $techmap\queue.$procmux$1300_Y [0] }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1229: { $techmap\tx_to_pc.$procmux$1189_CMP $techmap\tx_to_pc.$procmux$1185_CMP $auto$opt_reduce.cc:132:opt_mux$1642 }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1324:
      Old ports: A=8'00000000, B=8'11111111, Y=$techmap\queue.$procmux$1324_Y
      New ports: A=1'0, B=1'1, Y=$techmap\queue.$procmux$1324_Y [0]
      New connections: $techmap\queue.$procmux$1324_Y [7:1] = { $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] $techmap\queue.$procmux$1324_Y [0] }
  Optimizing cells in module \service.
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1375:
      Old ports: A=$techmap\queue.$procmux$1372_Y, B=8'00000000, Y=$techmap\queue.$procmux$1375_Y
      New ports: A=$techmap\queue.$procmux$1372_Y [0], B=1'0, Y=$techmap\queue.$procmux$1375_Y [0]
      New connections: $techmap\queue.$procmux$1375_Y [7:1] = { $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] $techmap\queue.$procmux$1375_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1399:
      Old ports: A=$techmap\queue.$procmux$1396_Y, B=8'00000000, Y=$techmap\queue.$procmux$1399_Y
      New ports: A=$techmap\queue.$procmux$1396_Y [0], B=1'0, Y=$techmap\queue.$procmux$1399_Y [0]
      New connections: $techmap\queue.$procmux$1399_Y [7:1] = { $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] $techmap\queue.$procmux$1399_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1423:
      Old ports: A=$techmap\queue.$procmux$1420_Y, B=8'00000000, Y=$techmap\queue.$procmux$1423_Y
      New ports: A=$techmap\queue.$procmux$1420_Y [0], B=1'0, Y=$techmap\queue.$procmux$1423_Y [0]
      New connections: $techmap\queue.$procmux$1423_Y [7:1] = { $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] $techmap\queue.$procmux$1423_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1447:
      Old ports: A=$techmap\queue.$procmux$1444_Y, B=8'00000000, Y=$techmap\queue.$procmux$1447_Y
      New ports: A=$techmap\queue.$procmux$1444_Y [0], B=1'0, Y=$techmap\queue.$procmux$1447_Y [0]
      New connections: $techmap\queue.$procmux$1447_Y [7:1] = { $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] $techmap\queue.$procmux$1447_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1351:
      Old ports: A=$techmap\queue.$procmux$1348_Y, B=8'00000000, Y=$techmap\queue.$procmux$1351_Y
      New ports: A=$techmap\queue.$procmux$1348_Y [0], B=1'0, Y=$techmap\queue.$procmux$1351_Y [0]
      New connections: $techmap\queue.$procmux$1351_Y [7:1] = { $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] $techmap\queue.$procmux$1351_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1238:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1235_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151
      New ports: A=1'0, B=$techmap\queue.$procmux$1235_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:29$138_EN[7:0]$151 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1255:
      Old ports: A=$techmap\queue.$procmux$1252_Y, B=8'00000000, Y=$techmap\queue.$procmux$1255_Y
      New ports: A=$techmap\queue.$procmux$1252_Y [0], B=1'0, Y=$techmap\queue.$procmux$1255_Y [0]
      New connections: $techmap\queue.$procmux$1255_Y [7:1] = { $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] $techmap\queue.$procmux$1255_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1279:
      Old ports: A=$techmap\queue.$procmux$1276_Y, B=8'00000000, Y=$techmap\queue.$procmux$1279_Y
      New ports: A=$techmap\queue.$procmux$1276_Y [0], B=1'0, Y=$techmap\queue.$procmux$1279_Y [0]
      New connections: $techmap\queue.$procmux$1279_Y [7:1] = { $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] $techmap\queue.$procmux$1279_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1303:
      Old ports: A=$techmap\queue.$procmux$1300_Y, B=8'00000000, Y=$techmap\queue.$procmux$1303_Y
      New ports: A=$techmap\queue.$procmux$1300_Y [0], B=1'0, Y=$techmap\queue.$procmux$1303_Y [0]
      New connections: $techmap\queue.$procmux$1303_Y [7:1] = { $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] $techmap\queue.$procmux$1303_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1327:
      Old ports: A=$techmap\queue.$procmux$1324_Y, B=8'00000000, Y=$techmap\queue.$procmux$1327_Y
      New ports: A=$techmap\queue.$procmux$1324_Y [0], B=1'0, Y=$techmap\queue.$procmux$1327_Y [0]
      New connections: $techmap\queue.$procmux$1327_Y [7:1] = { $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] $techmap\queue.$procmux$1327_Y [0] }
  Optimizing cells in module \service.
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1378:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1375_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170
      New ports: A=1'0, B=$techmap\queue.$procmux$1375_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_EN[7:0]$170 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1402:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1399_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173
      New ports: A=1'0, B=$techmap\queue.$procmux$1399_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_EN[7:0]$173 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1426:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1423_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176
      New ports: A=1'0, B=$techmap\queue.$procmux$1423_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_EN[7:0]$176 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1450:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1447_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179
      New ports: A=1'0, B=$techmap\queue.$procmux$1447_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_EN[7:0]$179 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1354:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1351_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167
      New ports: A=1'0, B=$techmap\queue.$procmux$1351_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_EN[7:0]$167 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1258:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1255_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154
      New ports: A=1'0, B=$techmap\queue.$procmux$1255_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:36$139_EN[7:0]$154 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1282:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1279_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158
      New ports: A=1'0, B=$techmap\queue.$procmux$1279_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_EN[7:0]$158 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1306:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1303_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161
      New ports: A=1'0, B=$techmap\queue.$procmux$1303_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_EN[7:0]$161 [0] }
    Consolidated identical input bits for $mux cell $techmap\queue.$procmux$1330:
      Old ports: A=8'00000000, B=$techmap\queue.$procmux$1327_Y, Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164
      New ports: A=1'0, B=$techmap\queue.$procmux$1327_Y [0], Y=$techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0]
      New connections: $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [7:1] = { $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] $techmap\queue.$0$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_EN[7:0]$164 [0] }
  Optimizing cells in module \service.
Performed a total of 40 changes.
>>>>>>> refs/remotes/origin/main

32.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

32.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \tx_to_pc.temp_done = 1'0 to constant driver in module service.
Promoted 3 init specs to constant drivers.

32.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
<<<<<<< HEAD
Removed 0 unused cells and 139 unused wires.
<suppressed ~5 debug messages>
=======
Removed 0 unused cells and 197 unused wires.
<suppressed ~9 debug messages>
>>>>>>> refs/remotes/origin/main

32.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.11.9. Rerunning OPT passes. (Maybe there is more to do..)

32.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<<<<<<< HEAD
<suppressed ~111 debug messages>

32.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\rx_from_ble.$procmux$954: { $techmap\rx_from_ble.$procmux$1006_CMP $techmap\rx_from_ble.$procmux$804_CMP $auto$opt_reduce.cc:132:opt_mux$1196 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1010: { $techmap\tx_to_ble.$procmux$1020_CMP $auto$opt_reduce.cc:132:opt_mux$1198 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1010: { $techmap\tx_to_pc.$procmux$1020_CMP $auto$opt_reduce.cc:132:opt_mux$1200 }
  Optimizing cells in module \service.
Performed a total of 3 changes.
=======
<suppressed ~135 debug messages>

32.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\rx_from_ble.$procmux$1124: { $techmap\rx_from_ble.$procmux$1120_CMP $techmap\rx_from_ble.$procmux$1001_CMP $auto$opt_reduce.cc:132:opt_mux$1644 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1180: { $techmap\tx_to_ble.$procmux$1190_CMP $auto$opt_reduce.cc:132:opt_mux$1646 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1180: { $techmap\tx_to_pc.$procmux$1190_CMP $auto$opt_reduce.cc:132:opt_mux$1648 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1643: { $techmap\rx_from_ble.$procmux$1119_CMP $techmap\rx_from_ble.$procmux$1012_CMP }
  Optimizing cells in module \service.
Performed a total of 4 changes.
>>>>>>> refs/remotes/origin/main

32.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

32.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.11.16. Rerunning OPT passes. (Maybe there is more to do..)

32.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<<<<<<< HEAD
<suppressed ~111 debug messages>
=======
<suppressed ~135 debug messages>
>>>>>>> refs/remotes/origin/main

32.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

32.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

32.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.11.23. Finished OPT passes. (There is nothing left to do.)

32.12. Executing WREDUCE pass (reducing word size of cells).
<<<<<<< HEAD
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:49$102 (ram.mem).
Removed top 19 bits (of 32) from mux cell service.$ternary$src/servant_1.2.1/service/service.v:193$35 ($mux).
Removed top 29 bits (of 32) from port B of cell service.$add$src/servant_1.2.1/service/service.v:188$33 ($add).
Removed top 8 bits (of 32) from port B of cell service.$procmux$1075_CMP0 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$procmux$1086_CMP0 ($eq).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1170 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1167 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1163 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1160 ($dff).
Removed cell service.$techmap\ram.$procmux$785 ($mux).
Removed cell service.$techmap\ram.$procmux$783 ($mux).
Removed cell service.$techmap\ram.$procmux$779 ($mux).
Removed cell service.$techmap\ram.$procmux$777 ($mux).
Removed cell service.$techmap\ram.$procmux$773 ($mux).
Removed cell service.$techmap\ram.$procmux$771 ($mux).
Removed cell service.$techmap\ram.$procmux$767 ($mux).
Removed cell service.$techmap\ram.$procmux$765 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$988 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$974 ($mux).
Removed top 2 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$903_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$882_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$862_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\rx_from_ble.$procmux$804_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
Removed top 28 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:95$66 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\rx_from_ble.$eq$src/servant_1.2.1/service/uart_rx.v:61$61 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1038 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1027 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1019_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 28 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$48 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1038 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1027 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1019_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 28 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$48 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$123 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1149 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$747 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$745 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$555 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$549 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$572 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$173 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$166 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$292 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$284 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$365 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$359 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1167 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1163 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1160 ($dff).
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_DATA[31:0]$91.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN[31:0]$90.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_DATA[31:0]$92.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN[31:0]$93.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_DATA[31:0]$96.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN[31:0]$97.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$78_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$79_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$80_EN.
Removed top 25 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69_Y.
Removed top 28 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$974_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$988_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44_Y.
Removed top 28 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_pc.$procmux$1027_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_pc.$procmux$1038_Y.
=======
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:37$185 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:38$186 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:39$187 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:40$188 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:41$189 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:42$190 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:43$191 (queue.queue).
Removed top 28 address bits (of 32) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:44$192 (queue.queue).
Removed top 1 address bits (of 5) from memory read port service.$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:48$193 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202 (queue.queue).
Removed top 28 address bits (of 32) from memory write port service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$203 (queue.queue).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:49$266 (ram.mem).
Removed top 29 bits (of 32) from port B of cell service.$add$src/servant_1.2.1/service/service.v:181$108 ($add).
Removed top 19 bits (of 32) from mux cell service.$ternary$src/servant_1.2.1/service/service.v:186$114 ($mux).
Removed top 8 bits (of 32) from port B of cell service.$procmux$1489_CMP0 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$procmux$1500_CMP0 ($eq).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1584 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1581 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1577 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1575 ($dff).
Removed cell service.$techmap\ram.$procmux$949 ($mux).
Removed cell service.$techmap\ram.$procmux$947 ($mux).
Removed cell service.$techmap\ram.$procmux$943 ($mux).
Removed cell service.$techmap\ram.$procmux$941 ($mux).
Removed cell service.$techmap\ram.$procmux$937 ($mux).
Removed cell service.$techmap\ram.$procmux$935 ($mux).
Removed cell service.$techmap\ram.$procmux$931 ($mux).
Removed cell service.$techmap\ram.$procmux$929 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1158 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1144 ($mux).
Removed top 2 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$1067_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$1046_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$1026_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\rx_from_ble.$procmux$1001_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$232 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$231 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$231 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:95$230 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\rx_from_ble.$eq$src/servant_1.2.1/service/uart_rx.v:61$225 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1208 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1197 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1189_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$212 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$207 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1208 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1197 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1189_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$212 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$207 ($lt).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1624 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1630 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1627 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1621 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1618 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1615 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1612 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\queue.$procdff$1607 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1605 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\queue.$procdff$1604 ($dff).
Removed top 28 bits (of 32) from FF cell service.$techmap\queue.$procdff$1602 ($dff).
Removed cell service.$techmap\queue.$procmux$1466 ($mux).
Removed cell service.$techmap\queue.$procmux$1463 ($mux).
Removed cell service.$techmap\queue.$procmux$1460 ($mux).
Removed cell service.$techmap\queue.$procmux$1458 ($mux).
Removed cell service.$techmap\queue.$procmux$1455 ($mux).
Removed cell service.$techmap\queue.$procmux$1452 ($mux).
Removed cell service.$techmap\queue.$procmux$1442 ($mux).
Removed cell service.$techmap\queue.$procmux$1439 ($mux).
Removed cell service.$techmap\queue.$procmux$1436 ($mux).
Removed cell service.$techmap\queue.$procmux$1434 ($mux).
Removed cell service.$techmap\queue.$procmux$1431 ($mux).
Removed cell service.$techmap\queue.$procmux$1428 ($mux).
Removed cell service.$techmap\queue.$procmux$1418 ($mux).
Removed cell service.$techmap\queue.$procmux$1415 ($mux).
Removed cell service.$techmap\queue.$procmux$1412 ($mux).
Removed cell service.$techmap\queue.$procmux$1410 ($mux).
Removed cell service.$techmap\queue.$procmux$1407 ($mux).
Removed cell service.$techmap\queue.$procmux$1404 ($mux).
Removed cell service.$techmap\queue.$procmux$1394 ($mux).
Removed cell service.$techmap\queue.$procmux$1391 ($mux).
Removed cell service.$techmap\queue.$procmux$1388 ($mux).
Removed cell service.$techmap\queue.$procmux$1386 ($mux).
Removed cell service.$techmap\queue.$procmux$1383 ($mux).
Removed cell service.$techmap\queue.$procmux$1380 ($mux).
Removed cell service.$techmap\queue.$procmux$1370 ($mux).
Removed cell service.$techmap\queue.$procmux$1367 ($mux).
Removed cell service.$techmap\queue.$procmux$1364 ($mux).
Removed cell service.$techmap\queue.$procmux$1362 ($mux).
Removed cell service.$techmap\queue.$procmux$1359 ($mux).
Removed cell service.$techmap\queue.$procmux$1356 ($mux).
Removed cell service.$techmap\queue.$procmux$1346 ($mux).
Removed cell service.$techmap\queue.$procmux$1343 ($mux).
Removed cell service.$techmap\queue.$procmux$1340 ($mux).
Removed cell service.$techmap\queue.$procmux$1338 ($mux).
Removed cell service.$techmap\queue.$procmux$1335 ($mux).
Removed cell service.$techmap\queue.$procmux$1332 ($mux).
Removed cell service.$techmap\queue.$procmux$1322 ($mux).
Removed cell service.$techmap\queue.$procmux$1319 ($mux).
Removed cell service.$techmap\queue.$procmux$1316 ($mux).
Removed cell service.$techmap\queue.$procmux$1314 ($mux).
Removed cell service.$techmap\queue.$procmux$1311 ($mux).
Removed cell service.$techmap\queue.$procmux$1308 ($mux).
Removed cell service.$techmap\queue.$procmux$1298 ($mux).
Removed cell service.$techmap\queue.$procmux$1295 ($mux).
Removed cell service.$techmap\queue.$procmux$1292 ($mux).
Removed cell service.$techmap\queue.$procmux$1290 ($mux).
Removed cell service.$techmap\queue.$procmux$1287 ($mux).
Removed cell service.$techmap\queue.$procmux$1284 ($mux).
Removed cell service.$techmap\queue.$procmux$1274 ($mux).
Removed cell service.$techmap\queue.$procmux$1271 ($mux).
Removed cell service.$techmap\queue.$procmux$1268 ($mux).
Removed cell service.$techmap\queue.$procmux$1266 ($mux).
Removed cell service.$techmap\queue.$procmux$1263 ($mux).
Removed cell service.$techmap\queue.$procmux$1260 ($mux).
Removed cell service.$techmap\queue.$procmux$1250 ($mux).
Removed cell service.$techmap\queue.$procmux$1247 ($mux).
Removed cell service.$techmap\queue.$procmux$1244 ($mux).
Removed cell service.$techmap\queue.$procmux$1241 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184 ($add).
Removed top 28 bits (of 32) from port Y of cell service.$techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184 ($add).
Removed top 31 bits (of 32) from port B of cell service.$techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180 ($sub).
Removed top 28 bits (of 32) from port Y of cell service.$techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180 ($sub).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$287 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1563 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$911 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$909 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$325 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$319 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$319 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$719 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$713 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$543 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$543 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$736 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$337 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$330 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$456 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$448 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$529 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$523 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1581 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1577 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1575 ($dff).
Removed top 1 bits (of 4) from FF cell service.$techmap\queue.$procdff$1624 ($dff).
Removed top 1 bits (of 4) from FF cell service.$techmap\queue.$procdff$1627 ($dff).
Removed top 1 bits (of 4) from FF cell service.$techmap\queue.$procdff$1621 ($dff).
Removed top 1 bits (of 4) from FF cell service.$techmap\queue.$procdff$1618 ($dff).
Removed top 2 bits (of 4) from FF cell service.$techmap\queue.$procdff$1615 ($dff).
Removed top 2 bits (of 4) from FF cell service.$techmap\queue.$procdff$1612 ($dff).
Removed cell service.$techmap\queue.$procdff$1605 ($dff).
Removed top 3 bits (of 4) from FF cell service.$techmap\queue.$procdff$1602 ($dff).
Removed top 1 bits (of 3) from FF cell service.$techmap\queue.$procdff$1624 ($dff).
Removed top 2 bits (of 3) from FF cell service.$techmap\queue.$procdff$1627 ($dff).
Removed top 1 bits (of 2) from FF cell service.$techmap\queue.$procdff$1615 ($dff).
Removed top 28 bits (of 32) from wire service.$techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184_Y.
Removed top 31 bits (of 32) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$140_ADDR.
Removed top 4 bits (of 8) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$141_DATA.
Removed top 30 bits (of 32) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$142_ADDR.
Removed top 4 bits (of 8) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$143_DATA.
Removed top 29 bits (of 32) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$144_ADDR.
Removed top 4 bits (of 8) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$145_DATA.
Removed top 29 bits (of 32) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$146_ADDR.
Removed top 28 bits (of 32) from wire service.$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$147_ADDR.
Removed top 28 bits (of 32) from wire service.$techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180_Y.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_DATA[31:0]$259.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN[31:0]$255.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_DATA[31:0]$253.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN[31:0]$257.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_DATA[31:0]$260.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN[31:0]$261.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$242_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$243_EN.
Removed top 3 bits (of 11) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_ADDR.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$244_EN.
Removed top 3 bits (of 11) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$245_ADDR.
Removed top 25 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$1144_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$1158_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208_Y.
>>>>>>> refs/remotes/origin/main
Removed top 19 bits (of 32) from wire service.adr.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

32.13. Executing PEEPOPT pass (run peephole optimizers).

32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
<<<<<<< HEAD
Removed 1 unused cells and 37 unused wires.
=======
Removed 1 unused cells and 104 unused wires.
>>>>>>> refs/remotes/origin/main
<suppressed ~2 debug messages>

32.15. Executing SHARE pass (SAT-based resource sharing).

32.16. Executing TECHMAP pass (map to technology primitives).

32.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

32.16.2. Continuing TECHMAP pass.
<<<<<<< HEAD
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
=======
>>>>>>> refs/remotes/origin/main
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
<<<<<<< HEAD
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
=======
>>>>>>> refs/remotes/origin/main
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$610bb28c65dd3303e1b40b4be084a49ef754db7d\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~349 debug messages>

32.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

32.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
<<<<<<< HEAD
  creating $macc model for $add$src/servant_1.2.1/service/service.v:188$33 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$303 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$306 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$328 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$336 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$336 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$328 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$306 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$303 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69.
  creating $alu model for $macc $add$src/servant_1.2.1/service/service.v:188$33.
  creating $alu model for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$113 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43: $auto$alumacc.cc:474:replace_alu$1273
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43: $auto$alumacc.cc:474:replace_alu$1278
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$113: $auto$alumacc.cc:474:replace_alu$1283
  creating $alu cell for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68: $auto$alumacc.cc:474:replace_alu$1296
  creating $alu cell for $add$src/servant_1.2.1/service/service.v:188$33: $auto$alumacc.cc:474:replace_alu$1301
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69: $auto$alumacc.cc:474:replace_alu$1304
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67: $auto$alumacc.cc:474:replace_alu$1307
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49: $auto$alumacc.cc:474:replace_alu$1310
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304: $auto$alumacc.cc:474:replace_alu$1313
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44: $auto$alumacc.cc:474:replace_alu$1316
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307: $auto$alumacc.cc:474:replace_alu$1319
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49: $auto$alumacc.cc:474:replace_alu$1322
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380: $auto$alumacc.cc:474:replace_alu$1325
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355: $auto$alumacc.cc:474:replace_alu$1328
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44: $auto$alumacc.cc:474:replace_alu$1331
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329: $auto$alumacc.cc:474:replace_alu$1334
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112: $auto$alumacc.cc:474:replace_alu$1337
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337: $auto$alumacc.cc:474:replace_alu$1340
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629: $auto$alumacc.cc:474:replace_alu$1343
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161: $auto$alumacc.cc:474:replace_alu$1346
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155: $auto$alumacc.cc:474:replace_alu$1349
  created 21 $alu and 0 $macc cells.
=======
  creating $macc model for $add$src/servant_1.2.1/service/service.v:181$108 ($add).
  creating $macc model for $techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184 ($add).
  creating $macc model for $techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180 ($sub).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$231 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$467 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$468 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$470 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$471 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$543 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$544 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$492 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$493 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$500 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$501 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$325 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$319 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$213 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$500 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$501.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$492 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$493.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$543 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$544.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$470 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$471.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$467 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$468.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$319.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$325.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$501.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$493.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$544.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$213.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$471.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$468.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$213.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$231.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233.
  creating $alu model for $macc $techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180.
  creating $alu model for $macc $techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184.
  creating $alu model for $macc $add$src/servant_1.2.1/service/service.v:181$108.
  creating $alu model for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$232 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$277 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$207 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$207 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$207: $auto$alumacc.cc:474:replace_alu$1729
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$207: $auto$alumacc.cc:474:replace_alu$1734
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$277: $auto$alumacc.cc:474:replace_alu$1739
  creating $alu cell for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$232: $auto$alumacc.cc:474:replace_alu$1752
  creating $alu cell for $add$src/servant_1.2.1/service/service.v:181$108: $auto$alumacc.cc:474:replace_alu$1757
  creating $alu cell for $techmap\queue.$add$src/servant_1.2.1/service/queue.v:33$184: $auto$alumacc.cc:474:replace_alu$1760
  creating $alu cell for $techmap\queue.$sub$src/servant_1.2.1/service/queue.v:28$180: $auto$alumacc.cc:474:replace_alu$1763
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$233: $auto$alumacc.cc:474:replace_alu$1766
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$231: $auto$alumacc.cc:474:replace_alu$1769
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$213: $auto$alumacc.cc:474:replace_alu$1772
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$468: $auto$alumacc.cc:474:replace_alu$1775
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$208: $auto$alumacc.cc:474:replace_alu$1778
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$471: $auto$alumacc.cc:474:replace_alu$1781
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$213: $auto$alumacc.cc:474:replace_alu$1784
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$544: $auto$alumacc.cc:474:replace_alu$1787
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$519: $auto$alumacc.cc:474:replace_alu$1790
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$208: $auto$alumacc.cc:474:replace_alu$1793
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$493: $auto$alumacc.cc:474:replace_alu$1796
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276: $auto$alumacc.cc:474:replace_alu$1799
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$501: $auto$alumacc.cc:474:replace_alu$1802
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793: $auto$alumacc.cc:474:replace_alu$1805
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$325: $auto$alumacc.cc:474:replace_alu$1808
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$319: $auto$alumacc.cc:474:replace_alu$1811
  created 23 $alu and 0 $macc cells.
>>>>>>> refs/remotes/origin/main

32.20. Executing OPT pass (performing simple optimizations).

32.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~25 debug messages>

32.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

32.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<<<<<<< HEAD
<suppressed ~103 debug messages>

32.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1286: { $auto$alumacc.cc:490:replace_alu$1284 [0] $auto$alumacc.cc:490:replace_alu$1284 [1] $auto$alumacc.cc:490:replace_alu$1284 [2] $auto$alumacc.cc:490:replace_alu$1284 [3] $auto$alumacc.cc:490:replace_alu$1284 [4] $auto$alumacc.cc:490:replace_alu$1284 [5] $auto$alumacc.cc:490:replace_alu$1284 [6] $auto$alumacc.cc:490:replace_alu$1284 [7] $auto$alumacc.cc:490:replace_alu$1284 [8] $auto$alumacc.cc:490:replace_alu$1284 [9] $auto$alumacc.cc:490:replace_alu$1284 [10] $auto$alumacc.cc:490:replace_alu$1284 [11] $auto$alumacc.cc:490:replace_alu$1284 [12] $auto$alumacc.cc:490:replace_alu$1284 [13] $auto$alumacc.cc:490:replace_alu$1284 [14] $auto$alumacc.cc:490:replace_alu$1284 [15] $auto$alumacc.cc:490:replace_alu$1284 [16] $auto$alumacc.cc:490:replace_alu$1284 [17] $auto$alumacc.cc:490:replace_alu$1284 [18] $auto$alumacc.cc:490:replace_alu$1284 [19] $auto$alumacc.cc:490:replace_alu$1284 [20] $auto$alumacc.cc:490:replace_alu$1284 [21] $auto$alumacc.cc:490:replace_alu$1284 [22] $auto$alumacc.cc:490:replace_alu$1284 [23] $auto$alumacc.cc:490:replace_alu$1284 [24] $auto$alumacc.cc:490:replace_alu$1284 [25] $auto$alumacc.cc:490:replace_alu$1284 [26] $auto$alumacc.cc:490:replace_alu$1284 [27] $auto$alumacc.cc:490:replace_alu$1284 [28] $auto$alumacc.cc:490:replace_alu$1284 [29] $auto$alumacc.cc:490:replace_alu$1284 [30] $auto$alumacc.cc:490:replace_alu$1284 [31] }
=======
<suppressed ~107 debug messages>

32.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1742: { $auto$alumacc.cc:490:replace_alu$1740 [0] $auto$alumacc.cc:490:replace_alu$1740 [1] $auto$alumacc.cc:490:replace_alu$1740 [2] $auto$alumacc.cc:490:replace_alu$1740 [3] $auto$alumacc.cc:490:replace_alu$1740 [4] $auto$alumacc.cc:490:replace_alu$1740 [5] $auto$alumacc.cc:490:replace_alu$1740 [6] $auto$alumacc.cc:490:replace_alu$1740 [7] $auto$alumacc.cc:490:replace_alu$1740 [8] $auto$alumacc.cc:490:replace_alu$1740 [9] $auto$alumacc.cc:490:replace_alu$1740 [10] $auto$alumacc.cc:490:replace_alu$1740 [11] $auto$alumacc.cc:490:replace_alu$1740 [12] $auto$alumacc.cc:490:replace_alu$1740 [13] $auto$alumacc.cc:490:replace_alu$1740 [14] $auto$alumacc.cc:490:replace_alu$1740 [15] $auto$alumacc.cc:490:replace_alu$1740 [16] $auto$alumacc.cc:490:replace_alu$1740 [17] $auto$alumacc.cc:490:replace_alu$1740 [18] $auto$alumacc.cc:490:replace_alu$1740 [19] $auto$alumacc.cc:490:replace_alu$1740 [20] $auto$alumacc.cc:490:replace_alu$1740 [21] $auto$alumacc.cc:490:replace_alu$1740 [22] $auto$alumacc.cc:490:replace_alu$1740 [23] $auto$alumacc.cc:490:replace_alu$1740 [24] $auto$alumacc.cc:490:replace_alu$1740 [25] $auto$alumacc.cc:490:replace_alu$1740 [26] $auto$alumacc.cc:490:replace_alu$1740 [27] $auto$alumacc.cc:490:replace_alu$1740 [28] $auto$alumacc.cc:490:replace_alu$1740 [29] $auto$alumacc.cc:490:replace_alu$1740 [30] $auto$alumacc.cc:490:replace_alu$1740 [31] }
>>>>>>> refs/remotes/origin/main
  Optimizing cells in module \service.
Performed a total of 1 changes.

32.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.20.6. Executing OPT_RMDFF pass (remove dff with constant values).
<<<<<<< HEAD

32.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 8 unused cells and 15 unused wires.
=======
Removing $techmap\queue.$procdff$1602 ($dff) from module service.
Removing $techmap\queue.$procdff$1606 ($dff) from module service.
Removing $techmap\queue.$procdff$1612 ($dff) from module service.
Removing $techmap\queue.$procdff$1618 ($dff) from module service.
Removing $techmap\queue.$procdff$1621 ($dff) from module service.
Removing $techmap\queue.$procdff$1630 ($dff) from module service.
Replaced 6 DFF cells.

32.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 8 unused cells and 24 unused wires.
>>>>>>> refs/remotes/origin/main
<suppressed ~9 debug messages>

32.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.20.9. Rerunning OPT passes. (Maybe there is more to do..)

32.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<<<<<<< HEAD
<suppressed ~103 debug messages>
=======
<suppressed ~107 debug messages>
>>>>>>> refs/remotes/origin/main

32.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

32.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

32.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.20.16. Finished OPT passes. (There is nothing left to do.)

32.21. Executing FSM pass (extract and optimize FSM).

32.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.rx_from_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_pc.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

32.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

32.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

32.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

32.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

32.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

32.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

32.22. Executing OPT pass (performing simple optimizations).

32.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

32.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.22.5. Finished fast OPT passes.

32.23. Executing MEMORY pass.

32.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
<<<<<<< HEAD
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$103' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$104' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$105' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$106' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$148' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:41$101' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$142' in module `\service': merged data $dff to cell.
=======
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$194' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$203' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$267' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$268' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$269' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$270' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$312' in module `\service': merged $dff to cell.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:37$185' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:38$186' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:39$187' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:40$188' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:41$189' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:42$190' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:43$191' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:44$192' in module `\service': no (compatible) $dff found.
Checking cell `$techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:48$193' in module `\service': merged data $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:41$265' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$306' in module `\service': merged data $dff to cell.
>>>>>>> refs/remotes/origin/main

32.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 27 unused cells and 30 unused wires.
<suppressed ~28 debug messages>

32.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
<<<<<<< HEAD
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \i_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$103) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$104) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$105) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$106) has addr \adr [12:2].
=======
Populating enable bits on write ports of memory service.queue.queue with aync read feedback:
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201.
  Analyzing write port $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202.
Consolidating write ports of memory service.queue.queue by address:
  New clock domain: posedge \i_clk
    Port 0 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$194) has addr \queue.addr.
      Active bits: 11111111
    Port 1 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195) has addr 4'0000.
      Active bits: 11111111
    Port 2 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196) has addr 4'0001.
      Active bits: 11111111
    Port 3 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197) has addr 4'0010.
      Active bits: 11111111
    Port 4 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198) has addr 4'0011.
      Active bits: 11111111
    Port 5 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199) has addr 4'0100.
      Active bits: 11111111
    Port 6 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200) has addr 4'0101.
      Active bits: 11111111
    Port 7 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201) has addr 4'0110.
      Active bits: 11111111
    Port 8 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202) has addr 4'0111.
      Active bits: 11111111
    Port 9 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$203) has addr 4'1000.
      Active bits: 11111111
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \i_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:37$267) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:38$268) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:39$269) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$270) has addr \adr [12:2].
>>>>>>> refs/remotes/origin/main
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory service.queue.queue using sat-based resource sharing:
  Port 0 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:29$194) on posedge \i_clk: considered
  Port 1 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195) on posedge \i_clk: considered
  Port 2 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196) on posedge \i_clk: considered
  Port 3 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197) on posedge \i_clk: considered
  Port 4 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198) on posedge \i_clk: considered
  Port 5 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199) on posedge \i_clk: considered
  Port 6 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200) on posedge \i_clk: considered
  Port 7 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201) on posedge \i_clk: considered
  Port 8 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202) on posedge \i_clk: considered
  Port 9 ($techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$203) on posedge \i_clk: considered
  Common input cone for all EN signals: 27 cells.
  Size of unconstrained SAT problem: 154 variables, 355 clauses
  Merging port 0 into port 1.
  According to SAT solver sharing of port 1 with port 2 is not possible.
  According to SAT solver sharing of port 2 with port 3 is not possible.
  According to SAT solver sharing of port 3 with port 4 is not possible.
  According to SAT solver sharing of port 4 with port 5 is not possible.
  According to SAT solver sharing of port 5 with port 6 is not possible.
  According to SAT solver sharing of port 6 with port 7 is not possible.
  According to SAT solver sharing of port 7 with port 8 is not possible.
  According to SAT solver sharing of port 8 with port 9 is not possible.

32.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
<<<<<<< HEAD
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:49$102 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$106 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:41$101 ($memrd)
=======
Collecting $memrd, $memwr and $meminit for memory `\queue.queue' in module `\service':
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:36$195 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:37$196 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:38$197 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:39$198 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:40$199 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:41$200 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:42$201 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:43$202 ($memwr)
  $techmap\queue.$memwr$\queue$src/servant_1.2.1/service/queue.v:44$203 ($memwr)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:48$193 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:44$192 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:43$191 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:42$190 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:41$189 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:40$188 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:39$187 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:38$186 ($memrd)
  $techmap\queue.$memrd$\queue$src/servant_1.2.1/service/queue.v:37$185 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:49$266 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:40$270 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:41$265 ($memrd)
>>>>>>> refs/remotes/origin/main
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$312 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$306 ($memrd)

32.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
<<<<<<< HEAD
=======
Processing service.queue.queue:
  Properties: ports=18 bits=72 rports=9 wports=9 dbits=8 abits=4 words=9
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=247 dwaste=8 bwaste=4024 waste=4024 efficiency=1
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=503 dwaste=0 bwaste=4024 waste=4024 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1015 dwaste=0 bwaste=4060 waste=4060 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min efficiency 2' not met.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2039 dwaste=0 bwaste=4078 waste=4078 efficiency=0
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
>>>>>>> refs/remotes/origin/main
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

32.26. Executing TECHMAP pass (map to technology primitives).

32.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

32.26.2. Continuing TECHMAP pass.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
<<<<<<< HEAD
Using template $paramod$f7f8f449eb6a9c131d9ed2bf4626309fe0a63b90\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$2da8548aedd33061a7d82c63d5baa0d19a4065d1\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
=======
>>>>>>> refs/remotes/origin/main
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2da8548aedd33061a7d82c63d5baa0d19a4065d1\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$f7f8f449eb6a9c131d9ed2bf4626309fe0a63b90\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
<<<<<<< HEAD
Using template $paramod$be816fb23696fd889cfdd7ac6e9441830ce2d528\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8013046ab84632caa0d8204008d935c667e7eb44\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
=======
>>>>>>> refs/remotes/origin/main
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8013046ab84632caa0d8204008d935c667e7eb44\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$be816fb23696fd889cfdd7ac6e9441830ce2d528\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

32.27. Executing ICE40_BRAMINIT pass.

32.28. Executing OPT pass (performing simple optimizations).

32.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<<<<<<< HEAD
<suppressed ~59 debug messages>
=======
<suppressed ~62 debug messages>
>>>>>>> refs/remotes/origin/main

32.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

32.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

32.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
<<<<<<< HEAD
Removed 1 unused cells and 386 unused wires.
=======
Removed 1 unused cells and 389 unused wires.
>>>>>>> refs/remotes/origin/main
<suppressed ~2 debug messages>

32.28.5. Finished fast OPT passes.

32.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
<<<<<<< HEAD
=======
Mapping memory cell \queue.queue in module \service:
  created 9 $dff cells and 0 static cells of width 8.
  read interface: 1 $dff and 135 $mux cells.
  write interface: 81 write mux blocks.
>>>>>>> refs/remotes/origin/main

32.30. Executing OPT pass (performing simple optimizations).

32.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~445 debug messages>

32.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
<<<<<<< HEAD
=======
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:646:consolidate_wr_using_sat$1824: $auto$rtlil.cc:1836:ReduceOr$1818 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

32.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap2037\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [1] $auto$rtlil.cc:1906:Mux$1944 [2] $auto$rtlil.cc:1906:Mux$1944 [3] $auto$rtlil.cc:1906:Mux$1944 [4] $auto$rtlil.cc:1906:Mux$1944 [5] $auto$rtlil.cc:1906:Mux$1944 [6] $auto$rtlil.cc:1906:Mux$1944 [7] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [9] $auto$rtlil.cc:1906:Mux$1944 [10] $auto$rtlil.cc:1906:Mux$1944 [11] $auto$rtlil.cc:1906:Mux$1944 [12] $auto$rtlil.cc:1906:Mux$1944 [13] $auto$rtlil.cc:1906:Mux$1944 [14] $auto$rtlil.cc:1906:Mux$1944 [15] }
    New input vector for $reduce_or cell $techmap$techmap2036\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [1] $auto$rtlil.cc:1906:Mux$1866 [2] $auto$rtlil.cc:1906:Mux$1866 [3] $auto$rtlil.cc:1906:Mux$1866 [4] $auto$rtlil.cc:1906:Mux$1866 [5] $auto$rtlil.cc:1906:Mux$1866 [6] $auto$rtlil.cc:1906:Mux$1866 [7] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [9] $auto$rtlil.cc:1906:Mux$1866 [10] $auto$rtlil.cc:1906:Mux$1866 [11] $auto$rtlil.cc:1906:Mux$1866 [12] $auto$rtlil.cc:1906:Mux$1866 [13] $auto$rtlil.cc:1906:Mux$1866 [14] $auto$rtlil.cc:1906:Mux$1866 [15] }
    New input vector for $reduce_or cell $techmap$techmap2035\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [1] $auto$rtlil.cc:1906:Mux$1879 [2] $auto$rtlil.cc:1906:Mux$1879 [3] $auto$rtlil.cc:1906:Mux$1879 [4] $auto$rtlil.cc:1906:Mux$1879 [5] $auto$rtlil.cc:1906:Mux$1879 [6] $auto$rtlil.cc:1906:Mux$1879 [7] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [9] $auto$rtlil.cc:1906:Mux$1879 [10] $auto$rtlil.cc:1906:Mux$1879 [11] $auto$rtlil.cc:1906:Mux$1879 [12] $auto$rtlil.cc:1906:Mux$1879 [13] $auto$rtlil.cc:1906:Mux$1879 [14] $auto$rtlil.cc:1906:Mux$1879 [15] }
    New input vector for $reduce_or cell $techmap$techmap2034\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2033: { $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [1] $auto$rtlil.cc:1906:Mux$1931 [2] $auto$rtlil.cc:1906:Mux$1931 [3] $auto$rtlil.cc:1906:Mux$1931 [4] $auto$rtlil.cc:1906:Mux$1931 [5] $auto$rtlil.cc:1906:Mux$1931 [6] $auto$rtlil.cc:1906:Mux$1931 [7] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [9] $auto$rtlil.cc:1906:Mux$1931 [10] $auto$rtlil.cc:1906:Mux$1931 [11] $auto$rtlil.cc:1906:Mux$1931 [12] $auto$rtlil.cc:1906:Mux$1931 [13] $auto$rtlil.cc:1906:Mux$1931 [14] $auto$rtlil.cc:1906:Mux$1931 [15] }
    New input vector for $reduce_or cell $techmap$techmap2031\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [1] $auto$rtlil.cc:1906:Mux$1996 [2] $auto$rtlil.cc:1906:Mux$1996 [3] $auto$rtlil.cc:1906:Mux$1996 [4] $auto$rtlil.cc:1906:Mux$1996 [5] $auto$rtlil.cc:1906:Mux$1996 [6] $auto$rtlil.cc:1906:Mux$1996 [7] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [9] $auto$rtlil.cc:1906:Mux$1996 [10] $auto$rtlil.cc:1906:Mux$1996 [11] $auto$rtlil.cc:1906:Mux$1996 [12] $auto$rtlil.cc:1906:Mux$1996 [13] $auto$rtlil.cc:1906:Mux$1996 [14] $auto$rtlil.cc:1906:Mux$1996 [15] }
    New input vector for $reduce_or cell $techmap$techmap2030\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [1] $auto$rtlil.cc:1906:Mux$2009 [2] $auto$rtlil.cc:1906:Mux$2009 [3] $auto$rtlil.cc:1906:Mux$2009 [4] $auto$rtlil.cc:1906:Mux$2009 [5] $auto$rtlil.cc:1906:Mux$2009 [6] $auto$rtlil.cc:1906:Mux$2009 [7] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [9] $auto$rtlil.cc:1906:Mux$2009 [10] $auto$rtlil.cc:1906:Mux$2009 [11] $auto$rtlil.cc:1906:Mux$2009 [12] $auto$rtlil.cc:1906:Mux$2009 [13] $auto$rtlil.cc:1906:Mux$2009 [14] $auto$rtlil.cc:1906:Mux$2009 [15] }
    New input vector for $reduce_or cell $techmap$techmap2029\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [1] $auto$rtlil.cc:1906:Mux$1983 [2] $auto$rtlil.cc:1906:Mux$1983 [3] $auto$rtlil.cc:1906:Mux$1983 [4] $auto$rtlil.cc:1906:Mux$1983 [5] $auto$rtlil.cc:1906:Mux$1983 [6] $auto$rtlil.cc:1906:Mux$1983 [7] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [9] $auto$rtlil.cc:1906:Mux$1983 [10] $auto$rtlil.cc:1906:Mux$1983 [11] $auto$rtlil.cc:1906:Mux$1983 [12] $auto$rtlil.cc:1906:Mux$1983 [13] $auto$rtlil.cc:1906:Mux$1983 [14] $auto$rtlil.cc:1906:Mux$1983 [15] }
    New input vector for $reduce_or cell $techmap$techmap2028\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [1] $auto$rtlil.cc:1906:Mux$1918 [2] $auto$rtlil.cc:1906:Mux$1918 [3] $auto$rtlil.cc:1906:Mux$1918 [4] $auto$rtlil.cc:1906:Mux$1918 [5] $auto$rtlil.cc:1906:Mux$1918 [6] $auto$rtlil.cc:1906:Mux$1918 [7] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [9] $auto$rtlil.cc:1906:Mux$1918 [10] $auto$rtlil.cc:1906:Mux$1918 [11] $auto$rtlil.cc:1906:Mux$1918 [12] $auto$rtlil.cc:1906:Mux$1918 [13] $auto$rtlil.cc:1906:Mux$1918 [14] $auto$rtlil.cc:1906:Mux$1918 [15] }
    New input vector for $reduce_or cell $techmap$techmap2027\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [1] $auto$rtlil.cc:1906:Mux$1970 [2] $auto$rtlil.cc:1906:Mux$1970 [3] $auto$rtlil.cc:1906:Mux$1970 [4] $auto$rtlil.cc:1906:Mux$1970 [5] $auto$rtlil.cc:1906:Mux$1970 [6] $auto$rtlil.cc:1906:Mux$1970 [7] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [9] $auto$rtlil.cc:1906:Mux$1970 [10] $auto$rtlil.cc:1906:Mux$1970 [11] $auto$rtlil.cc:1906:Mux$1970 [12] $auto$rtlil.cc:1906:Mux$1970 [13] $auto$rtlil.cc:1906:Mux$1970 [14] $auto$rtlil.cc:1906:Mux$1970 [15] }
    New input vector for $reduce_or cell $techmap$techmap2026\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [1] $auto$rtlil.cc:1906:Mux$1957 [2] $auto$rtlil.cc:1906:Mux$1957 [3] $auto$rtlil.cc:1906:Mux$1957 [4] $auto$rtlil.cc:1906:Mux$1957 [5] $auto$rtlil.cc:1906:Mux$1957 [6] $auto$rtlil.cc:1906:Mux$1957 [7] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [9] $auto$rtlil.cc:1906:Mux$1957 [10] $auto$rtlil.cc:1906:Mux$1957 [11] $auto$rtlil.cc:1906:Mux$1957 [12] $auto$rtlil.cc:1906:Mux$1957 [13] $auto$rtlil.cc:1906:Mux$1957 [14] $auto$rtlil.cc:1906:Mux$1957 [15] }
    New input vector for $reduce_or cell $techmap$techmap2025\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2024: { $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [1] $auto$rtlil.cc:1906:Mux$1840 [2] $auto$rtlil.cc:1906:Mux$1840 [3] $auto$rtlil.cc:1906:Mux$1840 [4] $auto$rtlil.cc:1906:Mux$1840 [5] $auto$rtlil.cc:1906:Mux$1840 [6] $auto$rtlil.cc:1906:Mux$1840 [7] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [9] $auto$rtlil.cc:1906:Mux$1840 [10] $auto$rtlil.cc:1906:Mux$1840 [11] $auto$rtlil.cc:1906:Mux$1840 [12] $auto$rtlil.cc:1906:Mux$1840 [13] $auto$rtlil.cc:1906:Mux$1840 [14] $auto$rtlil.cc:1906:Mux$1840 [15] }
    New input vector for $reduce_or cell $techmap$techmap2022\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [1] $auto$rtlil.cc:1906:Mux$1892 [2] $auto$rtlil.cc:1906:Mux$1892 [3] $auto$rtlil.cc:1906:Mux$1892 [4] $auto$rtlil.cc:1906:Mux$1892 [5] $auto$rtlil.cc:1906:Mux$1892 [6] $auto$rtlil.cc:1906:Mux$1892 [7] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [9] $auto$rtlil.cc:1906:Mux$1892 [10] $auto$rtlil.cc:1906:Mux$1892 [11] $auto$rtlil.cc:1906:Mux$1892 [12] $auto$rtlil.cc:1906:Mux$1892 [13] $auto$rtlil.cc:1906:Mux$1892 [14] $auto$rtlil.cc:1906:Mux$1892 [15] }
    New input vector for $reduce_or cell $techmap$techmap2021\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [1] $auto$rtlil.cc:1906:Mux$1905 [2] $auto$rtlil.cc:1906:Mux$1905 [3] $auto$rtlil.cc:1906:Mux$1905 [4] $auto$rtlil.cc:1906:Mux$1905 [5] $auto$rtlil.cc:1906:Mux$1905 [6] $auto$rtlil.cc:1906:Mux$1905 [7] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [9] $auto$rtlil.cc:1906:Mux$1905 [10] $auto$rtlil.cc:1906:Mux$1905 [11] $auto$rtlil.cc:1906:Mux$1905 [12] $auto$rtlil.cc:1906:Mux$1905 [13] $auto$rtlil.cc:1906:Mux$1905 [14] $auto$rtlil.cc:1906:Mux$1905 [15] }
    New input vector for $reduce_or cell $techmap$techmap2018\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [1] $auto$rtlil.cc:1906:Mux$1853 [2] $auto$rtlil.cc:1906:Mux$1853 [3] $auto$rtlil.cc:1906:Mux$1853 [4] $auto$rtlil.cc:1906:Mux$1853 [5] $auto$rtlil.cc:1906:Mux$1853 [6] $auto$rtlil.cc:1906:Mux$1853 [7] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [9] $auto$rtlil.cc:1906:Mux$1853 [10] $auto$rtlil.cc:1906:Mux$1853 [11] $auto$rtlil.cc:1906:Mux$1853 [12] $auto$rtlil.cc:1906:Mux$1853 [13] $auto$rtlil.cc:1906:Mux$1853 [14] $auto$rtlil.cc:1906:Mux$1853 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1839:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1840
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1840 [15:9] $auto$rtlil.cc:1906:Mux$1840 [7:1] } = { $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [8] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1852:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1853
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1853 [15:9] $auto$rtlil.cc:1906:Mux$1853 [7:1] } = { $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [8] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1865:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1866
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1866 [15:9] $auto$rtlil.cc:1906:Mux$1866 [7:1] } = { $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [8] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1878:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1879
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1879 [15:9] $auto$rtlil.cc:1906:Mux$1879 [7:1] } = { $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [8] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1891:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1892
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1892 [15:9] $auto$rtlil.cc:1906:Mux$1892 [7:1] } = { $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [8] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1904:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1905
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1905 [15:9] $auto$rtlil.cc:1906:Mux$1905 [7:1] } = { $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [8] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1917:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1918
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1918 [15:9] $auto$rtlil.cc:1906:Mux$1918 [7:1] } = { $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [8] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1930:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1931
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1931 [15:9] $auto$rtlil.cc:1906:Mux$1931 [7:1] } = { $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [8] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1943:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1944
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1944 [15:9] $auto$rtlil.cc:1906:Mux$1944 [7:1] } = { $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [8] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1956:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1957
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1957 [15:9] $auto$rtlil.cc:1906:Mux$1957 [7:1] } = { $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [8] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1969:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1970
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1970 [15:9] $auto$rtlil.cc:1906:Mux$1970 [7:1] } = { $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [8] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1982:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1983
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1983 [15:9] $auto$rtlil.cc:1906:Mux$1983 [7:1] } = { $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [8] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1995:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1996
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1996 [15:9] $auto$rtlil.cc:1906:Mux$1996 [7:1] } = { $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [8] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$2008:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$2009
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$2009 [15:9] $auto$rtlil.cc:1906:Mux$2009 [7:1] } = { $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [8] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [0] }
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1139:
      Old ports: A=2'11, B=2'00, Y=$techmap\rx_from_ble.$procmux$1139_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1139_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1139_Y [1] = $techmap\rx_from_ble.$procmux$1139_Y [0]
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1147:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1671 [0] }, Y=$techmap\rx_from_ble.$procmux$1147_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1671 [0], Y=$techmap\rx_from_ble.$procmux$1147_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1147_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1152:
      Old ports: A=2'10, B=2'00, Y=$techmap\rx_from_ble.$procmux$1152_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1152_Y [1]
      New connections: $techmap\rx_from_ble.$procmux$1152_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1192:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1192_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1192_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1192_Y [1] = $techmap\tx_to_ble.$procmux$1192_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1200:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_ble.$procmux$1197_Y [0] }, Y=$techmap\tx_to_ble.$procmux$1200_Y
      New ports: A=1'0, B=$techmap\tx_to_ble.$procmux$1197_Y [0], Y=$techmap\tx_to_ble.$procmux$1200_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1200_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1192:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1192_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1192_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1192_Y [1] = $techmap\tx_to_pc.$procmux$1192_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1200:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_pc.$procmux$1197_Y [0] }, Y=$techmap\tx_to_pc.$procmux$1200_Y
      New ports: A=1'0, B=$techmap\tx_to_pc.$procmux$1197_Y [0], Y=$techmap\tx_to_pc.$procmux$1200_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1200_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap2037\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1944 [0] $auto$rtlil.cc:1906:Mux$1944 [8] }
    New input vector for $reduce_or cell $techmap$techmap2036\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1866 [0] $auto$rtlil.cc:1906:Mux$1866 [8] }
    New input vector for $reduce_or cell $techmap$techmap2035\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1879 [0] $auto$rtlil.cc:1906:Mux$1879 [8] }
    New input vector for $reduce_or cell $techmap$techmap2034\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2033: { $auto$rtlil.cc:1906:Mux$1931 [0] $auto$rtlil.cc:1906:Mux$1931 [8] }
    New input vector for $reduce_or cell $techmap$techmap2031\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1996 [0] $auto$rtlil.cc:1906:Mux$1996 [8] }
    New input vector for $reduce_or cell $techmap$techmap2030\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$2009 [0] $auto$rtlil.cc:1906:Mux$2009 [8] }
    New input vector for $reduce_or cell $techmap$techmap2029\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1983 [0] $auto$rtlil.cc:1906:Mux$1983 [8] }
    New input vector for $reduce_or cell $techmap$techmap2028\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1918 [0] $auto$rtlil.cc:1906:Mux$1918 [8] }
    New input vector for $reduce_or cell $techmap$techmap2027\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1970 [0] $auto$rtlil.cc:1906:Mux$1970 [8] }
    New input vector for $reduce_or cell $techmap$techmap2026\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1957 [0] $auto$rtlil.cc:1906:Mux$1957 [8] }
    New input vector for $reduce_or cell $techmap$techmap2025\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2024: { $auto$rtlil.cc:1906:Mux$1840 [0] $auto$rtlil.cc:1906:Mux$1840 [8] }
    New input vector for $reduce_or cell $techmap$techmap2022\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1892 [0] $auto$rtlil.cc:1906:Mux$1892 [8] }
    New input vector for $reduce_or cell $techmap$techmap2021\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1905 [0] $auto$rtlil.cc:1906:Mux$1905 [8] }
    New input vector for $reduce_or cell $techmap$techmap2018\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$2017: { $auto$rtlil.cc:1906:Mux$1853 [0] $auto$rtlil.cc:1906:Mux$1853 [8] }
  Optimizing cells in module \service.
Performed a total of 49 changes.

32.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

32.30.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $memory\queue.queue$rdreg[0]$2073 ($dff) from module service.
Replaced 1 DFF cells.

32.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 116 unused cells and 632 unused wires.
<suppressed ~126 debug messages>

32.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~55 debug messages>

32.30.9. Rerunning OPT passes. (Maybe there is more to do..)

32.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
>>>>>>> refs/remotes/origin/main
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

<<<<<<< HEAD
32.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1563\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [1] $auto$rtlil.cc:1906:Mux$1537 [2] $auto$rtlil.cc:1906:Mux$1537 [3] $auto$rtlil.cc:1906:Mux$1537 [4] $auto$rtlil.cc:1906:Mux$1537 [5] $auto$rtlil.cc:1906:Mux$1537 [6] $auto$rtlil.cc:1906:Mux$1537 [7] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [9] $auto$rtlil.cc:1906:Mux$1537 [10] $auto$rtlil.cc:1906:Mux$1537 [11] $auto$rtlil.cc:1906:Mux$1537 [12] $auto$rtlil.cc:1906:Mux$1537 [13] $auto$rtlil.cc:1906:Mux$1537 [14] $auto$rtlil.cc:1906:Mux$1537 [15] }
    New input vector for $reduce_or cell $techmap$techmap1562\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [1] $auto$rtlil.cc:1906:Mux$1420 [2] $auto$rtlil.cc:1906:Mux$1420 [3] $auto$rtlil.cc:1906:Mux$1420 [4] $auto$rtlil.cc:1906:Mux$1420 [5] $auto$rtlil.cc:1906:Mux$1420 [6] $auto$rtlil.cc:1906:Mux$1420 [7] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [9] $auto$rtlil.cc:1906:Mux$1420 [10] $auto$rtlil.cc:1906:Mux$1420 [11] $auto$rtlil.cc:1906:Mux$1420 [12] $auto$rtlil.cc:1906:Mux$1420 [13] $auto$rtlil.cc:1906:Mux$1420 [14] $auto$rtlil.cc:1906:Mux$1420 [15] }
    New input vector for $reduce_or cell $techmap$techmap1561\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [1] $auto$rtlil.cc:1906:Mux$1394 [2] $auto$rtlil.cc:1906:Mux$1394 [3] $auto$rtlil.cc:1906:Mux$1394 [4] $auto$rtlil.cc:1906:Mux$1394 [5] $auto$rtlil.cc:1906:Mux$1394 [6] $auto$rtlil.cc:1906:Mux$1394 [7] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [9] $auto$rtlil.cc:1906:Mux$1394 [10] $auto$rtlil.cc:1906:Mux$1394 [11] $auto$rtlil.cc:1906:Mux$1394 [12] $auto$rtlil.cc:1906:Mux$1394 [13] $auto$rtlil.cc:1906:Mux$1394 [14] $auto$rtlil.cc:1906:Mux$1394 [15] }
    New input vector for $reduce_or cell $techmap$techmap1560\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [1] $auto$rtlil.cc:1906:Mux$1498 [2] $auto$rtlil.cc:1906:Mux$1498 [3] $auto$rtlil.cc:1906:Mux$1498 [4] $auto$rtlil.cc:1906:Mux$1498 [5] $auto$rtlil.cc:1906:Mux$1498 [6] $auto$rtlil.cc:1906:Mux$1498 [7] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [9] $auto$rtlil.cc:1906:Mux$1498 [10] $auto$rtlil.cc:1906:Mux$1498 [11] $auto$rtlil.cc:1906:Mux$1498 [12] $auto$rtlil.cc:1906:Mux$1498 [13] $auto$rtlil.cc:1906:Mux$1498 [14] $auto$rtlil.cc:1906:Mux$1498 [15] }
    New input vector for $reduce_or cell $techmap$techmap1559\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [1] $auto$rtlil.cc:1906:Mux$1511 [2] $auto$rtlil.cc:1906:Mux$1511 [3] $auto$rtlil.cc:1906:Mux$1511 [4] $auto$rtlil.cc:1906:Mux$1511 [5] $auto$rtlil.cc:1906:Mux$1511 [6] $auto$rtlil.cc:1906:Mux$1511 [7] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [9] $auto$rtlil.cc:1906:Mux$1511 [10] $auto$rtlil.cc:1906:Mux$1511 [11] $auto$rtlil.cc:1906:Mux$1511 [12] $auto$rtlil.cc:1906:Mux$1511 [13] $auto$rtlil.cc:1906:Mux$1511 [14] $auto$rtlil.cc:1906:Mux$1511 [15] }
    New input vector for $reduce_or cell $techmap$techmap1558\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [1] $auto$rtlil.cc:1906:Mux$1485 [2] $auto$rtlil.cc:1906:Mux$1485 [3] $auto$rtlil.cc:1906:Mux$1485 [4] $auto$rtlil.cc:1906:Mux$1485 [5] $auto$rtlil.cc:1906:Mux$1485 [6] $auto$rtlil.cc:1906:Mux$1485 [7] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [9] $auto$rtlil.cc:1906:Mux$1485 [10] $auto$rtlil.cc:1906:Mux$1485 [11] $auto$rtlil.cc:1906:Mux$1485 [12] $auto$rtlil.cc:1906:Mux$1485 [13] $auto$rtlil.cc:1906:Mux$1485 [14] $auto$rtlil.cc:1906:Mux$1485 [15] }
    New input vector for $reduce_or cell $techmap$techmap1557\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [1] $auto$rtlil.cc:1906:Mux$1524 [2] $auto$rtlil.cc:1906:Mux$1524 [3] $auto$rtlil.cc:1906:Mux$1524 [4] $auto$rtlil.cc:1906:Mux$1524 [5] $auto$rtlil.cc:1906:Mux$1524 [6] $auto$rtlil.cc:1906:Mux$1524 [7] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [9] $auto$rtlil.cc:1906:Mux$1524 [10] $auto$rtlil.cc:1906:Mux$1524 [11] $auto$rtlil.cc:1906:Mux$1524 [12] $auto$rtlil.cc:1906:Mux$1524 [13] $auto$rtlil.cc:1906:Mux$1524 [14] $auto$rtlil.cc:1906:Mux$1524 [15] }
    New input vector for $reduce_or cell $techmap$techmap1556\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [1] $auto$rtlil.cc:1906:Mux$1446 [2] $auto$rtlil.cc:1906:Mux$1446 [3] $auto$rtlil.cc:1906:Mux$1446 [4] $auto$rtlil.cc:1906:Mux$1446 [5] $auto$rtlil.cc:1906:Mux$1446 [6] $auto$rtlil.cc:1906:Mux$1446 [7] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [9] $auto$rtlil.cc:1906:Mux$1446 [10] $auto$rtlil.cc:1906:Mux$1446 [11] $auto$rtlil.cc:1906:Mux$1446 [12] $auto$rtlil.cc:1906:Mux$1446 [13] $auto$rtlil.cc:1906:Mux$1446 [14] $auto$rtlil.cc:1906:Mux$1446 [15] }
    New input vector for $reduce_or cell $techmap$techmap1555\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1554: { $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [1] $auto$rtlil.cc:1906:Mux$1368 [2] $auto$rtlil.cc:1906:Mux$1368 [3] $auto$rtlil.cc:1906:Mux$1368 [4] $auto$rtlil.cc:1906:Mux$1368 [5] $auto$rtlil.cc:1906:Mux$1368 [6] $auto$rtlil.cc:1906:Mux$1368 [7] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [9] $auto$rtlil.cc:1906:Mux$1368 [10] $auto$rtlil.cc:1906:Mux$1368 [11] $auto$rtlil.cc:1906:Mux$1368 [12] $auto$rtlil.cc:1906:Mux$1368 [13] $auto$rtlil.cc:1906:Mux$1368 [14] $auto$rtlil.cc:1906:Mux$1368 [15] }
    New input vector for $reduce_or cell $techmap$techmap1552\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [1] $auto$rtlil.cc:1906:Mux$1433 [2] $auto$rtlil.cc:1906:Mux$1433 [3] $auto$rtlil.cc:1906:Mux$1433 [4] $auto$rtlil.cc:1906:Mux$1433 [5] $auto$rtlil.cc:1906:Mux$1433 [6] $auto$rtlil.cc:1906:Mux$1433 [7] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [9] $auto$rtlil.cc:1906:Mux$1433 [10] $auto$rtlil.cc:1906:Mux$1433 [11] $auto$rtlil.cc:1906:Mux$1433 [12] $auto$rtlil.cc:1906:Mux$1433 [13] $auto$rtlil.cc:1906:Mux$1433 [14] $auto$rtlil.cc:1906:Mux$1433 [15] }
    New input vector for $reduce_or cell $techmap$techmap1551\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1550: { $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [1] $auto$rtlil.cc:1906:Mux$1459 [2] $auto$rtlil.cc:1906:Mux$1459 [3] $auto$rtlil.cc:1906:Mux$1459 [4] $auto$rtlil.cc:1906:Mux$1459 [5] $auto$rtlil.cc:1906:Mux$1459 [6] $auto$rtlil.cc:1906:Mux$1459 [7] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [9] $auto$rtlil.cc:1906:Mux$1459 [10] $auto$rtlil.cc:1906:Mux$1459 [11] $auto$rtlil.cc:1906:Mux$1459 [12] $auto$rtlil.cc:1906:Mux$1459 [13] $auto$rtlil.cc:1906:Mux$1459 [14] $auto$rtlil.cc:1906:Mux$1459 [15] }
    New input vector for $reduce_or cell $techmap$techmap1548\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [1] $auto$rtlil.cc:1906:Mux$1381 [2] $auto$rtlil.cc:1906:Mux$1381 [3] $auto$rtlil.cc:1906:Mux$1381 [4] $auto$rtlil.cc:1906:Mux$1381 [5] $auto$rtlil.cc:1906:Mux$1381 [6] $auto$rtlil.cc:1906:Mux$1381 [7] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [9] $auto$rtlil.cc:1906:Mux$1381 [10] $auto$rtlil.cc:1906:Mux$1381 [11] $auto$rtlil.cc:1906:Mux$1381 [12] $auto$rtlil.cc:1906:Mux$1381 [13] $auto$rtlil.cc:1906:Mux$1381 [14] $auto$rtlil.cc:1906:Mux$1381 [15] }
    New input vector for $reduce_or cell $techmap$techmap1547\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [1] $auto$rtlil.cc:1906:Mux$1407 [2] $auto$rtlil.cc:1906:Mux$1407 [3] $auto$rtlil.cc:1906:Mux$1407 [4] $auto$rtlil.cc:1906:Mux$1407 [5] $auto$rtlil.cc:1906:Mux$1407 [6] $auto$rtlil.cc:1906:Mux$1407 [7] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [9] $auto$rtlil.cc:1906:Mux$1407 [10] $auto$rtlil.cc:1906:Mux$1407 [11] $auto$rtlil.cc:1906:Mux$1407 [12] $auto$rtlil.cc:1906:Mux$1407 [13] $auto$rtlil.cc:1906:Mux$1407 [14] $auto$rtlil.cc:1906:Mux$1407 [15] }
    New input vector for $reduce_or cell $techmap$techmap1546\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [1] $auto$rtlil.cc:1906:Mux$1472 [2] $auto$rtlil.cc:1906:Mux$1472 [3] $auto$rtlil.cc:1906:Mux$1472 [4] $auto$rtlil.cc:1906:Mux$1472 [5] $auto$rtlil.cc:1906:Mux$1472 [6] $auto$rtlil.cc:1906:Mux$1472 [7] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [9] $auto$rtlil.cc:1906:Mux$1472 [10] $auto$rtlil.cc:1906:Mux$1472 [11] $auto$rtlil.cc:1906:Mux$1472 [12] $auto$rtlil.cc:1906:Mux$1472 [13] $auto$rtlil.cc:1906:Mux$1472 [14] $auto$rtlil.cc:1906:Mux$1472 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1367:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1368
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1368 [15:9] $auto$rtlil.cc:1906:Mux$1368 [7:1] } = { $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [8] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1380:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1381
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1381 [15:9] $auto$rtlil.cc:1906:Mux$1381 [7:1] } = { $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [8] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1393:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1394
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1394 [15:9] $auto$rtlil.cc:1906:Mux$1394 [7:1] } = { $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [8] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1406:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1407
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1407 [15:9] $auto$rtlil.cc:1906:Mux$1407 [7:1] } = { $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [8] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1419:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1420
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1420 [15:9] $auto$rtlil.cc:1906:Mux$1420 [7:1] } = { $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [8] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1432:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1433
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1433 [15:9] $auto$rtlil.cc:1906:Mux$1433 [7:1] } = { $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [8] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1445:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1446
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1446 [15:9] $auto$rtlil.cc:1906:Mux$1446 [7:1] } = { $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [8] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1458:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1459
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1459 [15:9] $auto$rtlil.cc:1906:Mux$1459 [7:1] } = { $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [8] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1471:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1472
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1472 [15:9] $auto$rtlil.cc:1906:Mux$1472 [7:1] } = { $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [8] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1484:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1485
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1485 [15:9] $auto$rtlil.cc:1906:Mux$1485 [7:1] } = { $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [8] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1497:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1498
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1498 [15:9] $auto$rtlil.cc:1906:Mux$1498 [7:1] } = { $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [8] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1510:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1511
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1511 [15:9] $auto$rtlil.cc:1906:Mux$1511 [7:1] } = { $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [8] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1523:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1524
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1524 [15:9] $auto$rtlil.cc:1906:Mux$1524 [7:1] } = { $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [8] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1536:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1537
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1537 [15:9] $auto$rtlil.cc:1906:Mux$1537 [7:1] } = { $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [8] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [0] }
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$969:
      Old ports: A=2'11, B=2'00, Y=$techmap\rx_from_ble.$procmux$969_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$969_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$969_Y [1] = $techmap\rx_from_ble.$procmux$969_Y [0]
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$977:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1212 [0] }, Y=$techmap\rx_from_ble.$procmux$977_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1212 [0], Y=$techmap\rx_from_ble.$procmux$977_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$977_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$982:
      Old ports: A=2'10, B=2'00, Y=$techmap\rx_from_ble.$procmux$982_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$982_Y [1]
      New connections: $techmap\rx_from_ble.$procmux$982_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1022:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1022_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1022_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1022_Y [1] = $techmap\tx_to_ble.$procmux$1022_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1030:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_ble.$procmux$1027_Y [0] }, Y=$techmap\tx_to_ble.$procmux$1030_Y
      New ports: A=1'0, B=$techmap\tx_to_ble.$procmux$1027_Y [0], Y=$techmap\tx_to_ble.$procmux$1030_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1030_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1022:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1022_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1022_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1022_Y [1] = $techmap\tx_to_pc.$procmux$1022_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1030:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1218 [0] }, Y=$techmap\tx_to_pc.$procmux$1030_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1218 [0], Y=$techmap\tx_to_pc.$procmux$1030_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1030_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1563\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1537 [0] $auto$rtlil.cc:1906:Mux$1537 [8] }
    New input vector for $reduce_or cell $techmap$techmap1562\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1420 [0] $auto$rtlil.cc:1906:Mux$1420 [8] }
    New input vector for $reduce_or cell $techmap$techmap1561\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1394 [0] $auto$rtlil.cc:1906:Mux$1394 [8] }
    New input vector for $reduce_or cell $techmap$techmap1560\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1498 [0] $auto$rtlil.cc:1906:Mux$1498 [8] }
    New input vector for $reduce_or cell $techmap$techmap1559\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1511 [0] $auto$rtlil.cc:1906:Mux$1511 [8] }
    New input vector for $reduce_or cell $techmap$techmap1558\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1485 [0] $auto$rtlil.cc:1906:Mux$1485 [8] }
    New input vector for $reduce_or cell $techmap$techmap1557\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1524 [0] $auto$rtlil.cc:1906:Mux$1524 [8] }
    New input vector for $reduce_or cell $techmap$techmap1556\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1446 [0] $auto$rtlil.cc:1906:Mux$1446 [8] }
    New input vector for $reduce_or cell $techmap$techmap1555\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1554: { $auto$rtlil.cc:1906:Mux$1368 [0] $auto$rtlil.cc:1906:Mux$1368 [8] }
    New input vector for $reduce_or cell $techmap$techmap1552\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1433 [0] $auto$rtlil.cc:1906:Mux$1433 [8] }
    New input vector for $reduce_or cell $techmap$techmap1551\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1550: { $auto$rtlil.cc:1906:Mux$1459 [0] $auto$rtlil.cc:1906:Mux$1459 [8] }
    New input vector for $reduce_or cell $techmap$techmap1548\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1381 [0] $auto$rtlil.cc:1906:Mux$1381 [8] }
    New input vector for $reduce_or cell $techmap$techmap1547\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1407 [0] $auto$rtlil.cc:1906:Mux$1407 [8] }
    New input vector for $reduce_or cell $techmap$techmap1546\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1545: { $auto$rtlil.cc:1906:Mux$1472 [0] $auto$rtlil.cc:1906:Mux$1472 [8] }
  Optimizing cells in module \service.
Performed a total of 49 changes.

32.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

32.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

32.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

32.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

32.30.9. Rerunning OPT passes. (Maybe there is more to do..)

32.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

=======
>>>>>>> refs/remotes/origin/main
32.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

32.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

32.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

32.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.30.16. Finished OPT passes. (There is nothing left to do.)

32.31. Executing TECHMAP pass (map to technology primitives).

32.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

32.31.3. Continuing TECHMAP pass.
<<<<<<< HEAD
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
=======
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
>>>>>>> refs/remotes/origin/main
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<<<<<<< HEAD
<suppressed ~1601 debug messages>
=======
<suppressed ~1503 debug messages>
>>>>>>> refs/remotes/origin/main

32.32. Executing ICE40_OPT pass (performing simple optimizations).

32.32.1. Running ICE40 specific optimizations.

32.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<<<<<<< HEAD
<suppressed ~672 debug messages>

32.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.
=======
<suppressed ~606 debug messages>

32.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~213 debug messages>
Removed a total of 71 cells.
>>>>>>> refs/remotes/origin/main

32.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

32.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
<<<<<<< HEAD
Removed 315 unused cells and 952 unused wires.
<suppressed ~320 debug messages>
=======
Removed 311 unused cells and 845 unused wires.
<suppressed ~316 debug messages>
>>>>>>> refs/remotes/origin/main

32.32.6. Rerunning OPT passes. (Removed registers in this run.)

32.32.7. Running ICE40 specific optimizations.
<<<<<<< HEAD
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1273.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1278.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1296.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1304.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1307.slice[0].carry: CO=\rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1310.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1316.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1328.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1331.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1337.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1346.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1349.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1304.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1307.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1310.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1316.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1328.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1331.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1337.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1346.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1349.slice[1].adder back to logic.

32.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~165 debug messages>
=======
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1729.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1734.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1752.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1766.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1769.slice[0].carry: CO=\rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1772.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1778.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1784.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1790.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1793.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1799.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1808.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1811.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1766.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1769.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1772.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1778.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1784.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1790.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1793.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1799.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1808.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1811.slice[1].adder back to logic.

32.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~166 debug messages>
>>>>>>> refs/remotes/origin/main

32.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

32.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
<<<<<<< HEAD
Removing $auto$simplemap.cc:420:simplemap_dff$1996 ($_DFF_P_) from module service.
=======
Removing $auto$simplemap.cc:420:simplemap_dff$3481 ($_DFF_P_) from module service.
>>>>>>> refs/remotes/origin/main
Replaced 1 DFF cells.

32.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 5 unused cells and 27 unused wires.
<suppressed ~6 debug messages>

32.32.12. Rerunning OPT passes. (Removed registers in this run.)

32.32.13. Running ICE40 specific optimizations.
<<<<<<< HEAD
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[2].adder back to logic.
=======
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[2].adder back to logic.
>>>>>>> refs/remotes/origin/main

32.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~16 debug messages>

32.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

32.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

32.32.18. Rerunning OPT passes. (Removed registers in this run.)

32.32.19. Running ICE40 specific optimizations.
<<<<<<< HEAD
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[2].carry: CO=\ble_data_adr [2]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1301.slice[3].adder back to logic.
=======
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[2].carry: CO=\ble_data_adr [2]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1757.slice[3].adder back to logic.
>>>>>>> refs/remotes/origin/main

32.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~13 debug messages>

32.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

32.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

32.32.24. Rerunning OPT passes. (Removed registers in this run.)

32.32.25. Running ICE40 specific optimizations.

32.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

32.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.32.30. Finished OPT passes. (There is nothing left to do.)

32.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

32.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
<<<<<<< HEAD
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1978 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1979 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1980 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1981 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1982 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1983 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1984 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1985 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1987 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1988 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1989 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1990 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1991 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1992 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1993 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1994 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1997 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [2] -> \ble_data_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1998 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [3] -> \ble_data_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [4] -> \ble_data_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [5] -> \ble_data_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [6] -> \ble_data_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2002 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [7] -> \ble_data_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2003 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [8] -> \ble_data_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2004 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [9] -> \ble_data_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2005 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [10] -> \ble_data_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2006 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [11] -> \ble_data_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2007 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [12] -> \ble_data_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2096 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$929.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2097 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$907.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2098 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$886.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2099 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$866.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2100 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$847.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2101 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$829.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2102 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$812.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2103 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$796.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.rx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2104 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2105 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2106 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2107 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [3] -> \tx_to_ble.data_index [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2110 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [0] -> \rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2111 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [1] -> \rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2112 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [2] -> \rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2113 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [3] -> \rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2114 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [4] -> \rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [5] -> \rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$954.$ternary$/usr/bin/../share/yosys/techmap.v:445$2181_Y [6] -> \rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2119 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$994.$ternary$/usr/bin/../share/yosys/techmap.v:445$2144_Y -> \rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2120 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [0] -> \rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2121 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [1] -> \rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2122 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [2] -> \rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2123 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [3] -> \rx_from_ble.data_index [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2268 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2269 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2270 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2271 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2128_Y [3] -> \tx_to_pc.data_index [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2275 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2283 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2284 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2285 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2286 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2287 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2288 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2289 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2290 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2482 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2490 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2491 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2492 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2493 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2494 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2495 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2496 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2497 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1046.$ternary$/usr/bin/../share/yosys/techmap.v:445$2350_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2588 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2589 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2590 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2591 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2592 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2593 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2594 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2595 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2596 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2597 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2598 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2599 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2600 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2601 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2602 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2603 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2604 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2605 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2606 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2607 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2608 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2609 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2610 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2611 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2612 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2613 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2614 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2615 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2616 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2617 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2618 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2619 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2621 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2791 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2927 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2965 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3008 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3009 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3010 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3011 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3012 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3013 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3014 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3015 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3016 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3017 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3018 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3019 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3164 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3165 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3166 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3167 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3168 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3169 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3170 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3171 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3172 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3173 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3174 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3175 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3176 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3177 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3178 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3179 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3180 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3181 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3182 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3183 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3184 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3185 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3186 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3187 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3188 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3189 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3190 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3191 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3192 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3193 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3194 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3245 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3324 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3328 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3329 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3330 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3433 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3434 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3435 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3436 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3437 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3438 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3439 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3440 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3441 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3442 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3443 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3444 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3445 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3446 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3447 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3448 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3449 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3450 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3451 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3452 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3453 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3454 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3455 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3456 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3457 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3458 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3459 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3460 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3581 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3582 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3583 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3584 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3585 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3586 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3587 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3588 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3589 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3686 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3687 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3688 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3689 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3690 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3691 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3692 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3693 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3694 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3695 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3696 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3697 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3698 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3701 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3702 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3703 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3704 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3705 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3706 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3707 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3708 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3709 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3710 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3711 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3712 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3713 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3714 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3715 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3716 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3717 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3900 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3901 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3902 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3903 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3904 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3905 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3906 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3907 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3908 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3909 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3910 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3911 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3912 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3913 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3914 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3915 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3916 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3917 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3918 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3919 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3920 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3921 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3922 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3923 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3924 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3925 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3926 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3927 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3928 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3929 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3930 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3931 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3997 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.
=======
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3463 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3464 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3465 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3466 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3467 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3468 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3469 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3470 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3472 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3473 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3474 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3475 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3476 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3477 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3478 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3479 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3482 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [2] -> \ble_data_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3483 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [3] -> \ble_data_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3484 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [4] -> \ble_data_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3485 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [5] -> \ble_data_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3486 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [6] -> \ble_data_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3487 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [7] -> \ble_data_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3488 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [8] -> \ble_data_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3489 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [9] -> \ble_data_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3490 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [10] -> \ble_data_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3491 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [11] -> \ble_data_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3492 to $_DFFE_PP_ for $0\ble_data_adr[31:0] [12] -> \ble_data_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3512 to $_DFFE_PP_ for $0\write_queue[0:0] -> \write_queue.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3585 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1118.$ternary$/usr/bin/../share/yosys/techmap.v:445$3663_Y -> \rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3586 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [0] -> \rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3587 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [1] -> \rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3588 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [2] -> \rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3589 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [3] -> \rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3590 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [4] -> \rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3591 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [5] -> \rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3592 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1124.$ternary$/usr/bin/../share/yosys/techmap.v:445$3641_Y [6] -> \rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3595 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1168.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [0] -> \rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3596 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1168.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [1] -> \rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3597 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1168.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [2] -> \rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3698 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3702 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3710 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3711 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3712 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3713 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3714 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3715 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3716 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3717 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3834 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3835 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3836 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1226.$ternary$/usr/bin/../share/yosys/techmap.v:445$3599_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3838 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3846 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3847 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3848 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3849 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3850 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3851 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3852 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3853 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1216.$ternary$/usr/bin/../share/yosys/techmap.v:445$3759_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4108 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4109 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4110 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4111 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4112 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4113 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4114 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4115 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4116 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4117 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4118 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4119 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4120 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4121 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4122 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4123 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4124 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4125 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4126 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4127 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4128 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4129 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4130 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4131 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4132 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4133 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4134 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4135 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4136 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4137 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4138 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4139 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4141 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4312 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4426 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4466 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4477 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4478 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4479 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4480 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4481 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4482 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4483 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4484 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4485 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4486 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4487 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4488 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4632 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4633 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4634 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4635 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4636 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4637 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4638 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4639 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4640 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4641 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4642 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4643 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4644 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4645 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4646 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4647 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4648 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4649 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4650 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4651 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4652 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4653 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4654 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4655 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4656 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4657 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4658 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4659 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4660 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4661 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4662 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4663 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4709 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4743 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4745 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4749 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4750 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4851 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4852 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4853 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4854 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4855 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4856 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4857 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4858 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4859 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4860 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4861 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4862 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4863 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4864 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4865 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4866 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4867 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4868 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4869 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4870 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4871 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4872 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4873 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4874 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4875 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4876 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4877 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4878 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4950 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4951 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4952 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4953 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4954 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4955 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4956 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4957 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4958 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5036 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5037 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5038 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5039 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5040 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5041 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5042 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5043 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5044 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5045 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5046 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5047 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5048 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5049 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5050 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5051 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5052 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5053 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5054 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5055 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5056 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5057 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5058 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5059 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5060 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5061 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5062 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5063 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5064 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5065 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5066 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5067 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5223 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5224 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5225 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5226 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5227 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5228 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5229 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5230 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5231 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5232 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5233 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5234 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5235 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5236 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5237 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5238 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5239 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5240 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5241 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5242 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5243 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5244 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5245 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5246 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5247 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5248 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5249 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5250 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5251 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5252 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5253 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5254 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5329 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.
>>>>>>> refs/remotes/origin/main

32.35. Executing TECHMAP pass (map to technology primitives).

32.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

32.35.2. Continuing TECHMAP pass.
<<<<<<< HEAD
Using template \$_DFF_P_ for cells of type $_DFF_P_.
=======
>>>>>>> refs/remotes/origin/main
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<<<<<<< HEAD
<suppressed ~356 debug messages>

32.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~564 debug messages>
=======
<suppressed ~346 debug messages>

32.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~548 debug messages>
>>>>>>> refs/remotes/origin/main

32.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

32.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
<<<<<<< HEAD
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2004 (SB_DFFE): \ble_data_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFFE): \rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFFE): \rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2278 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2000 (SB_DFFE): \ble_data_adr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1997 (SB_DFFE): \ble_data_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2007 (SB_DFFE): \ble_data_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2002 (SB_DFFE): \ble_data_adr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1999 (SB_DFFE): \ble_data_adr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2283 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2097 (SB_DFFE): \rx_from_ble.rx_byte [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2103 (SB_DFFE): \rx_from_ble.rx_byte [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2098 (SB_DFFE): \rx_from_ble.rx_byte [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2099 (SB_DFFE): \rx_from_ble.rx_byte [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2100 (SB_DFFE): \rx_from_ble.rx_byte [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2101 (SB_DFFE): \rx_from_ble.rx_byte [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2102 (SB_DFFE): \rx_from_ble.rx_byte [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2104 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2005 (SB_DFFE): \ble_data_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2105 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2107 (SB_DFFE): \tx_to_ble.data_index [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2111 (SB_DFFE): \rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2109 (SB_DFF): \rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2112 (SB_DFFE): \rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2108 (SB_DFF): \rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2113 (SB_DFFE): \rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2096 (SB_DFFE): \rx_from_ble.rx_byte [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2114 (SB_DFFE): \rx_from_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE): \rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE): \rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFF): \rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF): \rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2006 (SB_DFFE): \ble_data_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2110 (SB_DFFE): \rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFFE): \rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFFE): \rx_from_ble.data_index [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2003 (SB_DFFE): \ble_data_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2276 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2268 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2269 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2270 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2277 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2271 (SB_DFFE): \tx_to_pc.data_index [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFFE): \rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2281 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2287 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2290 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2284 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2288 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2289 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2285 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2286 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2282 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2280 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2274 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2291 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2279 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2275 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1998 (SB_DFFE): \ble_data_adr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2488 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2491 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2492 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2493 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2494 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2490 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2001 (SB_DFFE): \ble_data_adr [6] = 0

32.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$3754 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1954 (A=1'0, B=$procmux$1075_CMP, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$1986 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2422 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2031 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:33$87_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2030 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2559 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2481 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4294 (A=1'0, B=$techmap$techmap\rx_from_ble.$procmux$971.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2162_Y, S=$auto$simplemap.cc:127:simplemap_reduce$4066) into $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2420 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2276 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2421 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2277 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4955 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1024.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2162_Y, S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3340 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3327 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2424 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2418 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2274 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2423 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2279 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2419 (A=1'0, B=$techmap\tx_to_ble.$procmux$1008_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1198) into $auto$simplemap.cc:420:simplemap_dff$2275 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2563 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2485 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2565 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2561 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2483 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2562 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2484 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2564 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4274 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1024.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2162_Y, S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2489 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2654 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2656 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2591 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2655 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2590 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2657 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2592 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2658 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2593 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2659 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2594 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2660 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2595 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2661 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2596 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2662 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2597 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2663 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2598 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2664 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2599 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2665 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2600 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2666 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2601 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2667 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2602 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2668 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2603 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2669 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2604 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2670 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2605 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2671 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2606 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2672 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2607 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2673 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2674 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2675 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2676 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2677 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2678 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2679 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2680 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2681 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2616 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2682 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2617 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2683 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2684 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2717 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2718 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$5699 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2719 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2720 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2721 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2722 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2723 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2724 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2726 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2653 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2588 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2727 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2728 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2729 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2730 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2731 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2732 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2733 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2734 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2735 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2736 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2737 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2738 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2739 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2740 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2741 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2742 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2743 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2744 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2745 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2746 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2748 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2747 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2560 (A=1'0, B=$techmap\tx_to_pc.$procmux$1008_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1200) into $auto$simplemap.cc:420:simplemap_dff$2482 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2725 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2928 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2920 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2931 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2923 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2938 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2930 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2941 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$2926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2815 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$120_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2939 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2919 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2932 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2924 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2929 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2921 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3342 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3320 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3336 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$627_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3314 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3339 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3326 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3337 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$628_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3323 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3341 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$634_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3319 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3344 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3322 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3343 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3321 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3338 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3325 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3333 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$624_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3331 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$625_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3345 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$644_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3594 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3587 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1976 (A=1'0, B=$procmux$1092_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$1977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3755 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3756 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3591 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$191_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3589 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3757 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3758 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3760 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3773 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3761 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3762 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3763 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3696 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3764 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3765 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3698 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3766 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3699 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3767 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3700 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3768 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3769 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3770 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3771 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3759 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3774 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3775 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3776 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3777 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3778 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3779 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3780 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3781 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3782 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3715 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3783 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3716 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3784 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3717 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3772 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3753 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3686 (SB_DFFE).
=======
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3593 (SB_DFF): \rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3597 (SB_DFFE): \rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3835 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3482 (SB_DFFE): \ble_data_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3483 (SB_DFFE): \ble_data_adr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3484 (SB_DFFE): \ble_data_adr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3485 (SB_DFFE): \ble_data_adr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3486 (SB_DFFE): \ble_data_adr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3487 (SB_DFFE): \ble_data_adr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3489 (SB_DFFE): \ble_data_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3490 (SB_DFFE): \ble_data_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3491 (SB_DFFE): \ble_data_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3492 (SB_DFFE): \ble_data_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3595 (SB_DFFE): \rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3488 (SB_DFFE): \ble_data_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3584 (SB_DFF): \rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3589 (SB_DFFE): \rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3583 (SB_DFF): \rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3585 (SB_DFFE): \rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3702 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3588 (SB_DFFE): \rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3846 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3586 (SB_DFFE): \rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3591 (SB_DFFE): \rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3700 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3698 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3716 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3715 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3718 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3717 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3836 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3838 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3842 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3839 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3840 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3841 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3843 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3834 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3844 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3845 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3847 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3852 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3848 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3849 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3850 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3851 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3853 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3837 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3854 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3587 (SB_DFFE): \rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3596 (SB_DFFE): \rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3594 (SB_DFF): \rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3699 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3592 (SB_DFFE): \rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3590 (SB_DFFE): \rx_from_ble.clock_count [4] = 0

32.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$3461 (A=1'0, B=$procmux$1506_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3462 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3443 (A=1'0, B=$procmux$1489_CMP, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3471 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3522 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:33$251_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3805 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3702 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4765 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$808_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3807 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4754 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$788_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4763 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4741 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3810 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4264 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4237 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4140 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3804 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5121 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3890 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3838 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3894 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3842 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3891 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3839 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3892 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3840 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3893 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3841 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3895 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3843 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5402 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1194.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$3622_Y, S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3845 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3889 (A=1'0, B=$techmap\tx_to_pc.$procmux$1178_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1648) into $auto$simplemap.cc:420:simplemap_dff$3837 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4175 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5107 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4176 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5117 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4174 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4190 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4125 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4197 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4180 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4182 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4183 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4184 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4185 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4186 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4121 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4187 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4122 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4188 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4123 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4193 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4128 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4177 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4191 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4126 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4178 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5948 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1194.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$3622_Y, S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4194 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4129 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4195 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4130 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4196 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4131 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4189 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4124 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4192 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4127 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4240 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4200 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4135 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4201 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4136 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4203 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4138 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4239 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4204 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4139 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4179 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4238 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$6925 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4202 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4137 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4241 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4242 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4243 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4244 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4246 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4181 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4247 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4248 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4249 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4250 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4251 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4252 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4253 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4254 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4255 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4256 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4257 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4258 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4199 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4134 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4260 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4261 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4262 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4263 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4198 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4133 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4265 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4266 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4267 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4268 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4259 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4245 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$276_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4316 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$284_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4427 (A=$techmap\servant.cpu.rf_ram_if.$procmux$903_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$4419 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4428 (A=$techmap\servant.cpu.rf_ram_if.$procmux$903_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$4420 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4437 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4416 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4429 (A=$techmap\servant.cpu.rf_ram_if.$procmux$903_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$4421 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4430 (A=$techmap\servant.cpu.rf_ram_if.$procmux$903_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$4422 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4431 (A=$techmap\servant.cpu.rf_ram_if.$procmux$903_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$4423 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4440 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$4425 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4438 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4418 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3809 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4764 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4742 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3806 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4756 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$791_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4734 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4759 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4747 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4761 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$798_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4739 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4757 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$792_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4744 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4760 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4748 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3808 (A=1'0, B=$techmap\tx_to_ble.$procmux$1178_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1646) into $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4758 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$793_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4746 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4751 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$789_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4959 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$355_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4856 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6431 (A=1'0, B=$techmap$techmap\rx_from_ble.$procmux$1141.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$3622_Y, S=$auto$simplemap.cc:127:simplemap_reduce$6426) into $auto$simplemap.cc:420:simplemap_dff$3594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5104 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4762 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4740 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4965 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4954 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5105 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5038 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5106 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5039 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5108 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5041 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5109 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5042 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5110 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5043 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5111 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5112 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5045 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5113 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5046 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5114 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5115 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5116 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5124 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4173 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5118 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5122 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5120 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5123 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5119 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5126 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5127 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5128 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5129 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5130 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5131 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5132 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5133 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5134 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5125 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5103 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$5036 (SB_DFFE).
>>>>>>> refs/remotes/origin/main

32.40. Executing ICE40_OPT pass (performing simple optimizations).

32.40.1. Running ICE40 specific optimizations.

32.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<<<<<<< HEAD
<suppressed ~204 debug messages>

32.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~870 debug messages>
Removed a total of 290 cells.
=======
<suppressed ~187 debug messages>

32.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~873 debug messages>
Removed a total of 291 cells.
>>>>>>> refs/remotes/origin/main

32.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

32.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
<<<<<<< HEAD
Removed 140 unused cells and 2225 unused wires.
<suppressed ~142 debug messages>
=======
Removed 141 unused cells and 2164 unused wires.
<suppressed ~144 debug messages>
>>>>>>> refs/remotes/origin/main

32.40.6. Rerunning OPT passes. (Removed registers in this run.)

32.40.7. Running ICE40 specific optimizations.

32.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

32.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

32.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

32.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

32.40.12. Finished OPT passes. (There is nothing left to do.)

32.41. Executing TECHMAP pass (map to technology primitives).

32.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

32.41.2. Continuing TECHMAP pass.
No more expansions possible.

32.42. Executing ABC pass (technology mapping using ABC).

32.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
<<<<<<< HEAD
Extracted 1714 gates and 2323 wires to a netlist network with 607 inputs and 371 outputs.
=======
Extracted 1630 gates and 2226 wires to a netlist network with 594 inputs and 352 outputs.
>>>>>>> refs/remotes/origin/main

32.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
<<<<<<< HEAD
ABC: Total number of equiv classes                =     668.
ABC: Participating nodes from both networks       =    1443.
ABC: Participating nodes from the first network   =     669. (  81.88 % of nodes)
ABC: Participating nodes from the second network  =     774. (  94.74 % of nodes)
ABC: Node pairs (any polarity)                    =     669. (  81.88 % of names can be moved)
ABC: Node pairs (same polarity)                   =     551. (  67.44 % of names can be moved)
ABC: Total runtime =     0.07 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

32.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1630
ABC RESULTS:        internal signals:     1345
ABC RESULTS:           input signals:      607
ABC RESULTS:          output signals:      371
Removing temp directory.
Removed 0 unused cells and 1502 unused wires.
=======
ABC: Total number of equiv classes                =     644.
ABC: Participating nodes from both networks       =    1395.
ABC: Participating nodes from the first network   =     644. (  82.04 % of nodes)
ABC: Participating nodes from the second network  =     751. (  95.67 % of nodes)
ABC: Node pairs (any polarity)                    =     644. (  82.04 % of names can be moved)
ABC: Node pairs (same polarity)                   =     518. (  65.99 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

32.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1566
ABC RESULTS:        internal signals:     1280
ABC RESULTS:           input signals:      594
ABC RESULTS:          output signals:      352
Removing temp directory.
Removed 0 unused cells and 1419 unused wires.
>>>>>>> refs/remotes/origin/main

32.43. Executing TECHMAP pass (map to technology primitives).

32.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

32.43.2. Continuing TECHMAP pass.
<<<<<<< HEAD
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
=======
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
>>>>>>> refs/remotes/origin/main
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
<<<<<<< HEAD
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
=======
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
>>>>>>> refs/remotes/origin/main
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
<<<<<<< HEAD
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100100010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~2212 debug messages>
Removed 0 unused cells and 1630 unused wires.
=======
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~2169 debug messages>
Removed 0 unused cells and 1566 unused wires.
>>>>>>> refs/remotes/origin/main

32.44. Executing HIERARCHY pass (managing design hierarchy).

32.44.1. Analyzing design hierarchy..
Top module:  \service

32.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

32.45. Printing statistics.

=== service ===

<<<<<<< HEAD
   Number of wires:               1471
   Number of wire bits:           4105
   Number of public wires:         440
   Number of public wire bits:    2842
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1392
     SB_CARRY                      122
     SB_DFF                         29
     SB_DFFE                       188
     SB_DFFESR                      72
     SB_DFFSR                       66
     SB_DFFSS                        1
     SB_LUT4                       898
=======
   Number of wires:               1451
   Number of wire bits:           4106
   Number of public wires:         447
   Number of public wire bits:    2873
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1344
     SB_CARRY                      119
     SB_DFF                         29
     SB_DFFE                       178
     SB_DFFESR                      72
     SB_DFFSR                       66
     SB_DFFSS                        1
     SB_LUT4                       863
>>>>>>> refs/remotes/origin/main
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

32.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

33. Executing JSON backend.

<<<<<<< HEAD
End of script. Logfile hash: ec52c3fd24
CPU: user 2.27s system 0.02s, MEM: 64.23 MB total, 54.06 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 25% 25x opt_clean (0 sec), 16% 25x opt_expr (0 sec), ...
=======
Warnings: 12 unique messages, 39 total
End of script. Logfile hash: 9b9ad63fe3
CPU: user 2.41s system 0.03s, MEM: 75.53 MB total, 65.89 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 24% 25x opt_clean (0 sec), 16% 25x opt_expr (0 sec), ...
>>>>>>> refs/remotes/origin/main
