
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant.v
Parsing Verilog input from `src/servant_1.2.1/service/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/service/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/service/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/service/service.v
Parsing Verilog input from `src/servant_1.2.1/service/service.v' to AST representation.
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

28. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile
Generating RTLIL representation for module `$paramod$f1f69d35145dc335c26e91ab6cce31100837bffd\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:158.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:164.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:170.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:185.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:186.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:187.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:191.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:192.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:193.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:194.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:195.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:158.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:164.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:170.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:185.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:186.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:187.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:191.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:192.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:193.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:194.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:195.

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:158.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:164.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:170.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:185.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:186.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:187.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:191.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:192.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:193.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:194.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:195.

31. Executing SYNTH_ICE40 pass.

31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

31.2. Executing HIERARCHY pass (managing design hierarchy).

31.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:158.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:164.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:170.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:185.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:186.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:187.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:191.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:192.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:193.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:194.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:195.

31.3.1. Analyzing design hierarchy..
Top module:  \service

31.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.
src/servant_1.2.1/service/uart_tx.v:108: Warning: Identifier `\done' is implicitly declared.

31.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

31.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile
Generating RTLIL representation for module `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram'.
Preloading $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram from /home/paul/Bachelor_Project/fusesoc_libraries/serv/sw/simple_BLE.hex

31.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
Parameter \memfile
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant'.

31.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

31.3.7. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

31.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/service/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

31.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

31.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

31.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

31.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

31.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

31.3.14. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

31.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

31.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

31.3.18. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

31.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

31.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

31.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

31.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

31.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

31.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

31.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

31.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

31.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

31.3.29. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.30. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 27 unused modules.

31.4. Executing PROC pass (convert processes to netlists).

31.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$349'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$349'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:63$107'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:63$107'.
Cleaned up 7 empty switches.

31.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$110 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:48$84 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$59 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$59 in module uart_rx.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$41 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$41 in module uart_tx.
Marked 2 switch rules as full_case in process $proc$src/servant_1.2.1/service/service.v:146$31 in module service.
Removed a total of 2 dead cases.

31.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$77'.
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$76'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$73'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$72'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$71'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$70'.
  Set init value: \r_Rx_temp = 1'1
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$55'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$54'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$53'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$52'.
  Set init value: \o_wb_rdt = 1'1
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:144$40'.
  Set init value: \add = 1'0
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:143$39'.
  Set init value: \recieve = 1'0
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:131$38'.
  Set init value: \my_adr = 12582912

31.4.4. Executing PROC_ARST pass (detect async resets in processes).

31.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\ibus_cyc[0:0]
     6/7: $0\init_done[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
     5/10: $0\timer_irq_r[0:0]
     6/10: $0\mie_mtie[0:0]
     7/10: $0\mstatus_mie[0:0]
     8/10: $0\mcause31[0:0]
     9/10: $0\o_new_irq[0:0]
    10/10: $0\mstatus_mpie[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$163'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$143'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_DATA[1:0]$141
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_ADDR[9:0]$139
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$133'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$109'.
     1/1: $0\o_wb_dat[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
     1/13: $0\o_wb_rdt[31:0]
     2/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90
     3/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_DATA[31:0]$91
     4/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_ADDR[10:0]$94
     5/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93
     6/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_DATA[31:0]$92
     7/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_ADDR[10:0]$89
     8/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97
     9/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_DATA[31:0]$96
    10/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_ADDR[10:0]$95
    11/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100
    12/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_DATA[31:0]$99
    13/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_ADDR[10:0]$98
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$84'.
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$77'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$76'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$73'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$72'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$71'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$70'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
    10/13: $0\data_index[2:0]
    11/13: $0\clock_count[6:0]
    12/13: $0\state[1:0]
    13/13: $0\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$55'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$54'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$53'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$52'.
     1/1: $1\o_wb_rdt[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
     1/6: $0\data_index[2:0]
     2/6: $0\clock_count[6:0]
     3/6: $0\state[1:0]
     4/6: $0\temp_done[0:0]
     5/6: $0\temp_data[7:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:144$40'.
     1/1: $1\add[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:143$39'.
     1/1: $1\recieve[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:131$38'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
     1/13: $0\dat[31:0] [31:8]
     2/13: $0\dat[31:0] [7:0]
     3/13: $0\add[0:0]
     4/13: $0\recieve[0:0]
     5/13: $0\adr[31:0]
     6/13: $0\pc_active[0:0]
     7/13: $0\sel[3:0]
     8/13: $0\we[0:0]
     9/13: $0\cyc[0:0]
    10/13: $0\my_adr[31:0]
    11/13: $0\data_to[7:0]
    12/13: $0\data_to_ble[7:0]
    13/13: $0\tx_active[0:0]

31.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$109'.

31.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
  created $dff cell `$procdff$1108' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1109' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1110' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1111' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1112' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1113' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1114' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
  created $dff cell `$procdff$1115' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1116' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$163'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1152' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
  created $dff cell `$procdff$1153' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1154' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1155' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
  created $dff cell `$procdff$1156' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$143'.
  created $dff cell `$procdff$1157' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1158' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1159' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$133'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$84'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
  created $dff cell `$procdff$1190' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\service.\my_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `\service.\cyc' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\service.\we' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\service.\sel' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\service.\dat' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\service.\adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `\service.\recieve' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\service.\add' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
  created $dff cell `$procdff$1208' with positive edge clock.

31.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$643'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$619'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$557'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$556'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$395'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$381'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$371'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$340'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$325'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$266'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$187'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$164'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$163'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$160'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$156'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$143'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$138'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$133'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$118'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$114'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$110'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$109'.
Found and cleaned up 4 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$88'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$84'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$84'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$77'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$76'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$75'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$74'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$73'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$72'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$71'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$70'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$59'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$58'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$57'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$56'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$55'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$54'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$53'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$52'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$41'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:144$40'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:143$39'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:131$38'.
Found and cleaned up 7 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:146$31'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:146$31'.
Cleaned up 63 empty switches.

31.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram for cells of type $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Using template $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant for cells of type $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Using template uart_rx for cells of type uart_rx.
Using template uart_tx for cells of type uart_tx.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~25 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Deleting now unused module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Deleting now unused module uart_rx.
Deleting now unused module uart_tx.

31.6. Executing TRIBUF pass.

31.7. Executing DEMINOUT pass (demote inout ports to input or output).

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~96 debug messages>

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 27 unused cells and 524 unused wires.
<suppressed ~34 debug messages>

31.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

31.11. Executing OPT pass (performing simple optimizations).

31.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

31.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1104: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

31.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$144: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$560: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$272: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$491: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    New ctrl vector for $mux cell $procmux$1104: { }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$763:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$769:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$775:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$781:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_EN[31:0]$100 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$743:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$137_EN[1:0]$140 [0]
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1065: { $techmap\tx_to_ble.$procmux$1029_CMP $techmap\tx_to_ble.$procmux$1015_CMP $auto$opt_reduce.cc:132:opt_mux$1210 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1065: { $techmap\tx_to_pc.$procmux$1029_CMP $techmap\tx_to_pc.$procmux$1015_CMP $auto$opt_reduce.cc:132:opt_mux$1212 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1209: { $techmap\tx_to_ble.$procmux$1021_CMP $techmap\tx_to_ble.$procmux$1016_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1211: { $techmap\tx_to_pc.$procmux$1021_CMP $techmap\tx_to_pc.$procmux$1016_CMP }
  Optimizing cells in module \service.
Performed a total of 14 changes.

31.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

31.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \tx_to_pc.temp_done = 1'0 to constant driver in module service.
Promoted 3 init specs to constant drivers.

31.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 142 unused wires.
<suppressed ~9 debug messages>

31.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.9. Rerunning OPT passes. (Maybe there is more to do..)

31.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

31.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\rx_from_ble.$procmux$964: { $techmap\rx_from_ble.$procmux$1000_CMP $techmap\rx_from_ble.$procmux$804_CMP $auto$opt_reduce.cc:132:opt_mux$1214 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1020: { $techmap\tx_to_ble.$procmux$1016_CMP $auto$opt_reduce.cc:132:opt_mux$1216 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1020: { $techmap\tx_to_pc.$procmux$1016_CMP $auto$opt_reduce.cc:132:opt_mux$1218 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1213: { $techmap\rx_from_ble.$procmux$1005_CMP $techmap\rx_from_ble.$procmux$797_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1215: { $techmap\tx_to_ble.$procmux$1029_CMP $techmap\tx_to_ble.$procmux$1021_CMP $techmap\tx_to_ble.$procmux$1015_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1217: { $techmap\tx_to_pc.$procmux$1029_CMP $techmap\tx_to_pc.$procmux$1021_CMP $techmap\tx_to_pc.$procmux$1015_CMP }
  Optimizing cells in module \service.
Performed a total of 6 changes.

31.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.16. Rerunning OPT passes. (Maybe there is more to do..)

31.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

31.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.23. Finished OPT passes. (There is nothing left to do.)

31.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:68$102 (ram.mem).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:156$34 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:168$35 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$gt$src/servant_1.2.1/service/service.v:174$36 ($gt).
Removed top 30 bits (of 32) from port B of cell service.$add$src/servant_1.2.1/service/service.v:178$37 ($add).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1181 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1178 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1174 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1171 ($dff).
Removed cell service.$techmap\ram.$procmux$785 ($mux).
Removed cell service.$techmap\ram.$procmux$783 ($mux).
Removed cell service.$techmap\ram.$procmux$779 ($mux).
Removed cell service.$techmap\ram.$procmux$777 ($mux).
Removed cell service.$techmap\ram.$procmux$773 ($mux).
Removed cell service.$techmap\ram.$procmux$771 ($mux).
Removed cell service.$techmap\ram.$procmux$767 ($mux).
Removed cell service.$techmap\ram.$procmux$765 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$998 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$984 ($mux).
Removed top 2 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$903_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$882_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$862_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\rx_from_ble.$procmux$804_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:95$66 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\rx_from_ble.$eq$src/servant_1.2.1/service/uart_rx.v:61$61 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1048 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1037 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1029_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$48 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1048 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1037 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1029_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$48 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$123 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1160 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$747 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$745 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$555 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$549 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$572 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$173 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$166 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$292 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$284 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$365 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$359 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1178 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1174 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1171 ($dff).
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_DATA[31:0]$91.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN[31:0]$90.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_DATA[31:0]$92.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN[31:0]$93.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_DATA[31:0]$96.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN[31:0]$97.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$78_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$79_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$80_EN.
Removed top 4 bits (of 11) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$81_ADDR.
Removed top 25 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69_Y.
Removed top 29 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$984_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$998_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44_Y.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

31.13. Executing PEEPOPT pass (run peephole optimizers).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 34 unused wires.
<suppressed ~2 debug messages>

31.15. Executing SHARE pass (SAT-based resource sharing).

31.16. Executing TECHMAP pass (map to technology primitives).

31.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.16.2. Continuing TECHMAP pass.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~365 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

31.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
  creating $macc model for $add$src/servant_1.2.1/service/service.v:178$37 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$303 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$306 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$328 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$336 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$336 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$328 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$379 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$306 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$303 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69.
  creating $alu model for $macc $add$src/servant_1.2.1/service/service.v:178$37.
  creating $alu model for $gt$src/servant_1.2.1/service/service.v:174$36 ($gt): new $alu
  creating $alu model for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$113 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$43: $auto$alumacc.cc:474:replace_alu$1289
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$43: $auto$alumacc.cc:474:replace_alu$1294
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$113: $auto$alumacc.cc:474:replace_alu$1299
  creating $alu cell for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$68: $auto$alumacc.cc:474:replace_alu$1312
  creating $alu cell for $gt$src/servant_1.2.1/service/service.v:174$36: $auto$alumacc.cc:474:replace_alu$1317
  creating $alu cell for $add$src/servant_1.2.1/service/service.v:178$37: $auto$alumacc.cc:474:replace_alu$1322
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$69: $auto$alumacc.cc:474:replace_alu$1325
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$67: $auto$alumacc.cc:474:replace_alu$1328
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$49: $auto$alumacc.cc:474:replace_alu$1331
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$304: $auto$alumacc.cc:474:replace_alu$1334
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$44: $auto$alumacc.cc:474:replace_alu$1337
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$307: $auto$alumacc.cc:474:replace_alu$1340
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$49: $auto$alumacc.cc:474:replace_alu$1343
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$380: $auto$alumacc.cc:474:replace_alu$1346
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$355: $auto$alumacc.cc:474:replace_alu$1349
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$44: $auto$alumacc.cc:474:replace_alu$1352
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$329: $auto$alumacc.cc:474:replace_alu$1355
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112: $auto$alumacc.cc:474:replace_alu$1358
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$337: $auto$alumacc.cc:474:replace_alu$1361
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629: $auto$alumacc.cc:474:replace_alu$1364
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$161: $auto$alumacc.cc:474:replace_alu$1367
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$155: $auto$alumacc.cc:474:replace_alu$1370
  created 22 $alu and 0 $macc cells.

31.20. Executing OPT pass (performing simple optimizations).

31.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~26 debug messages>

31.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1302: { $auto$alumacc.cc:490:replace_alu$1300 [0] $auto$alumacc.cc:490:replace_alu$1300 [1] $auto$alumacc.cc:490:replace_alu$1300 [2] $auto$alumacc.cc:490:replace_alu$1300 [3] $auto$alumacc.cc:490:replace_alu$1300 [4] $auto$alumacc.cc:490:replace_alu$1300 [5] $auto$alumacc.cc:490:replace_alu$1300 [6] $auto$alumacc.cc:490:replace_alu$1300 [7] $auto$alumacc.cc:490:replace_alu$1300 [8] $auto$alumacc.cc:490:replace_alu$1300 [9] $auto$alumacc.cc:490:replace_alu$1300 [10] $auto$alumacc.cc:490:replace_alu$1300 [11] $auto$alumacc.cc:490:replace_alu$1300 [12] $auto$alumacc.cc:490:replace_alu$1300 [13] $auto$alumacc.cc:490:replace_alu$1300 [14] $auto$alumacc.cc:490:replace_alu$1300 [15] $auto$alumacc.cc:490:replace_alu$1300 [16] $auto$alumacc.cc:490:replace_alu$1300 [17] $auto$alumacc.cc:490:replace_alu$1300 [18] $auto$alumacc.cc:490:replace_alu$1300 [19] $auto$alumacc.cc:490:replace_alu$1300 [20] $auto$alumacc.cc:490:replace_alu$1300 [21] $auto$alumacc.cc:490:replace_alu$1300 [22] $auto$alumacc.cc:490:replace_alu$1300 [23] $auto$alumacc.cc:490:replace_alu$1300 [24] $auto$alumacc.cc:490:replace_alu$1300 [25] $auto$alumacc.cc:490:replace_alu$1300 [26] $auto$alumacc.cc:490:replace_alu$1300 [27] $auto$alumacc.cc:490:replace_alu$1300 [28] $auto$alumacc.cc:490:replace_alu$1300 [29] $auto$alumacc.cc:490:replace_alu$1300 [30] $auto$alumacc.cc:490:replace_alu$1300 [31] }
  Optimizing cells in module \service.
Performed a total of 1 changes.

31.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 9 unused cells and 17 unused wires.
<suppressed ~10 debug messages>

31.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.9. Rerunning OPT passes. (Maybe there is more to do..)

31.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.16. Finished OPT passes. (There is nothing left to do.)

31.21. Executing FSM pass (extract and optimize FSM).

31.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.rx_from_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_pc.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

31.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

31.22. Executing OPT pass (performing simple optimizations).

31.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.22.5. Finished fast OPT passes.

31.23. Executing MEMORY pass.

31.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$103' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$104' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$105' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$106' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$148' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:60$101' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$142' in module `\service': merged data $dff to cell.

31.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 14 unused cells and 16 unused wires.
<suppressed ~15 debug messages>

31.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \i_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$103) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$104) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$105) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$106) has addr \adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

31.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:68$102 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$106 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:60$101 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$148 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$142 ($memrd)

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

31.26. Executing TECHMAP pass (map to technology primitives).

31.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

31.26.2. Continuing TECHMAP pass.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$82ae4f0050d392214cbcfa68b295279b8938e802\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$6ebd6a0cacf41a358c0a9259ff83b3f1c9431718\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d98de1fae17309a4e7bd896ddf1fafcaeee12e24\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$cd01a7e080046ec380d40bb318bc121fb77759e4\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

31.27. Executing ICE40_BRAMINIT pass.

31.28. Executing OPT pass (performing simple optimizations).

31.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~61 debug messages>

31.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

31.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 388 unused wires.
<suppressed ~2 debug messages>

31.28.5. Finished fast OPT passes.

31.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

31.30. Executing OPT pass (performing simple optimizations).

31.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

31.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1584\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [1] $auto$rtlil.cc:1906:Mux$1493 [2] $auto$rtlil.cc:1906:Mux$1493 [3] $auto$rtlil.cc:1906:Mux$1493 [4] $auto$rtlil.cc:1906:Mux$1493 [5] $auto$rtlil.cc:1906:Mux$1493 [6] $auto$rtlil.cc:1906:Mux$1493 [7] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [9] $auto$rtlil.cc:1906:Mux$1493 [10] $auto$rtlil.cc:1906:Mux$1493 [11] $auto$rtlil.cc:1906:Mux$1493 [12] $auto$rtlil.cc:1906:Mux$1493 [13] $auto$rtlil.cc:1906:Mux$1493 [14] $auto$rtlil.cc:1906:Mux$1493 [15] }
    New input vector for $reduce_or cell $techmap$techmap1583\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [1] $auto$rtlil.cc:1906:Mux$1558 [2] $auto$rtlil.cc:1906:Mux$1558 [3] $auto$rtlil.cc:1906:Mux$1558 [4] $auto$rtlil.cc:1906:Mux$1558 [5] $auto$rtlil.cc:1906:Mux$1558 [6] $auto$rtlil.cc:1906:Mux$1558 [7] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [9] $auto$rtlil.cc:1906:Mux$1558 [10] $auto$rtlil.cc:1906:Mux$1558 [11] $auto$rtlil.cc:1906:Mux$1558 [12] $auto$rtlil.cc:1906:Mux$1558 [13] $auto$rtlil.cc:1906:Mux$1558 [14] $auto$rtlil.cc:1906:Mux$1558 [15] }
    New input vector for $reduce_or cell $techmap$techmap1582\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [1] $auto$rtlil.cc:1906:Mux$1415 [2] $auto$rtlil.cc:1906:Mux$1415 [3] $auto$rtlil.cc:1906:Mux$1415 [4] $auto$rtlil.cc:1906:Mux$1415 [5] $auto$rtlil.cc:1906:Mux$1415 [6] $auto$rtlil.cc:1906:Mux$1415 [7] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [9] $auto$rtlil.cc:1906:Mux$1415 [10] $auto$rtlil.cc:1906:Mux$1415 [11] $auto$rtlil.cc:1906:Mux$1415 [12] $auto$rtlil.cc:1906:Mux$1415 [13] $auto$rtlil.cc:1906:Mux$1415 [14] $auto$rtlil.cc:1906:Mux$1415 [15] }
    New input vector for $reduce_or cell $techmap$techmap1581\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [1] $auto$rtlil.cc:1906:Mux$1428 [2] $auto$rtlil.cc:1906:Mux$1428 [3] $auto$rtlil.cc:1906:Mux$1428 [4] $auto$rtlil.cc:1906:Mux$1428 [5] $auto$rtlil.cc:1906:Mux$1428 [6] $auto$rtlil.cc:1906:Mux$1428 [7] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [9] $auto$rtlil.cc:1906:Mux$1428 [10] $auto$rtlil.cc:1906:Mux$1428 [11] $auto$rtlil.cc:1906:Mux$1428 [12] $auto$rtlil.cc:1906:Mux$1428 [13] $auto$rtlil.cc:1906:Mux$1428 [14] $auto$rtlil.cc:1906:Mux$1428 [15] }
    New input vector for $reduce_or cell $techmap$techmap1580\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1579: { $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [1] $auto$rtlil.cc:1906:Mux$1480 [2] $auto$rtlil.cc:1906:Mux$1480 [3] $auto$rtlil.cc:1906:Mux$1480 [4] $auto$rtlil.cc:1906:Mux$1480 [5] $auto$rtlil.cc:1906:Mux$1480 [6] $auto$rtlil.cc:1906:Mux$1480 [7] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [9] $auto$rtlil.cc:1906:Mux$1480 [10] $auto$rtlil.cc:1906:Mux$1480 [11] $auto$rtlil.cc:1906:Mux$1480 [12] $auto$rtlil.cc:1906:Mux$1480 [13] $auto$rtlil.cc:1906:Mux$1480 [14] $auto$rtlil.cc:1906:Mux$1480 [15] }
    New input vector for $reduce_or cell $techmap$techmap1577\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [1] $auto$rtlil.cc:1906:Mux$1532 [2] $auto$rtlil.cc:1906:Mux$1532 [3] $auto$rtlil.cc:1906:Mux$1532 [4] $auto$rtlil.cc:1906:Mux$1532 [5] $auto$rtlil.cc:1906:Mux$1532 [6] $auto$rtlil.cc:1906:Mux$1532 [7] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [9] $auto$rtlil.cc:1906:Mux$1532 [10] $auto$rtlil.cc:1906:Mux$1532 [11] $auto$rtlil.cc:1906:Mux$1532 [12] $auto$rtlil.cc:1906:Mux$1532 [13] $auto$rtlil.cc:1906:Mux$1532 [14] $auto$rtlil.cc:1906:Mux$1532 [15] }
    New input vector for $reduce_or cell $techmap$techmap1576\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [1] $auto$rtlil.cc:1906:Mux$1506 [2] $auto$rtlil.cc:1906:Mux$1506 [3] $auto$rtlil.cc:1906:Mux$1506 [4] $auto$rtlil.cc:1906:Mux$1506 [5] $auto$rtlil.cc:1906:Mux$1506 [6] $auto$rtlil.cc:1906:Mux$1506 [7] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [9] $auto$rtlil.cc:1906:Mux$1506 [10] $auto$rtlil.cc:1906:Mux$1506 [11] $auto$rtlil.cc:1906:Mux$1506 [12] $auto$rtlil.cc:1906:Mux$1506 [13] $auto$rtlil.cc:1906:Mux$1506 [14] $auto$rtlil.cc:1906:Mux$1506 [15] }
    New input vector for $reduce_or cell $techmap$techmap1575\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [1] $auto$rtlil.cc:1906:Mux$1441 [2] $auto$rtlil.cc:1906:Mux$1441 [3] $auto$rtlil.cc:1906:Mux$1441 [4] $auto$rtlil.cc:1906:Mux$1441 [5] $auto$rtlil.cc:1906:Mux$1441 [6] $auto$rtlil.cc:1906:Mux$1441 [7] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [9] $auto$rtlil.cc:1906:Mux$1441 [10] $auto$rtlil.cc:1906:Mux$1441 [11] $auto$rtlil.cc:1906:Mux$1441 [12] $auto$rtlil.cc:1906:Mux$1441 [13] $auto$rtlil.cc:1906:Mux$1441 [14] $auto$rtlil.cc:1906:Mux$1441 [15] }
    New input vector for $reduce_or cell $techmap$techmap1574\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [1] $auto$rtlil.cc:1906:Mux$1545 [2] $auto$rtlil.cc:1906:Mux$1545 [3] $auto$rtlil.cc:1906:Mux$1545 [4] $auto$rtlil.cc:1906:Mux$1545 [5] $auto$rtlil.cc:1906:Mux$1545 [6] $auto$rtlil.cc:1906:Mux$1545 [7] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [9] $auto$rtlil.cc:1906:Mux$1545 [10] $auto$rtlil.cc:1906:Mux$1545 [11] $auto$rtlil.cc:1906:Mux$1545 [12] $auto$rtlil.cc:1906:Mux$1545 [13] $auto$rtlil.cc:1906:Mux$1545 [14] $auto$rtlil.cc:1906:Mux$1545 [15] }
    New input vector for $reduce_or cell $techmap$techmap1573\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [1] $auto$rtlil.cc:1906:Mux$1454 [2] $auto$rtlil.cc:1906:Mux$1454 [3] $auto$rtlil.cc:1906:Mux$1454 [4] $auto$rtlil.cc:1906:Mux$1454 [5] $auto$rtlil.cc:1906:Mux$1454 [6] $auto$rtlil.cc:1906:Mux$1454 [7] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [9] $auto$rtlil.cc:1906:Mux$1454 [10] $auto$rtlil.cc:1906:Mux$1454 [11] $auto$rtlil.cc:1906:Mux$1454 [12] $auto$rtlil.cc:1906:Mux$1454 [13] $auto$rtlil.cc:1906:Mux$1454 [14] $auto$rtlil.cc:1906:Mux$1454 [15] }
    New input vector for $reduce_or cell $techmap$techmap1572\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1571: { $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [1] $auto$rtlil.cc:1906:Mux$1389 [2] $auto$rtlil.cc:1906:Mux$1389 [3] $auto$rtlil.cc:1906:Mux$1389 [4] $auto$rtlil.cc:1906:Mux$1389 [5] $auto$rtlil.cc:1906:Mux$1389 [6] $auto$rtlil.cc:1906:Mux$1389 [7] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [9] $auto$rtlil.cc:1906:Mux$1389 [10] $auto$rtlil.cc:1906:Mux$1389 [11] $auto$rtlil.cc:1906:Mux$1389 [12] $auto$rtlil.cc:1906:Mux$1389 [13] $auto$rtlil.cc:1906:Mux$1389 [14] $auto$rtlil.cc:1906:Mux$1389 [15] }
    New input vector for $reduce_or cell $techmap$techmap1569\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [1] $auto$rtlil.cc:1906:Mux$1402 [2] $auto$rtlil.cc:1906:Mux$1402 [3] $auto$rtlil.cc:1906:Mux$1402 [4] $auto$rtlil.cc:1906:Mux$1402 [5] $auto$rtlil.cc:1906:Mux$1402 [6] $auto$rtlil.cc:1906:Mux$1402 [7] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [9] $auto$rtlil.cc:1906:Mux$1402 [10] $auto$rtlil.cc:1906:Mux$1402 [11] $auto$rtlil.cc:1906:Mux$1402 [12] $auto$rtlil.cc:1906:Mux$1402 [13] $auto$rtlil.cc:1906:Mux$1402 [14] $auto$rtlil.cc:1906:Mux$1402 [15] }
    New input vector for $reduce_or cell $techmap$techmap1568\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [1] $auto$rtlil.cc:1906:Mux$1467 [2] $auto$rtlil.cc:1906:Mux$1467 [3] $auto$rtlil.cc:1906:Mux$1467 [4] $auto$rtlil.cc:1906:Mux$1467 [5] $auto$rtlil.cc:1906:Mux$1467 [6] $auto$rtlil.cc:1906:Mux$1467 [7] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [9] $auto$rtlil.cc:1906:Mux$1467 [10] $auto$rtlil.cc:1906:Mux$1467 [11] $auto$rtlil.cc:1906:Mux$1467 [12] $auto$rtlil.cc:1906:Mux$1467 [13] $auto$rtlil.cc:1906:Mux$1467 [14] $auto$rtlil.cc:1906:Mux$1467 [15] }
    New input vector for $reduce_or cell $techmap$techmap1567\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [1] $auto$rtlil.cc:1906:Mux$1519 [2] $auto$rtlil.cc:1906:Mux$1519 [3] $auto$rtlil.cc:1906:Mux$1519 [4] $auto$rtlil.cc:1906:Mux$1519 [5] $auto$rtlil.cc:1906:Mux$1519 [6] $auto$rtlil.cc:1906:Mux$1519 [7] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [9] $auto$rtlil.cc:1906:Mux$1519 [10] $auto$rtlil.cc:1906:Mux$1519 [11] $auto$rtlil.cc:1906:Mux$1519 [12] $auto$rtlil.cc:1906:Mux$1519 [13] $auto$rtlil.cc:1906:Mux$1519 [14] $auto$rtlil.cc:1906:Mux$1519 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1388:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1389
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1389 [15:9] $auto$rtlil.cc:1906:Mux$1389 [7:1] } = { $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [8] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1401:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1402
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1402 [15:9] $auto$rtlil.cc:1906:Mux$1402 [7:1] } = { $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1414:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1415
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1415 [15:9] $auto$rtlil.cc:1906:Mux$1415 [7:1] } = { $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1427:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1428
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1428 [15:9] $auto$rtlil.cc:1906:Mux$1428 [7:1] } = { $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1440:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1441
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1441 [15:9] $auto$rtlil.cc:1906:Mux$1441 [7:1] } = { $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1453:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1454
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1454 [15:9] $auto$rtlil.cc:1906:Mux$1454 [7:1] } = { $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1466:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1467
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1467 [15:9] $auto$rtlil.cc:1906:Mux$1467 [7:1] } = { $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1479:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1480
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1480 [15:9] $auto$rtlil.cc:1906:Mux$1480 [7:1] } = { $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1492:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1493
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1493 [15:9] $auto$rtlil.cc:1906:Mux$1493 [7:1] } = { $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1505:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1506
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1506 [15:9] $auto$rtlil.cc:1906:Mux$1506 [7:1] } = { $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1518:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1519
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1519 [15:9] $auto$rtlil.cc:1906:Mux$1519 [7:1] } = { $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1531:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1532
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1532 [15:9] $auto$rtlil.cc:1906:Mux$1532 [7:1] } = { $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1544:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1545
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1545 [15:9] $auto$rtlil.cc:1906:Mux$1545 [7:1] } = { $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1557:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1558
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1558 [15:9] $auto$rtlil.cc:1906:Mux$1558 [7:1] } = { $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] }
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$979:
      Old ports: A=2'11, B=2'00, Y=$techmap\rx_from_ble.$procmux$979_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$979_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$979_Y [1] = $techmap\rx_from_ble.$procmux$979_Y [0]
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$987:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1231 [0] }, Y=$techmap\rx_from_ble.$procmux$987_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1231 [0], Y=$techmap\rx_from_ble.$procmux$987_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$987_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$992:
      Old ports: A=2'10, B=2'00, Y=$techmap\rx_from_ble.$procmux$992_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$992_Y [1]
      New connections: $techmap\rx_from_ble.$procmux$992_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1032:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1032_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1032_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1032_Y [1] = $techmap\tx_to_ble.$procmux$1032_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1040:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_ble.$procmux$1037_Y [0] }, Y=$techmap\tx_to_ble.$procmux$1040_Y
      New ports: A=1'0, B=$techmap\tx_to_ble.$procmux$1037_Y [0], Y=$techmap\tx_to_ble.$procmux$1040_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1040_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1032:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1032_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1032_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1032_Y [1] = $techmap\tx_to_pc.$procmux$1032_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1040:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_pc.$procmux$1037_Y [0] }, Y=$techmap\tx_to_pc.$procmux$1040_Y
      New ports: A=1'0, B=$techmap\tx_to_pc.$procmux$1037_Y [0], Y=$techmap\tx_to_pc.$procmux$1040_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1040_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1584\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [8] }
    New input vector for $reduce_or cell $techmap$techmap1583\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [8] }
    New input vector for $reduce_or cell $techmap$techmap1582\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [8] }
    New input vector for $reduce_or cell $techmap$techmap1581\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [8] }
    New input vector for $reduce_or cell $techmap$techmap1580\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1579: { $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [8] }
    New input vector for $reduce_or cell $techmap$techmap1577\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [8] }
    New input vector for $reduce_or cell $techmap$techmap1576\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [8] }
    New input vector for $reduce_or cell $techmap$techmap1575\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [8] }
    New input vector for $reduce_or cell $techmap$techmap1574\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [8] }
    New input vector for $reduce_or cell $techmap$techmap1573\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [8] }
    New input vector for $reduce_or cell $techmap$techmap1572\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1571: { $auto$rtlil.cc:1906:Mux$1389 [0] $auto$rtlil.cc:1906:Mux$1389 [8] }
    New input vector for $reduce_or cell $techmap$techmap1569\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [8] }
    New input vector for $reduce_or cell $techmap$techmap1568\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [8] }
    New input vector for $reduce_or cell $techmap$techmap1567\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1566: { $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [8] }
  Optimizing cells in module \service.
Performed a total of 49 changes.

31.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

31.30.9. Rerunning OPT passes. (Maybe there is more to do..)

31.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

31.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

31.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.16. Finished OPT passes. (There is nothing left to do.)

31.31. Executing TECHMAP pass (map to technology primitives).

31.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

31.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~1609 debug messages>

31.32. Executing ICE40_OPT pass (performing simple optimizations).

31.32.1. Running ICE40 specific optimizations.

31.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~700 debug messages>

31.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~270 debug messages>
Removed a total of 90 cells.

31.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 218 unused cells and 960 unused wires.
<suppressed ~223 debug messages>

31.32.6. Rerunning OPT passes. (Removed registers in this run.)

31.32.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1289.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1294.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1312.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1317.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$1317.BB [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1325.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1328.slice[0].carry: CO=\rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1331.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1337.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1343.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1349.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1352.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1358.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1367.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1370.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1325.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1328.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1331.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1337.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1343.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1349.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1352.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1358.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1367.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1370.slice[1].adder back to logic.

31.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~142 debug messages>

31.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

31.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

31.32.12. Rerunning OPT passes. (Removed registers in this run.)

31.32.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[1].carry: CO=\my_adr [1]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1322.slice[2].adder back to logic.

31.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~13 debug messages>

31.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

31.32.18. Rerunning OPT passes. (Removed registers in this run.)

31.32.19. Running ICE40 specific optimizations.

31.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.24. Finished OPT passes. (There is nothing left to do.)

31.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

31.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2002 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2003 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2004 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2005 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2006 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2008 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2009 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2010 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2011 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2012 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2013 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2014 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2015 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2016 to $_DFFE_PP_ for $0\my_adr[31:0] [0] -> \my_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2017 to $_DFFE_PP_ for $0\my_adr[31:0] [1] -> \my_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2018 to $_DFFE_PP_ for $0\my_adr[31:0] [2] -> \my_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2019 to $_DFFE_PP_ for $0\my_adr[31:0] [3] -> \my_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2020 to $_DFFE_PP_ for $0\my_adr[31:0] [4] -> \my_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2021 to $_DFFE_PP_ for $0\my_adr[31:0] [5] -> \my_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2022 to $_DFFE_PP_ for $0\my_adr[31:0] [6] -> \my_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2023 to $_DFFE_PP_ for $0\my_adr[31:0] [7] -> \my_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2024 to $_DFFE_PP_ for $0\my_adr[31:0] [8] -> \my_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2025 to $_DFFE_PP_ for $0\my_adr[31:0] [9] -> \my_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2026 to $_DFFE_PP_ for $0\my_adr[31:0] [10] -> \my_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2027 to $_DFFE_PP_ for $0\my_adr[31:0] [11] -> \my_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2028 to $_DFFE_PP_ for $0\my_adr[31:0] [12] -> \my_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2029 to $_DFFE_PP_ for $0\my_adr[31:0] [13] -> \my_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2030 to $_DFFE_PP_ for $0\my_adr[31:0] [14] -> \my_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2031 to $_DFFE_PP_ for $0\my_adr[31:0] [15] -> \my_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2032 to $_DFFE_PP_ for $0\my_adr[31:0] [16] -> \my_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2033 to $_DFFE_PP_ for $0\my_adr[31:0] [17] -> \my_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2034 to $_DFFE_PP_ for $0\my_adr[31:0] [18] -> \my_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2035 to $_DFFE_PP_ for $0\my_adr[31:0] [19] -> \my_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2036 to $_DFFE_PP_ for $0\my_adr[31:0] [20] -> \my_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2037 to $_DFFE_PP_ for $0\my_adr[31:0] [21] -> \my_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2038 to $_DFFE_PP_ for $0\my_adr[31:0] [22] -> \my_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2039 to $_DFFE_PP_ for $0\my_adr[31:0] [23] -> \my_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2040 to $_DFFE_PP_ for $0\my_adr[31:0] [24] -> \my_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2041 to $_DFFE_PP_ for $0\my_adr[31:0] [25] -> \my_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2042 to $_DFFE_PP_ for $0\my_adr[31:0] [26] -> \my_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2043 to $_DFFE_PP_ for $0\my_adr[31:0] [27] -> \my_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2044 to $_DFFE_PP_ for $0\my_adr[31:0] [28] -> \my_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2045 to $_DFFE_PP_ for $0\my_adr[31:0] [29] -> \my_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2046 to $_DFFE_PP_ for $0\my_adr[31:0] [30] -> \my_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2047 to $_DFFE_PP_ for $0\my_adr[31:0] [31] -> \my_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2062 to $_DFFE_PP_ for $0\dat[31:0] [8] -> \dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2063 to $_DFFE_PP_ for $0\dat[31:0] [9] -> \dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2064 to $_DFFE_PP_ for $0\dat[31:0] [10] -> \dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $0\dat[31:0] [11] -> \dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $0\dat[31:0] [12] -> \dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $0\dat[31:0] [13] -> \dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $0\dat[31:0] [14] -> \dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $0\dat[31:0] [15] -> \dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $0\dat[31:0] [16] -> \dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $0\dat[31:0] [17] -> \dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $0\dat[31:0] [18] -> \dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $0\dat[31:0] [19] -> \dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $0\dat[31:0] [20] -> \dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $0\dat[31:0] [21] -> \dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $0\dat[31:0] [22] -> \dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $0\dat[31:0] [23] -> \dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $0\dat[31:0] [24] -> \dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $0\dat[31:0] [25] -> \dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $0\dat[31:0] [26] -> \dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $0\dat[31:0] [27] -> \dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $0\dat[31:0] [28] -> \dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $0\dat[31:0] [29] -> \dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $0\dat[31:0] [30] -> \dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2085 to $_DFFE_PP_ for $0\dat[31:0] [31] -> \dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2203 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$929.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2204 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$907.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2205 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$886.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2206 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$866.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2207 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$847.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2208 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$829.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2209 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$812.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2210 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$796.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.rx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2211 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$958.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [0] -> \rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2212 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$958.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [1] -> \rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2213 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$958.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [2] -> \rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2214 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [0] -> \rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2215 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [1] -> \rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2216 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [2] -> \rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2217 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [3] -> \rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2218 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [4] -> \rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2219 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [5] -> \rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2220 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$964.$ternary$/usr/bin/../share/yosys/techmap.v:445$2265_Y [6] -> \rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2223 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1004.$ternary$/usr/bin/../share/yosys/techmap.v:445$2225_Y -> \rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2371 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2372 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2373 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2374 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2375 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2376 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2377 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2378 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2381 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2382 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2383 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2385 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2562 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2563 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2564 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2565 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2566 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2567 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2568 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2569 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2444_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2570 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2571 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2572 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1014.$ternary$/usr/bin/../share/yosys/techmap.v:445$2284_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2574 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2664 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2665 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2666 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2667 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2668 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2669 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2670 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2671 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2672 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2673 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2674 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2675 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2676 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2677 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2678 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2679 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2680 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2681 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2682 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2683 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2684 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2685 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2686 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2687 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2688 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2689 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2690 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2691 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2692 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2693 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2694 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2695 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2697 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2867 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2986 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3022 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3070 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3071 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3072 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3073 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3074 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3075 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3076 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3077 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3078 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3079 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3080 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3081 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3228 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3229 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3230 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3231 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3232 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3233 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3234 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3235 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3236 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3237 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3238 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3239 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3240 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3241 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3242 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3243 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3244 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3245 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3246 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3247 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3248 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3249 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3250 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3251 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3252 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3253 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3254 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3255 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3256 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3257 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3258 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3259 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3308 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3384 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3388 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3389 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3390 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3491 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3492 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3493 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3494 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3495 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3496 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3499 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3500 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3501 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3502 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3503 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3504 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3505 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3506 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3507 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3508 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3509 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3510 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3511 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3512 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3513 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3514 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3515 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3516 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3517 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3518 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3519 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3520 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3632 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3633 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3634 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3635 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3636 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3637 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3638 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3639 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3640 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3731 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3732 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3733 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3734 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3735 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3736 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3737 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3738 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3739 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3740 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3741 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3742 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3743 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3744 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3745 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3746 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3747 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3748 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3749 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3750 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3751 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3752 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3753 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3754 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3755 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3756 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3757 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3758 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3759 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3760 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3761 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3762 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3948 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3949 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3950 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3951 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3952 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3953 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3954 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3955 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3956 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3957 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3958 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3959 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3960 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3961 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3962 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3963 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3964 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3965 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3966 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3967 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3968 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3969 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3970 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3971 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3972 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3973 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3974 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3975 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3976 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3977 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3978 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3979 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4042 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.

31.35. Executing TECHMAP pass (map to technology primitives).

31.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

31.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~446 debug messages>

31.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~570 debug messages>

31.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2023 (SB_DFFE): \my_adr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2017 (SB_DFFE): \my_adr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2018 (SB_DFFE): \my_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFFE): \my_adr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2016 (SB_DFFE): \my_adr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFFE): \rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2021 (SB_DFFE): \my_adr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2030 (SB_DFFE): \my_adr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2039 (SB_DFFE): \my_adr [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2031 (SB_DFFE): \my_adr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2032 (SB_DFFE): \my_adr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2033 (SB_DFFE): \my_adr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2040 (SB_DFFE): \my_adr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2041 (SB_DFFE): \my_adr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2042 (SB_DFFE): \my_adr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2043 (SB_DFFE): \my_adr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2044 (SB_DFFE): \my_adr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2045 (SB_DFFE): \my_adr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2046 (SB_DFFE): \my_adr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE): \my_adr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2024 (SB_DFFE): \my_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2022 (SB_DFFE): \my_adr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFF): \rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE): \rx_from_ble.rx_byte [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2026 (SB_DFFE): \my_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFF): \recieve = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFF): \add = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE): \rx_from_ble.rx_byte [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFF): \rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE): \rx_from_ble.rx_byte [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE): \rx_from_ble.rx_byte [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE): \rx_from_ble.rx_byte [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE): \rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE): \rx_from_ble.rx_byte [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE): \rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE): \rx_from_ble.rx_byte [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE): \rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE): \rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE): \rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE): \rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE): \rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE): \rx_from_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE): \rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFFE): \rx_from_ble.rx_byte [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFF): \rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFF): \rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE): \rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2377 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2378 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2382 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2387 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2383 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2385 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2381 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2386 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2388 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2389 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2390 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2391 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2392 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2375 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2384 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2393 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2034 (SB_DFFE): \my_adr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2572 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2035 (SB_DFFE): \my_adr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2580 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2376 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2036 (SB_DFFE): \my_adr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2582 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2038 (SB_DFFE): \my_adr [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2037 (SB_DFFE): \my_adr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2029 (SB_DFFE): \my_adr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2027 (SB_DFFE): \my_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2028 (SB_DFFE): \my_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2025 (SB_DFFE): \my_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2020 (SB_DFFE): \my_adr [4] = 0

31.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$2124 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:52$87_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1963 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [7], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2023 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1957 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [1], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2017 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1958 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$1317.BB [2], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2018 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1959 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [3], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1956 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [0], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3642 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$191_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1961 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [5], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2021 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3401 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$634_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1970 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [14], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2030 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1971 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [15], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2031 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1972 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [16], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2032 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1973 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [17], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2033 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2730 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2665 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2987 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2979 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2801 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2704 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1980 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [24], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2040 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1981 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [25], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2041 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1982 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [26], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2042 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1983 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [27], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2043 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1984 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [28], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2044 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1985 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [29], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2045 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1986 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [30], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2046 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1987 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [31], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1910 (A=\wb_mem_cyc, B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1912 (A=\wb_mem_sel [1], B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1915 (A=\wb_mem_we, B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1913 (A=\wb_mem_sel [2], B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1911 (A=\wb_mem_sel [0], B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1964 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [8], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2024 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1962 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [6], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2022 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1966 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [10], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2026 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1914 (A=\wb_mem_sel [3], B=1'1, S=\recieve) into $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4964 (A=1'0, B=$techmap$techmap\rx_from_ble.$procmux$981.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2246_Y, S=$auto$simplemap.cc:127:simplemap_reduce$4871) into $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2495 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2493 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2385 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2494 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2386 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2496 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2388 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2497 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2389 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2498 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2390 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4270 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1034.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2246_Y, S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2392 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2492 (A=1'0, B=$techmap\tx_to_ble.$procmux$1018_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1216) into $auto$simplemap.cc:420:simplemap_dff$2384 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1974 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [18], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2034 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2625 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2574 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2629 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2578 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2626 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2627 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2628 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2630 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2579 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1975 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [19], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2035 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4371 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1034.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2246_Y, S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2581 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2624 (A=1'0, B=$techmap\tx_to_pc.$procmux$1018_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1218) into $auto$simplemap.cc:420:simplemap_dff$2573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2731 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2666 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1976 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [20], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2036 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2732 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2667 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2733 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2668 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2734 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2669 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2736 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2671 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2737 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2672 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2738 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2673 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2739 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2674 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2740 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2675 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2741 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2676 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2742 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2677 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2743 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2678 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2744 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2679 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2745 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2680 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2746 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2681 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2747 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2682 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2749 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2684 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2750 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2685 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2751 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2686 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2752 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2687 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2753 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2688 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2754 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2689 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2735 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2670 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2756 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2691 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2757 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2692 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2758 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2693 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2759 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2694 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2760 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2695 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2793 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2794 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$5829 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2697 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2795 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2698 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2796 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2699 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2797 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2700 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2798 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2799 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2702 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2800 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2802 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2729 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2664 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2803 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2706 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2804 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2707 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2805 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2708 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2806 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2807 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2710 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2808 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2711 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2809 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2712 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2810 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2713 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2748 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2683 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2812 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2715 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2813 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2716 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2814 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2815 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2718 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2816 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2719 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2817 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2720 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2818 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2721 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2755 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2690 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2820 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2723 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2821 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2724 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2822 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2725 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2823 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2726 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2824 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2727 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2811 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2714 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2990 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2982 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1977 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [21], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2988 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2980 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2997 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2976 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3000 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$2985 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2991 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2983 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2989 (A=$techmap\servant.cpu.rf_ram_if.$procmux$739_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2981 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2998 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2978 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2875 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$120_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2874 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2819 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$112_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2722 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1969 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [13], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2029 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3402 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3380 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3403 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3381 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3404 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3382 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3399 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3386 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$1967 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [11], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2027 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3397 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$628_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3383 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3400 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3800 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3733 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3398 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$629_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3385 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3393 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$624_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3388 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3391 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$625_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3389 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3819 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3752 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3405 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$644_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3390 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3820 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3753 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3821 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3822 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3755 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1968 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [12], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2028 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3824 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3757 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3825 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3758 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3826 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3759 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3827 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3760 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3828 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3761 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3829 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3762 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1965 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [9], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2025 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3396 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$627_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3376 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3646 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3799 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3732 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$1960 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:178$37_Y [4], S=\add) into $auto$simplemap.cc:420:simplemap_dff$2020 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3801 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3734 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3802 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3735 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3804 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3817 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3750 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3805 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3806 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3807 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3808 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3809 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3810 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3811 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3812 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3813 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3814 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3815 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3748 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3803 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3736 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3818 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3823 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3756 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3816 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3749 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3798 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3731 (SB_DFFE).

31.40. Executing ICE40_OPT pass (performing simple optimizations).

31.40.1. Running ICE40 specific optimizations.

31.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~201 debug messages>

31.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~984 debug messages>
Removed a total of 328 cells.

31.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 174 unused cells and 2550 unused wires.
<suppressed ~176 debug messages>

31.40.6. Rerunning OPT passes. (Removed registers in this run.)

31.40.7. Running ICE40 specific optimizations.

31.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.40.12. Finished OPT passes. (There is nothing left to do.)

31.41. Executing TECHMAP pass (map to technology primitives).

31.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.41.2. Continuing TECHMAP pass.
No more expansions possible.

31.42. Executing ABC pass (technology mapping using ABC).

31.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
Extracted 1749 gates and 2416 wires to a netlist network with 665 inputs and 409 outputs.

31.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     715.
ABC: Participating nodes from both networks       =    1543.
ABC: Participating nodes from the first network   =     718. (  83.29 % of nodes)
ABC: Participating nodes from the second network  =     825. (  95.71 % of nodes)
ABC: Node pairs (any polarity)                    =     718. (  83.29 % of names can be moved)
ABC: Node pairs (same polarity)                   =     586. (  67.98 % of names can be moved)
ABC: Total runtime =     0.05 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

31.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1720
ABC RESULTS:        internal signals:     1342
ABC RESULTS:           input signals:      665
ABC RESULTS:          output signals:      409
Removing temp directory.
Removed 0 unused cells and 1537 unused wires.

31.43. Executing TECHMAP pass (map to technology primitives).

31.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
No more expansions possible.
<suppressed ~2178 debug messages>
Removed 0 unused cells and 1716 unused wires.

31.44. Executing HIERARCHY pass (managing design hierarchy).

31.44.1. Analyzing design hierarchy..
Top module:  \service

31.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

31.45. Printing statistics.

=== service ===

   Number of wires:               1540
   Number of wire bits:           4325
   Number of public wires:         467
   Number of public wire bits:    2930
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1591
     SB_CARRY                      170
     SB_DFF                         73
     SB_DFFE                       200
     SB_DFFESR                     102
     SB_DFFSR                       64
     SB_DFFSS                        7
     SB_LUT4                       959
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

31.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32. Executing JSON backend.

Warnings: 16 unique messages, 61 total
End of script. Logfile hash: c38897c3c1
CPU: user 2.33s system 0.02s, MEM: 83.68 MB total, 65.54 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 23% 24x opt_clean (0 sec), 16% 24x opt_expr (0 sec), ...
