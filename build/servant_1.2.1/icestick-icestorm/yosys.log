
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant.v
Parsing Verilog input from `src/servant_1.2.1/service/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/service/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/service/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/service/service.v
Parsing Verilog input from `src/servant_1.2.1/service/service.v' to AST representation.
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

28. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile
Generating RTLIL representation for module `$paramod$f1f69d35145dc335c26e91ab6cce31100837bffd\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

31. Executing SYNTH_ICE40 pass.

31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

31.2. Executing HIERARCHY pass (managing design hierarchy).

31.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:151.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:165.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:171.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:176.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:177.

31.3.1. Analyzing design hierarchy..
Top module:  \service

31.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.
src/servant_1.2.1/service/uart_tx.v:108: Warning: Identifier `\done' is implicitly declared.

31.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile
Generating RTLIL representation for module `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram'.
Preloading $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram from /home/paul/Bachelor_Project/fusesoc_libraries/serv/sw/simple_BLE.hex

31.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
Parameter \memfile
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant'.

31.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

31.3.6. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

31.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

31.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/service/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

31.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

31.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

31.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

31.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

31.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

31.3.14. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

31.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

31.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

31.3.18. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

31.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

31.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

31.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

31.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

31.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

31.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

31.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

31.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

31.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

31.3.29. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.30. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:         \uart_rx
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 27 unused modules.

31.4. Executing PROC pass (convert processes to netlists).

31.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$652'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$358'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$358'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:74$96'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:74$96'.
Cleaned up 7 empty switches.

31.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$119 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$99 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$99 in module uart_rx.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:55$57 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:48$53 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$25 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$25 in module uart_tx.
Removed a total of 2 dead cases.

31.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$117'.
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$116'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$115'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$114'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$113'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$112'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$111'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$110'.
  Set init value: \r_Rx_temp = 1'1
Found init rule in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$95'.
  Set init value: \recieve = 1'0
Found init rule in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$94'.
  Set init value: \my_adr = 187
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
  Set init value: \o_wb_rdt = 1'1
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:136$23'.
  Set init value: \my_adr = 3072

31.4.4. Executing PROC_ARST pass (detect async resets in processes).

31.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$652'.
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\ibus_cyc[0:0]
     6/7: $0\init_done[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$380'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$334'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$275'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
     5/10: $0\timer_irq_r[0:0]
     6/10: $0\mie_mtie[0:0]
     7/10: $0\mstatus_mie[0:0]
     8/10: $0\mcause31[0:0]
     9/10: $0\o_new_irq[0:0]
    10/10: $0\mstatus_mpie[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$173'.
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$172'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$165'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$152'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN[1:0]$149
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_DATA[1:0]$150
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_ADDR[9:0]$148
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$142'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$127'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$123'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$118'.
     1/1: $0\o_wb_dat[31:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$117'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$116'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$115'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$114'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$113'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$112'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$111'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$110'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
    10/13: $0\data_index[2:0]
    11/13: $0\state[1:0]
    12/13: $0\temp_done[0:0]
    13/13: $0\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$98'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$95'.
     1/1: $1\recieve[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$94'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
     1/26: $0\o_wb_rdt[31:0]
     2/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60
     3/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_DATA[31:0]$59
     4/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_ADDR[10:0]$58
     5/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63
     6/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_DATA[31:0]$62
     7/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_ADDR[10:0]$61
     8/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66
     9/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_DATA[31:0]$65
    10/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_ADDR[10:0]$64
    11/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69
    12/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_DATA[31:0]$68
    13/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_ADDR[10:0]$67
    14/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72
    15/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_DATA[31:0]$71
    16/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_ADDR[10:0]$70
    17/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75
    18/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_DATA[31:0]$74
    19/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_ADDR[10:0]$73
    20/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78
    21/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_DATA[31:0]$77
    22/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_ADDR[10:0]$76
    23/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81
    24/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_DATA[31:0]$80
    25/26: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_ADDR[10:0]$79
    26/26: $0\my_adr[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$53'.
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$52'.
     1/1: $0\recieve[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
     1/1: $1\o_wb_rdt[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
     1/6: $0\data_index[2:0]
     2/6: $0\state[1:0]
     3/6: $0\temp_data[7:0]
     4/6: $0\temp_done[0:0]
     5/6: $0\clock_count[6:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:146$24'.
     1/1: $0\recieve[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:136$23'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
     1/5: $0\my_adr[31:0]
     2/5: $0\data_to[7:0]
     3/5: $0\pc_active[0:0]
     4/5: $0\data_to_ble[7:0]
     5/5: $0\tx_active[0:0]

31.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$118'.
No latch inferred for signal `\service.\recieve' from process `\service.$proc$src/servant_1.2.1/service/service.v:146$24'.

31.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$652'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$380'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$334'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$334'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$275'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$173'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$172'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$165'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$165'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$165'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$152'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$142'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$127'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$123'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$123'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$98'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$98'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\my_adr' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
  created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$53'.
  created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\recieve' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$52'.
  created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1293' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
  created $dff cell `$procdff$1294' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1295' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1296' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1297' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1298' with positive edge clock.
Creating register for signal `\service.\my_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
  created $dff cell `$procdff$1299' with positive edge clock.

31.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$652'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$652'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$628'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$566'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$565'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$404'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$390'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$380'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$380'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$349'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$334'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$334'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$275'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$275'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$196'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$173'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$173'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$172'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$169'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$165'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$152'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$147'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$142'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$127'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$127'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$123'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$123'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$119'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$118'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$117'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$116'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$115'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$114'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$113'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$112'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$111'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$110'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$99'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$98'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:43$95'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:33$94'.
Found and cleaned up 9 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$57'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$53'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$53'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:44$52'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$41'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$40'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$39'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$38'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$37'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$36'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$25'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:146$24'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:136$23'.
Found and cleaned up 5 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:148$19'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:148$19'.
Cleaned up 66 empty switches.

31.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram for cells of type $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Using template $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant for cells of type $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Using template uart_tx for cells of type uart_tx.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template uart_rx for cells of type uart_rx.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~25 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module uart_rx.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Deleting now unused module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Deleting now unused module uart_tx.

31.6. Executing TRIBUF pass.

31.7. Executing DEMINOUT pass (demote inout ports to input or output).

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~121 debug messages>

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 32 unused cells and 562 unused wires.
<suppressed ~38 debug messages>

31.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

31.11. Executing OPT pass (performing simple optimizations).

31.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

31.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1182: \pc_active -> 1'0
      Replacing known input bits on port A of cell $procmux$1188: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~118 debug messages>

31.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$153: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$569: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$281: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$500: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    New ctrl vector for $mux cell $procmux$1182: { }
    New ctrl vector for $mux cell $procmux$1188: { }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1005:
      Old ports: A=0, B=65280, Y=$techmap\ram.$procmux$1005_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1005_Y [8]
      New connections: { $techmap\ram.$procmux$1005_Y [31:9] $techmap\ram.$procmux$1005_Y [7:0] } = { 16'0000000000000000 $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] $techmap\ram.$procmux$1005_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1020:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$procmux$1020_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1020_Y [16]
      New connections: { $techmap\ram.$procmux$1020_Y [31:17] $techmap\ram.$procmux$1020_Y [15:0] } = { 8'00000000 $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] $techmap\ram.$procmux$1020_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1035:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$procmux$1035_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1035_Y [24]
      New connections: { $techmap\ram.$procmux$1035_Y [31:25] $techmap\ram.$procmux$1035_Y [23:0] } = { $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] $techmap\ram.$procmux$1035_Y [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1049:
      Old ports: A=0, B=255, Y=$techmap\ram.$procmux$1049_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1049_Y [0]
      New connections: $techmap\ram.$procmux$1049_Y [31:1] = { 24'000000000000000000000000 $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] $techmap\ram.$procmux$1049_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1064:
      Old ports: A=0, B=65280, Y=$techmap\ram.$procmux$1064_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1064_Y [8]
      New connections: { $techmap\ram.$procmux$1064_Y [31:9] $techmap\ram.$procmux$1064_Y [7:0] } = { 16'0000000000000000 $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] $techmap\ram.$procmux$1064_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1079:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$procmux$1079_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1079_Y [16]
      New connections: { $techmap\ram.$procmux$1079_Y [31:17] $techmap\ram.$procmux$1079_Y [15:0] } = { 8'00000000 $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] $techmap\ram.$procmux$1079_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$752:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN[1:0]$149
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN[1:0]$149 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN[1:0]$149 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$146_EN[1:0]$149 [0]
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1094:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$procmux$1094_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$1094_Y [24]
      New connections: { $techmap\ram.$procmux$1094_Y [31:25] $techmap\ram.$procmux$1094_Y [23:0] } = { $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] $techmap\ram.$procmux$1094_Y [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$990:
      Old ports: A=0, B=255, Y=$techmap\ram.$procmux$990_Y
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$procmux$990_Y [0]
      New connections: $techmap\ram.$procmux$990_Y [31:1] = { 24'000000000000000000000000 $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] $techmap\ram.$procmux$990_Y [0] }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1173: { $techmap\tx_to_ble.$procmux$1140_CMP $techmap\tx_to_ble.$procmux$1123_CMP $auto$opt_reduce.cc:132:opt_mux$1301 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1173: { $techmap\tx_to_pc.$procmux$1140_CMP $techmap\tx_to_pc.$procmux$1123_CMP $auto$opt_reduce.cc:132:opt_mux$1303 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1300: { $techmap\tx_to_ble.$procmux$1129_CMP $techmap\tx_to_ble.$procmux$1124_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1302: { $techmap\tx_to_pc.$procmux$1129_CMP $techmap\tx_to_pc.$procmux$1124_CMP }
  Optimizing cells in module \service.
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1007:
      Old ports: A=$techmap\ram.$procmux$1005_Y, B=0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63
      New ports: A=$techmap\ram.$procmux$1005_Y [8], B=1'0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1022:
      Old ports: A=$techmap\ram.$procmux$1020_Y, B=0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66
      New ports: A=$techmap\ram.$procmux$1020_Y [16], B=1'0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1037:
      Old ports: A=$techmap\ram.$procmux$1035_Y, B=0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69
      New ports: A=$techmap\ram.$procmux$1035_Y [24], B=1'0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$45_EN[31:0]$69 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1052:
      Old ports: A=0, B=$techmap\ram.$procmux$1049_Y, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72
      New ports: A=1'0, B=$techmap\ram.$procmux$1049_Y [0], Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1067:
      Old ports: A=0, B=$techmap\ram.$procmux$1064_Y, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75
      New ports: A=1'0, B=$techmap\ram.$procmux$1064_Y [8], Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1082:
      Old ports: A=0, B=$techmap\ram.$procmux$1079_Y, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78
      New ports: A=1'0, B=$techmap\ram.$procmux$1079_Y [16], Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$1097:
      Old ports: A=0, B=$techmap\ram.$procmux$1094_Y, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81
      New ports: A=1'0, B=$techmap\ram.$procmux$1094_Y [24], Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$992:
      Old ports: A=$techmap\ram.$procmux$990_Y, B=0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60
      New ports: A=$techmap\ram.$procmux$990_Y [0], B=1'0, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60 [0] }
  Optimizing cells in module \service.
Performed a total of 27 changes.

31.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

31.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \my_adr = 3072 to constant driver in module service.
Promoting init spec \ram.recieve = 1'0 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \tx_to_pc.temp_done = 1'0 to constant driver in module service.
Promoting init spec \ram.rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoted 5 init specs to constant drivers.

31.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 147 unused wires.
<suppressed ~9 debug messages>

31.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.9. Rerunning OPT passes. (Maybe there is more to do..)

31.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~122 debug messages>

31.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\ram.rx_from_ble.$procmux$975: { $techmap\ram.rx_from_ble.$procmux$942_CMP $techmap\ram.rx_from_ble.$procmux$786_CMP $auto$opt_reduce.cc:132:opt_mux$1305 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1162: { $techmap\tx_to_ble.$procmux$1124_CMP $auto$opt_reduce.cc:132:opt_mux$1307 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1162: { $techmap\tx_to_pc.$procmux$1124_CMP $auto$opt_reduce.cc:132:opt_mux$1309 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1304: { $techmap\ram.rx_from_ble.$procmux$947_CMP $techmap\ram.rx_from_ble.$procmux$779_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1306: { $techmap\tx_to_ble.$procmux$1140_CMP $techmap\tx_to_ble.$procmux$1129_CMP $techmap\tx_to_ble.$procmux$1123_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1308: { $techmap\tx_to_pc.$procmux$1140_CMP $techmap\tx_to_pc.$procmux$1129_CMP $techmap\tx_to_pc.$procmux$1123_CMP }
  Optimizing cells in module \service.
Performed a total of 6 changes.

31.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.16. Rerunning OPT passes. (Maybe there is more to do..)

31.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~122 debug messages>

31.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.23. Finished OPT passes. (There is nothing left to do.)

31.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:79$85 (ram.mem).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:175$21 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:163$20 ($eq).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1286 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1283 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1280 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1277 ($dff).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1274 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1271 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1268 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1265 ($dff).
Removed cell service.$techmap\ram.$procmux$1107 ($mux).
Removed cell service.$techmap\ram.$procmux$1104 ($mux).
Removed cell service.$techmap\ram.$procmux$1102 ($mux).
Removed cell service.$techmap\ram.$procmux$1099 ($mux).
Removed cell service.$techmap\ram.$procmux$1092 ($mux).
Removed cell service.$techmap\ram.$procmux$1089 ($mux).
Removed cell service.$techmap\ram.$procmux$1087 ($mux).
Removed cell service.$techmap\ram.$procmux$1084 ($mux).
Removed cell service.$techmap\ram.$procmux$1077 ($mux).
Removed cell service.$techmap\ram.$procmux$1074 ($mux).
Removed cell service.$techmap\ram.$procmux$1072 ($mux).
Removed cell service.$techmap\ram.$procmux$1069 ($mux).
Removed cell service.$techmap\ram.$procmux$1062 ($mux).
Removed cell service.$techmap\ram.$procmux$1059 ($mux).
Removed cell service.$techmap\ram.$procmux$1057 ($mux).
Removed cell service.$techmap\ram.$procmux$1054 ($mux).
Removed cell service.$techmap\ram.$procmux$1047 ($mux).
Removed cell service.$techmap\ram.$procmux$1045 ($mux).
Removed cell service.$techmap\ram.$procmux$1042 ($mux).
Removed cell service.$techmap\ram.$procmux$1040 ($mux).
Removed cell service.$techmap\ram.$procmux$1032 ($mux).
Removed cell service.$techmap\ram.$procmux$1030 ($mux).
Removed cell service.$techmap\ram.$procmux$1027 ($mux).
Removed cell service.$techmap\ram.$procmux$1025 ($mux).
Removed cell service.$techmap\ram.$procmux$1017 ($mux).
Removed cell service.$techmap\ram.$procmux$1015 ($mux).
Removed cell service.$techmap\ram.$procmux$1012 ($mux).
Removed cell service.$techmap\ram.$procmux$1010 ($mux).
Removed cell service.$techmap\ram.$procmux$1002 ($mux).
Removed cell service.$techmap\ram.$procmux$1000 ($mux).
Removed cell service.$techmap\ram.$procmux$997 ($mux).
Removed cell service.$techmap\ram.$procmux$995 ($mux).
Removed top 30 bits (of 32) from port B of cell service.$techmap\ram.$add$src/servant_1.2.1/service/servant_ram.v:67$83 ($add).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1142 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1140_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1131 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$32 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1142 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1140_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1131 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$32 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$132 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\ram.rx_from_ble.$procmux$963 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\ram.rx_from_ble.$procmux$949 ($mux).
Removed top 2 bits (of 3) from port B of cell service.$techmap\ram.rx_from_ble.$procmux$885_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\ram.rx_from_ble.$procmux$864_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\ram.rx_from_ble.$procmux$844_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\ram.rx_from_ble.$procmux$786_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\ram.rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$108 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\ram.rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:95$106 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\ram.rx_from_ble.$eq$src/servant_1.2.1/service/uart_rx.v:61$101 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1244 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$756 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$754 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$170 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$164 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$164 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$564 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$558 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$388 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$388 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$581 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$182 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$175 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$301 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$293 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$374 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$368 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1283 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1280 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1277 ($dff).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1271 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1268 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1265 ($dff).
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_DATA[31:0]$59.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN[31:0]$60.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_DATA[31:0]$62.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN[31:0]$63.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_DATA[31:0]$65.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN[31:0]$66.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN[31:0]$72.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN[31:0]$75.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN[31:0]$78.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$42_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$43_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$44_EN.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$46_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$47_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$48_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$procmux$1005_Y.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$procmux$1010_Y.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$procmux$1020_Y.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$procmux$1025_Y.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$procmux$1049_Y.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$procmux$995_Y.
Removed top 25 bits (of 32) from wire service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109_Y.
Removed top 29 bits (of 32) from wire service.$techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107_Y.
Removed top 1 bits (of 2) from wire service.$techmap\ram.rx_from_ble.$procmux$949_Y.
Removed top 1 bits (of 2) from wire service.$techmap\ram.rx_from_ble.$procmux$963_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28_Y.
Removed top 29 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_ble.$procmux$1131_Y.
Removed top 1 bits (of 2) from wire service.$techmap\tx_to_ble.$procmux$1142_Y.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

31.13. Executing PEEPOPT pass (run peephole optimizers).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 71 unused wires.
<suppressed ~2 debug messages>

31.15. Executing SHARE pass (SAT-based resource sharing).

31.16. Executing TECHMAP pass (map to technology primitives).

31.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.16.2. Continuing TECHMAP pass.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~353 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

31.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
  creating $macc model for $techmap\ram.$add$src/servant_1.2.1/service/servant_ram.v:67$83 ($add).
  creating $macc model for $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109 ($add).
  creating $macc model for $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$312 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$313 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$315 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$316 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$388 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$389 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$337 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$338 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$345 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$346 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$170 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$164 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$345 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$346.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$337 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$338.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$388 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$389.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$315 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$316.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$312 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$313.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$164.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$170.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$346.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$338.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$389.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$316.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$313.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33.
  creating $alu model for $macc $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107.
  creating $alu model for $macc $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109.
  creating $alu model for $macc $techmap\ram.$add$src/servant_1.2.1/service/servant_ram.v:67$83.
  creating $alu model for $techmap\ram.rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$108 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$122 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$27: $auto$alumacc.cc:474:replace_alu$1392
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$27: $auto$alumacc.cc:474:replace_alu$1397
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$122: $auto$alumacc.cc:474:replace_alu$1402
  creating $alu cell for $techmap\ram.rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$108: $auto$alumacc.cc:474:replace_alu$1415
  creating $alu cell for $techmap\ram.$add$src/servant_1.2.1/service/servant_ram.v:67$83: $auto$alumacc.cc:474:replace_alu$1420
  creating $alu cell for $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:113$109: $auto$alumacc.cc:474:replace_alu$1423
  creating $alu cell for $techmap\ram.rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$107: $auto$alumacc.cc:474:replace_alu$1426
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$33: $auto$alumacc.cc:474:replace_alu$1429
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$313: $auto$alumacc.cc:474:replace_alu$1432
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$28: $auto$alumacc.cc:474:replace_alu$1435
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$316: $auto$alumacc.cc:474:replace_alu$1438
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$33: $auto$alumacc.cc:474:replace_alu$1441
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$389: $auto$alumacc.cc:474:replace_alu$1444
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$364: $auto$alumacc.cc:474:replace_alu$1447
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$28: $auto$alumacc.cc:474:replace_alu$1450
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$338: $auto$alumacc.cc:474:replace_alu$1453
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121: $auto$alumacc.cc:474:replace_alu$1456
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$346: $auto$alumacc.cc:474:replace_alu$1459
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638: $auto$alumacc.cc:474:replace_alu$1462
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$170: $auto$alumacc.cc:474:replace_alu$1465
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$164: $auto$alumacc.cc:474:replace_alu$1468
  created 21 $alu and 0 $macc cells.

31.20. Executing OPT pass (performing simple optimizations).

31.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~25 debug messages>

31.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

31.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1405: { $auto$alumacc.cc:490:replace_alu$1403 [0] $auto$alumacc.cc:490:replace_alu$1403 [1] $auto$alumacc.cc:490:replace_alu$1403 [2] $auto$alumacc.cc:490:replace_alu$1403 [3] $auto$alumacc.cc:490:replace_alu$1403 [4] $auto$alumacc.cc:490:replace_alu$1403 [5] $auto$alumacc.cc:490:replace_alu$1403 [6] $auto$alumacc.cc:490:replace_alu$1403 [7] $auto$alumacc.cc:490:replace_alu$1403 [8] $auto$alumacc.cc:490:replace_alu$1403 [9] $auto$alumacc.cc:490:replace_alu$1403 [10] $auto$alumacc.cc:490:replace_alu$1403 [11] $auto$alumacc.cc:490:replace_alu$1403 [12] $auto$alumacc.cc:490:replace_alu$1403 [13] $auto$alumacc.cc:490:replace_alu$1403 [14] $auto$alumacc.cc:490:replace_alu$1403 [15] $auto$alumacc.cc:490:replace_alu$1403 [16] $auto$alumacc.cc:490:replace_alu$1403 [17] $auto$alumacc.cc:490:replace_alu$1403 [18] $auto$alumacc.cc:490:replace_alu$1403 [19] $auto$alumacc.cc:490:replace_alu$1403 [20] $auto$alumacc.cc:490:replace_alu$1403 [21] $auto$alumacc.cc:490:replace_alu$1403 [22] $auto$alumacc.cc:490:replace_alu$1403 [23] $auto$alumacc.cc:490:replace_alu$1403 [24] $auto$alumacc.cc:490:replace_alu$1403 [25] $auto$alumacc.cc:490:replace_alu$1403 [26] $auto$alumacc.cc:490:replace_alu$1403 [27] $auto$alumacc.cc:490:replace_alu$1403 [28] $auto$alumacc.cc:490:replace_alu$1403 [29] $auto$alumacc.cc:490:replace_alu$1403 [30] $auto$alumacc.cc:490:replace_alu$1403 [31] }
  Optimizing cells in module \service.
Performed a total of 1 changes.

31.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $techmap\ram.$procdff$1279 ($dff) from module service.
Removing $techmap\ram.$procdff$1282 ($dff) from module service.
Removing $techmap\ram.$procdff$1285 ($dff) from module service.
Replaced 3 DFF cells.

31.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 8 unused cells and 21 unused wires.
<suppressed ~9 debug messages>

31.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.9. Rerunning OPT passes. (Maybe there is more to do..)

31.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.16. Finished OPT passes. (There is nothing left to do.)

31.21. Executing FSM pass (extract and optimize FSM).

31.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.ram.rx_from_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_pc.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

31.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

31.22. Executing OPT pass (performing simple optimizations).

31.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.22.5. Finished fast OPT passes.

31.23. Executing MEMORY pass.

31.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$86' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$87' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$88' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$89' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$90' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$91' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$92' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$93' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$157' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:71$84' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$151' in module `\service': merged data $dff to cell.

31.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 20 unused cells and 22 unused wires.
<suppressed ~21 debug messages>

31.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \clock_gen.pll.o_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$86) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$87) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$88) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$89) has addr \adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111
    Port 4 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:63$90) has addr \ram.my_adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 5 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:64$91) has addr \ram.my_adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 4 into this one.
      Active bits: 00000000000000001111111111111111
    Port 6 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:65$92) has addr \ram.my_adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 5 into this one.
      Active bits: 00000000111111111111111111111111
    Port 7 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$93) has addr \ram.my_adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 6 into this one.
      Active bits: 11111111111111111111111111111111
Consolidating write ports of memory service.ram.mem using sat-based resource sharing:
  Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:60$89) on posedge \clock_gen.pll.o_clk: considered
  Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$93) on posedge \clock_gen.pll.o_clk: considered
  Common input cone for all EN signals: 45 cells.
  Size of unconstrained SAT problem: 277 variables, 682 clauses
  Merging port 0 into port 1.

31.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:79$85 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$93 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:71$84 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$157 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$151 ($memrd)

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

31.26. Executing TECHMAP pass (map to technology primitives).

31.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

31.26.2. Continuing TECHMAP pass.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$eb7b0a0dd6effd21506757cb1738fca92a9964d7\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$2a0ec564fc73a08b38119a9952f1a13607f44571\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2548d3b65fec4e282fffe8fb5374557f0056bbc6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$a2c0e200ccf5e54832c7532f600e91bfcda9a3ea\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

31.27. Executing ICE40_BRAMINIT pass.

31.28. Executing OPT pass (performing simple optimizations).

31.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~59 debug messages>

31.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

31.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 379 unused wires.
<suppressed ~2 debug messages>

31.28.5. Finished fast OPT passes.

31.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

31.30. Executing OPT pass (performing simple optimizations).

31.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

31.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1692\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [1] $auto$rtlil.cc:1906:Mux$1651 [2] $auto$rtlil.cc:1906:Mux$1651 [3] $auto$rtlil.cc:1906:Mux$1651 [4] $auto$rtlil.cc:1906:Mux$1651 [5] $auto$rtlil.cc:1906:Mux$1651 [6] $auto$rtlil.cc:1906:Mux$1651 [7] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [9] $auto$rtlil.cc:1906:Mux$1651 [10] $auto$rtlil.cc:1906:Mux$1651 [11] $auto$rtlil.cc:1906:Mux$1651 [12] $auto$rtlil.cc:1906:Mux$1651 [13] $auto$rtlil.cc:1906:Mux$1651 [14] $auto$rtlil.cc:1906:Mux$1651 [15] }
    New input vector for $reduce_or cell $techmap$techmap1691\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [1] $auto$rtlil.cc:1906:Mux$1547 [2] $auto$rtlil.cc:1906:Mux$1547 [3] $auto$rtlil.cc:1906:Mux$1547 [4] $auto$rtlil.cc:1906:Mux$1547 [5] $auto$rtlil.cc:1906:Mux$1547 [6] $auto$rtlil.cc:1906:Mux$1547 [7] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [9] $auto$rtlil.cc:1906:Mux$1547 [10] $auto$rtlil.cc:1906:Mux$1547 [11] $auto$rtlil.cc:1906:Mux$1547 [12] $auto$rtlil.cc:1906:Mux$1547 [13] $auto$rtlil.cc:1906:Mux$1547 [14] $auto$rtlil.cc:1906:Mux$1547 [15] }
    New input vector for $reduce_or cell $techmap$techmap1690\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [1] $auto$rtlil.cc:1906:Mux$1638 [2] $auto$rtlil.cc:1906:Mux$1638 [3] $auto$rtlil.cc:1906:Mux$1638 [4] $auto$rtlil.cc:1906:Mux$1638 [5] $auto$rtlil.cc:1906:Mux$1638 [6] $auto$rtlil.cc:1906:Mux$1638 [7] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [9] $auto$rtlil.cc:1906:Mux$1638 [10] $auto$rtlil.cc:1906:Mux$1638 [11] $auto$rtlil.cc:1906:Mux$1638 [12] $auto$rtlil.cc:1906:Mux$1638 [13] $auto$rtlil.cc:1906:Mux$1638 [14] $auto$rtlil.cc:1906:Mux$1638 [15] }
    New input vector for $reduce_or cell $techmap$techmap1689\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [1] $auto$rtlil.cc:1906:Mux$1625 [2] $auto$rtlil.cc:1906:Mux$1625 [3] $auto$rtlil.cc:1906:Mux$1625 [4] $auto$rtlil.cc:1906:Mux$1625 [5] $auto$rtlil.cc:1906:Mux$1625 [6] $auto$rtlil.cc:1906:Mux$1625 [7] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [9] $auto$rtlil.cc:1906:Mux$1625 [10] $auto$rtlil.cc:1906:Mux$1625 [11] $auto$rtlil.cc:1906:Mux$1625 [12] $auto$rtlil.cc:1906:Mux$1625 [13] $auto$rtlil.cc:1906:Mux$1625 [14] $auto$rtlil.cc:1906:Mux$1625 [15] }
    New input vector for $reduce_or cell $techmap$techmap1688\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [1] $auto$rtlil.cc:1906:Mux$1573 [2] $auto$rtlil.cc:1906:Mux$1573 [3] $auto$rtlil.cc:1906:Mux$1573 [4] $auto$rtlil.cc:1906:Mux$1573 [5] $auto$rtlil.cc:1906:Mux$1573 [6] $auto$rtlil.cc:1906:Mux$1573 [7] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [9] $auto$rtlil.cc:1906:Mux$1573 [10] $auto$rtlil.cc:1906:Mux$1573 [11] $auto$rtlil.cc:1906:Mux$1573 [12] $auto$rtlil.cc:1906:Mux$1573 [13] $auto$rtlil.cc:1906:Mux$1573 [14] $auto$rtlil.cc:1906:Mux$1573 [15] }
    New input vector for $reduce_or cell $techmap$techmap1687\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [1] $auto$rtlil.cc:1906:Mux$1599 [2] $auto$rtlil.cc:1906:Mux$1599 [3] $auto$rtlil.cc:1906:Mux$1599 [4] $auto$rtlil.cc:1906:Mux$1599 [5] $auto$rtlil.cc:1906:Mux$1599 [6] $auto$rtlil.cc:1906:Mux$1599 [7] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [9] $auto$rtlil.cc:1906:Mux$1599 [10] $auto$rtlil.cc:1906:Mux$1599 [11] $auto$rtlil.cc:1906:Mux$1599 [12] $auto$rtlil.cc:1906:Mux$1599 [13] $auto$rtlil.cc:1906:Mux$1599 [14] $auto$rtlil.cc:1906:Mux$1599 [15] }
    New input vector for $reduce_or cell $techmap$techmap1686\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [1] $auto$rtlil.cc:1906:Mux$1534 [2] $auto$rtlil.cc:1906:Mux$1534 [3] $auto$rtlil.cc:1906:Mux$1534 [4] $auto$rtlil.cc:1906:Mux$1534 [5] $auto$rtlil.cc:1906:Mux$1534 [6] $auto$rtlil.cc:1906:Mux$1534 [7] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [9] $auto$rtlil.cc:1906:Mux$1534 [10] $auto$rtlil.cc:1906:Mux$1534 [11] $auto$rtlil.cc:1906:Mux$1534 [12] $auto$rtlil.cc:1906:Mux$1534 [13] $auto$rtlil.cc:1906:Mux$1534 [14] $auto$rtlil.cc:1906:Mux$1534 [15] }
    New input vector for $reduce_or cell $techmap$techmap1685\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [1] $auto$rtlil.cc:1906:Mux$1560 [2] $auto$rtlil.cc:1906:Mux$1560 [3] $auto$rtlil.cc:1906:Mux$1560 [4] $auto$rtlil.cc:1906:Mux$1560 [5] $auto$rtlil.cc:1906:Mux$1560 [6] $auto$rtlil.cc:1906:Mux$1560 [7] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [9] $auto$rtlil.cc:1906:Mux$1560 [10] $auto$rtlil.cc:1906:Mux$1560 [11] $auto$rtlil.cc:1906:Mux$1560 [12] $auto$rtlil.cc:1906:Mux$1560 [13] $auto$rtlil.cc:1906:Mux$1560 [14] $auto$rtlil.cc:1906:Mux$1560 [15] }
    New input vector for $reduce_or cell $techmap$techmap1682\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1681: { $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [1] $auto$rtlil.cc:1906:Mux$1586 [2] $auto$rtlil.cc:1906:Mux$1586 [3] $auto$rtlil.cc:1906:Mux$1586 [4] $auto$rtlil.cc:1906:Mux$1586 [5] $auto$rtlil.cc:1906:Mux$1586 [6] $auto$rtlil.cc:1906:Mux$1586 [7] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [9] $auto$rtlil.cc:1906:Mux$1586 [10] $auto$rtlil.cc:1906:Mux$1586 [11] $auto$rtlil.cc:1906:Mux$1586 [12] $auto$rtlil.cc:1906:Mux$1586 [13] $auto$rtlil.cc:1906:Mux$1586 [14] $auto$rtlil.cc:1906:Mux$1586 [15] }
    New input vector for $reduce_or cell $techmap$techmap1679\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [1] $auto$rtlil.cc:1906:Mux$1664 [2] $auto$rtlil.cc:1906:Mux$1664 [3] $auto$rtlil.cc:1906:Mux$1664 [4] $auto$rtlil.cc:1906:Mux$1664 [5] $auto$rtlil.cc:1906:Mux$1664 [6] $auto$rtlil.cc:1906:Mux$1664 [7] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [9] $auto$rtlil.cc:1906:Mux$1664 [10] $auto$rtlil.cc:1906:Mux$1664 [11] $auto$rtlil.cc:1906:Mux$1664 [12] $auto$rtlil.cc:1906:Mux$1664 [13] $auto$rtlil.cc:1906:Mux$1664 [14] $auto$rtlil.cc:1906:Mux$1664 [15] }
    New input vector for $reduce_or cell $techmap$techmap1678\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1677: { $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [1] $auto$rtlil.cc:1906:Mux$1495 [2] $auto$rtlil.cc:1906:Mux$1495 [3] $auto$rtlil.cc:1906:Mux$1495 [4] $auto$rtlil.cc:1906:Mux$1495 [5] $auto$rtlil.cc:1906:Mux$1495 [6] $auto$rtlil.cc:1906:Mux$1495 [7] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [9] $auto$rtlil.cc:1906:Mux$1495 [10] $auto$rtlil.cc:1906:Mux$1495 [11] $auto$rtlil.cc:1906:Mux$1495 [12] $auto$rtlil.cc:1906:Mux$1495 [13] $auto$rtlil.cc:1906:Mux$1495 [14] $auto$rtlil.cc:1906:Mux$1495 [15] }
    New input vector for $reduce_or cell $techmap$techmap1675\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [1] $auto$rtlil.cc:1906:Mux$1508 [2] $auto$rtlil.cc:1906:Mux$1508 [3] $auto$rtlil.cc:1906:Mux$1508 [4] $auto$rtlil.cc:1906:Mux$1508 [5] $auto$rtlil.cc:1906:Mux$1508 [6] $auto$rtlil.cc:1906:Mux$1508 [7] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [9] $auto$rtlil.cc:1906:Mux$1508 [10] $auto$rtlil.cc:1906:Mux$1508 [11] $auto$rtlil.cc:1906:Mux$1508 [12] $auto$rtlil.cc:1906:Mux$1508 [13] $auto$rtlil.cc:1906:Mux$1508 [14] $auto$rtlil.cc:1906:Mux$1508 [15] }
    New input vector for $reduce_or cell $techmap$techmap1674\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [1] $auto$rtlil.cc:1906:Mux$1521 [2] $auto$rtlil.cc:1906:Mux$1521 [3] $auto$rtlil.cc:1906:Mux$1521 [4] $auto$rtlil.cc:1906:Mux$1521 [5] $auto$rtlil.cc:1906:Mux$1521 [6] $auto$rtlil.cc:1906:Mux$1521 [7] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [9] $auto$rtlil.cc:1906:Mux$1521 [10] $auto$rtlil.cc:1906:Mux$1521 [11] $auto$rtlil.cc:1906:Mux$1521 [12] $auto$rtlil.cc:1906:Mux$1521 [13] $auto$rtlil.cc:1906:Mux$1521 [14] $auto$rtlil.cc:1906:Mux$1521 [15] }
    New input vector for $reduce_or cell $techmap$techmap1673\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [1] $auto$rtlil.cc:1906:Mux$1612 [2] $auto$rtlil.cc:1906:Mux$1612 [3] $auto$rtlil.cc:1906:Mux$1612 [4] $auto$rtlil.cc:1906:Mux$1612 [5] $auto$rtlil.cc:1906:Mux$1612 [6] $auto$rtlil.cc:1906:Mux$1612 [7] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [9] $auto$rtlil.cc:1906:Mux$1612 [10] $auto$rtlil.cc:1906:Mux$1612 [11] $auto$rtlil.cc:1906:Mux$1612 [12] $auto$rtlil.cc:1906:Mux$1612 [13] $auto$rtlil.cc:1906:Mux$1612 [14] $auto$rtlil.cc:1906:Mux$1612 [15] }
    New input vector for $reduce_or cell $auto$memory_share.cc:620:consolidate_wr_using_sat$1473: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:66$49_EN[31:0]$81 [31] $auto$wreduce.cc:455:run$1318 [23] $auto$wreduce.cc:455:run$1316 [7] $auto$wreduce.cc:455:run$1317 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1494:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1495
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1495 [15:9] $auto$rtlil.cc:1906:Mux$1495 [7:1] } = { $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [8] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1507:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1508
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1508 [15:9] $auto$rtlil.cc:1906:Mux$1508 [7:1] } = { $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [8] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1520:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1521
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1521 [15:9] $auto$rtlil.cc:1906:Mux$1521 [7:1] } = { $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [8] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1533:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1534
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1534 [15:9] $auto$rtlil.cc:1906:Mux$1534 [7:1] } = { $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [8] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1546:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1547
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1547 [15:9] $auto$rtlil.cc:1906:Mux$1547 [7:1] } = { $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [8] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1559:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1560
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1560 [15:9] $auto$rtlil.cc:1906:Mux$1560 [7:1] } = { $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [8] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1572:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [0] }, Y=$auto$rtlil.cc:1906:Mux$1573
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [1:0], Y={ $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1573 [15:9] $auto$rtlil.cc:1906:Mux$1573 [7:1] } = { $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [8] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1585:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1586
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1586 [15:9] $auto$rtlil.cc:1906:Mux$1586 [7:1] } = { $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [8] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1598:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1599
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1599 [15:9] $auto$rtlil.cc:1906:Mux$1599 [7:1] } = { $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [8] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1611:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1612
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1612 [15:9] $auto$rtlil.cc:1906:Mux$1612 [7:1] } = { $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [8] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1624:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1625
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1625 [15:9] $auto$rtlil.cc:1906:Mux$1625 [7:1] } = { $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [8] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1637:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1638
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1638 [15:9] $auto$rtlil.cc:1906:Mux$1638 [7:1] } = { $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [8] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1650:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1651
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1651 [15:9] $auto$rtlil.cc:1906:Mux$1651 [7:1] } = { $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [8] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1663:
      Old ports: A=16'0000000000000000, B={ $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] $auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [2] }, Y=$auto$rtlil.cc:1906:Mux$1664
      New ports: A=2'00, B=$auto$memory_share.cc:633:consolidate_wr_using_sat$1479 [3:2], Y={ $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1664 [15:9] $auto$rtlil.cc:1906:Mux$1664 [7:1] } = { $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [8] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.rx_from_ble.$procmux$944:
      Old ports: A=2'11, B=2'00, Y=$techmap\ram.rx_from_ble.$procmux$944_Y
      New ports: A=1'1, B=1'0, Y=$techmap\ram.rx_from_ble.$procmux$944_Y [0]
      New connections: $techmap\ram.rx_from_ble.$procmux$944_Y [1] = $techmap\ram.rx_from_ble.$procmux$944_Y [0]
    Consolidated identical input bits for $mux cell $techmap\ram.rx_from_ble.$procmux$952:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1333 [0] }, Y=$techmap\ram.rx_from_ble.$procmux$952_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1333 [0], Y=$techmap\ram.rx_from_ble.$procmux$952_Y [0]
      New connections: $techmap\ram.rx_from_ble.$procmux$952_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\ram.rx_from_ble.$procmux$957:
      Old ports: A=2'10, B=2'00, Y=$techmap\ram.rx_from_ble.$procmux$957_Y
      New ports: A=1'1, B=1'0, Y=$techmap\ram.rx_from_ble.$procmux$957_Y [1]
      New connections: $techmap\ram.rx_from_ble.$procmux$957_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1126:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1126_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1126_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1126_Y [1] = $techmap\tx_to_ble.$procmux$1126_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1134:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1338 [0] }, Y=$techmap\tx_to_ble.$procmux$1134_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1338 [0], Y=$techmap\tx_to_ble.$procmux$1134_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1134_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1126:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1126_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1126_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1126_Y [1] = $techmap\tx_to_pc.$procmux$1126_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1134:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_pc.$procmux$1131_Y [0] }, Y=$techmap\tx_to_pc.$procmux$1134_Y
      New ports: A=1'0, B=$techmap\tx_to_pc.$procmux$1131_Y [0], Y=$techmap\tx_to_pc.$procmux$1134_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1134_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1692\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1651 [0] $auto$rtlil.cc:1906:Mux$1651 [8] }
    New input vector for $reduce_or cell $techmap$techmap1691\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1547 [0] $auto$rtlil.cc:1906:Mux$1547 [8] }
    New input vector for $reduce_or cell $techmap$techmap1690\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1638 [0] $auto$rtlil.cc:1906:Mux$1638 [8] }
    New input vector for $reduce_or cell $techmap$techmap1689\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1625 [0] $auto$rtlil.cc:1906:Mux$1625 [8] }
    New input vector for $reduce_or cell $techmap$techmap1688\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1573 [0] $auto$rtlil.cc:1906:Mux$1573 [8] }
    New input vector for $reduce_or cell $techmap$techmap1687\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1599 [0] $auto$rtlil.cc:1906:Mux$1599 [8] }
    New input vector for $reduce_or cell $techmap$techmap1686\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1534 [0] $auto$rtlil.cc:1906:Mux$1534 [8] }
    New input vector for $reduce_or cell $techmap$techmap1685\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1560 [0] $auto$rtlil.cc:1906:Mux$1560 [8] }
    New input vector for $reduce_or cell $techmap$techmap1682\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1681: { $auto$rtlil.cc:1906:Mux$1586 [0] $auto$rtlil.cc:1906:Mux$1586 [8] }
    New input vector for $reduce_or cell $techmap$techmap1679\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1664 [0] $auto$rtlil.cc:1906:Mux$1664 [8] }
    New input vector for $reduce_or cell $techmap$techmap1678\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1677: { $auto$rtlil.cc:1906:Mux$1495 [0] $auto$rtlil.cc:1906:Mux$1495 [8] }
    New input vector for $reduce_or cell $techmap$techmap1675\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1508 [0] $auto$rtlil.cc:1906:Mux$1508 [8] }
    New input vector for $reduce_or cell $techmap$techmap1674\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1521 [0] $auto$rtlil.cc:1906:Mux$1521 [8] }
    New input vector for $reduce_or cell $techmap$techmap1673\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1672: { $auto$rtlil.cc:1906:Mux$1612 [0] $auto$rtlil.cc:1906:Mux$1612 [8] }
  Optimizing cells in module \service.
Performed a total of 50 changes.

31.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

31.30.9. Rerunning OPT passes. (Maybe there is more to do..)

31.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~115 debug messages>

31.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

31.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.16. Finished OPT passes. (There is nothing left to do.)

31.31. Executing TECHMAP pass (map to technology primitives).

31.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

31.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~1592 debug messages>

31.32. Executing ICE40_OPT pass (performing simple optimizations).

31.32.1. Running ICE40 specific optimizations.

31.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~648 debug messages>

31.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~282 debug messages>
Removed a total of 94 cells.

31.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 298 unused cells and 966 unused wires.
<suppressed ~303 debug messages>

31.32.6. Rerunning OPT passes. (Removed registers in this run.)

31.32.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1392.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1397.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1415.slice[0].carry: CO=\ram.rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1420.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1423.slice[0].carry: CO=\ram.rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1426.slice[0].carry: CO=\ram.rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1429.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1435.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1441.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1447.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1450.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1456.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1465.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1468.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1420.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1423.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1426.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1429.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1435.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1441.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1447.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1450.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1456.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1465.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1468.slice[1].adder back to logic.

31.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~161 debug messages>

31.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

31.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 3 unused cells and 26 unused wires.
<suppressed ~4 debug messages>

31.32.12. Rerunning OPT passes. (Removed registers in this run.)

31.32.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1420.slice[1].carry: CO=\ram.my_adr [1]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1420.slice[2].adder back to logic.

31.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~15 debug messages>

31.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

31.32.18. Rerunning OPT passes. (Removed registers in this run.)

31.32.19. Running ICE40 specific optimizations.

31.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.24. Finished OPT passes. (There is nothing left to do.)

31.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

31.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1985 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1986 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1987 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1988 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1989 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1990 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1991 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1992 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1994 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1995 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1996 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1997 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1998 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2115 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [1] -> \ram.my_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2116 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [2] -> \ram.my_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2117 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [3] -> \ram.my_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2118 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [4] -> \ram.my_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2119 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [5] -> \ram.my_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2120 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [6] -> \ram.my_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2121 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [7] -> \ram.my_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2122 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [8] -> \ram.my_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2123 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [9] -> \ram.my_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2124 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [10] -> \ram.my_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2125 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [11] -> \ram.my_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2126 to $_DFFE_PP_ for $techmap\ram.$0\my_adr[31:0] [12] -> \ram.my_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2301 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2307 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2308 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2309 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2312 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2313 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2314 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2315 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2316 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2317 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2318 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2319 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2424 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2430 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2431 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2432 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1122.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2435 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2436 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2437 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2438 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2439 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2440 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2441 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2442 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1150.$ternary$/usr/bin/../share/yosys/techmap.v:445$2376_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2508 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2509 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2510 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2511 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2512 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2513 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2514 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2515 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2516 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2517 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2518 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2519 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2520 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2521 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2522 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2523 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2524 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2525 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2526 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2527 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2528 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2529 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2530 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2531 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2532 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2533 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2534 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2535 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2536 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2537 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2538 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2539 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2541 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2707 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2872 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$911.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2873 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$889.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2874 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$868.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2875 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$848.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2876 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$829.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2877 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$811.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2878 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$794.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2879 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$778.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.rx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2880 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$940.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [0] -> \ram.rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2881 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$940.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [1] -> \ram.rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2882 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$940.$ternary$/usr/bin/../share/yosys/techmap.v:445$2411_Y [2] -> \ram.rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2885 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$969.$ternary$/usr/bin/../share/yosys/techmap.v:445$2355_Y -> \ram.rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2886 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [0] -> \ram.rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2887 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [1] -> \ram.rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2888 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [2] -> \ram.rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2889 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [3] -> \ram.rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2890 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [4] -> \ram.rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2891 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [5] -> \ram.rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2892 to $_DFFE_PP_ for $techmap$techmap\ram.rx_from_ble.$procmux$975.$ternary$/usr/bin/../share/yosys/techmap.v:445$2908_Y [6] -> \ram.rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3063 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3101 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3190 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3191 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3192 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3193 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3194 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3195 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3196 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3197 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3198 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3199 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3200 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3201 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3347 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3348 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3349 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3350 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3363 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3364 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3365 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3366 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3367 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3368 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3369 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3372 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3373 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3374 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3375 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3376 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3377 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3378 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3423 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3491 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3495 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3496 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3497 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3598 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3599 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3600 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3601 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3602 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3603 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3606 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3607 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3608 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3609 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3610 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3611 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3612 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3613 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3614 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3615 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3616 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3617 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3618 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3619 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3620 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3621 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3622 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3623 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3624 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3625 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3626 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3627 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3746 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3747 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3748 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3749 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3750 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3751 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3752 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3753 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3754 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3834 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3835 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3836 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3837 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3838 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3839 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3840 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3841 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3842 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3843 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3844 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3845 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3846 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3847 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3848 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3849 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3850 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3851 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3852 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3853 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3854 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3855 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3856 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3857 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3858 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3859 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3860 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3861 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3862 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3863 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3864 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3865 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4047 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4048 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4049 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4050 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4051 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4052 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4053 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4054 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4055 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4056 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4057 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4058 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4059 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4060 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4061 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4062 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4063 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4064 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4065 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4066 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4067 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4068 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4069 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4070 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4071 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4072 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4073 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4074 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4075 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4076 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4077 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4078 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4149 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.

31.35. Executing TECHMAP pass (map to technology primitives).

31.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

31.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~354 debug messages>

31.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~506 debug messages>

31.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2300 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2435 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2115 (SB_DFFE): \ram.my_adr [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2312 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2423 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2120 (SB_DFFE): \ram.my_adr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2118 (SB_DFFE): \ram.my_adr [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2119 (SB_DFFE): \ram.my_adr [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2121 (SB_DFFE): \ram.my_adr [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2122 (SB_DFFE): \ram.my_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2123 (SB_DFFE): \ram.my_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2124 (SB_DFFE): \ram.my_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2125 (SB_DFFE): \ram.my_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2126 (SB_DFFE): \ram.my_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2301 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2304 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2305 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2306 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2307 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2302 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2309 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2313 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2315 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2425 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2310 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2314 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2316 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2317 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2318 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2319 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2320 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2311 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2426 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2424 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2427 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2428 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2429 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2430 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2431 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2434 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2442 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2438 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2436 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2433 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2437 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2439 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2440 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2441 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2432 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2443 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2877 (SB_DFFE): \ram.rx_from_ble.rx_byte [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2116 (SB_DFFE): \ram.my_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2880 (SB_DFFE): \ram.rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2874 (SB_DFFE): \ram.rx_from_ble.rx_byte [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2871 (SB_DFF): \ram.rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2873 (SB_DFFE): \ram.rx_from_ble.rx_byte [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2878 (SB_DFFE): \ram.rx_from_ble.rx_byte [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2875 (SB_DFFE): \ram.rx_from_ble.rx_byte [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2879 (SB_DFFE): \ram.rx_from_ble.rx_byte [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2876 (SB_DFFE): \ram.rx_from_ble.rx_byte [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2870 (SB_DFF): \ram.rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2881 (SB_DFFE): \ram.rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2882 (SB_DFFE): \ram.rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2884 (SB_DFF): \ram.rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2888 (SB_DFFE): \ram.rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2887 (SB_DFFE): \ram.rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2883 (SB_DFF): \ram.rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2885 (SB_DFFE): \ram.rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2889 (SB_DFFE): \ram.rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2872 (SB_DFFE): \ram.rx_from_ble.rx_byte [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2890 (SB_DFFE): \ram.rx_from_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2891 (SB_DFFE): \ram.rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2892 (SB_DFFE): \ram.rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2886 (SB_DFFE): \ram.rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2117 (SB_DFFE): \ram.my_adr [3] = 1

31.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$2587 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2359 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2446 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2423 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2146 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:52$56_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2106 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2362 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2360 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2301 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2363 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2304 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2364 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2305 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2365 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2306 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2361 (A=1'0, B=$techmap\tx_to_ble.$procmux$1160_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2302 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2448 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2425 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5289 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1128.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2405_Y, S=$auto$opt_reduce.cc:132:opt_mux$1307) into $auto$simplemap.cc:420:simplemap_dff$2311 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2449 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2426 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2447 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2424 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2450 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2427 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2451 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2428 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2452 (A=1'0, B=$techmap\tx_to_pc.$procmux$1160_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2429 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5481 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1128.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2405_Y, S=$auto$opt_reduce.cc:132:opt_mux$1309) into $auto$simplemap.cc:420:simplemap_dff$2434 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2581 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2577 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2582 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2576 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2578 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2574 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2579 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2584 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2585 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2586 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2588 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2575 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2590 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2591 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2592 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2593 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2594 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2595 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2596 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2597 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2598 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2599 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2600 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2601 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2602 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2603 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2604 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2637 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2638 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$5803 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2639 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2640 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2641 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2642 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2643 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2644 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2646 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2573 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2647 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2648 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2649 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2650 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2651 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2652 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2653 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2654 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2655 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2656 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2657 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2658 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2659 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2660 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2661 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2662 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2663 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2664 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2665 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2666 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2569 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2667 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2668 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2583 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2645 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$121_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2589 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2580 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2718 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$129_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4917 (A=1'0, B=$techmap$techmap\ram.rx_from_ble.$procmux$946.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2405_Y, S=$auto$simplemap.cc:127:simplemap_reduce$4955) into $auto$simplemap.cc:420:simplemap_dff$2884 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3064 (A=$techmap\servant.cpu.rf_ram_if.$procmux$748_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3056 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3065 (A=$techmap\servant.cpu.rf_ram_if.$procmux$748_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3057 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3074 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3053 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3066 (A=$techmap\servant.cpu.rf_ram_if.$procmux$748_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3058 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3067 (A=$techmap\servant.cpu.rf_ram_if.$procmux$748_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3059 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3068 (A=$techmap\servant.cpu.rf_ram_if.$procmux$748_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3060 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3077 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$3062 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3075 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3055 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3509 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3503 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$636_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3481 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3511 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3489 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3504 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$637_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3490 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3506 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3493 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3508 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$643_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3507 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3494 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3505 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$638_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3492 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3500 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$633_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3498 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$634_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3512 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$653_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3760 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3751 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3903 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3836 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3904 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3837 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3756 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$200_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3754 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3905 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3838 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3906 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3839 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3907 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3840 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3908 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3841 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3909 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3842 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3910 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3843 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3911 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3844 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3912 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3845 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3913 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3846 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3914 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3847 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3915 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3848 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3916 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3849 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3917 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3918 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3851 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3919 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3920 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3921 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3854 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3922 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3855 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3923 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3856 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3924 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3857 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3925 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3858 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3926 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3859 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3927 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3860 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3928 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3861 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3929 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3930 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3863 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3931 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3932 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3865 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3510 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3488 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3901 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3834 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3902 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3835 (SB_DFFE).

31.40. Executing ICE40_OPT pass (performing simple optimizations).

31.40.1. Running ICE40 specific optimizations.

31.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~198 debug messages>

31.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~642 debug messages>
Removed a total of 214 cells.

31.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 138 unused cells and 2081 unused wires.
<suppressed ~140 debug messages>

31.40.6. Rerunning OPT passes. (Removed registers in this run.)

31.40.7. Running ICE40 specific optimizations.

31.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.40.12. Finished OPT passes. (There is nothing left to do.)

31.41. Executing TECHMAP pass (map to technology primitives).

31.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.41.2. Continuing TECHMAP pass.
No more expansions possible.

31.42. Executing ABC pass (technology mapping using ABC).

31.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
Extracted 1723 gates and 2331 wires to a netlist network with 606 inputs and 383 outputs.

31.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     675.
ABC: Participating nodes from both networks       =    1467.
ABC: Participating nodes from the first network   =     678. (  82.78 % of nodes)
ABC: Participating nodes from the second network  =     789. (  96.34 % of nodes)
ABC: Node pairs (any polarity)                    =     678. (  82.78 % of names can be moved)
ABC: Node pairs (same polarity)                   =     564. (  68.86 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

31.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1634
ABC RESULTS:        internal signals:     1342
ABC RESULTS:           input signals:      606
ABC RESULTS:          output signals:      383
Removing temp directory.
Removed 0 unused cells and 1486 unused wires.

31.43. Executing TECHMAP pass (map to technology primitives).

31.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111001000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
No more expansions possible.
<suppressed ~2168 debug messages>
Removed 0 unused cells and 1630 unused wires.

31.44. Executing HIERARCHY pass (managing design hierarchy).

31.44.1. Analyzing design hierarchy..
Top module:  \service

31.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

31.45. Printing statistics.

=== service ===

   Number of wires:               1514
   Number of wire bits:           4319
   Number of public wires:         448
   Number of public wire bits:    3024
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1386
     SB_CARRY                      120
     SB_DFF                         31
     SB_DFFE                       186
     SB_DFFESR                      72
     SB_DFFSR                       64
     SB_DFFSS                        1
     SB_LUT4                       896
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

31.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32. Executing JSON backend.

Warnings: 6 unique messages, 21 total
End of script. Logfile hash: a4a42bbed6
CPU: user 3.39s system 0.03s, MEM: 83.78 MB total, 65.98 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 25% 24x opt_clean (0 sec), 16% 24x opt_expr (0 sec), ...
