
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/servant/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/servant/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/servant.v
Parsing Verilog input from `src/servant_1.2.1/servant/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/servant/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/servant/service.v
Parsing Verilog input from `src/servant_1.2.1/servant/service.v' to AST representation.
Warning: Literal has a width of 1 bit, but value requires 4 bit. (src/servant_1.2.1/servant/service.v:188)
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

28. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile = 448'0010111101101000011011110110110101100101001011110111000001100001011101010110110000101111011100110110010101110010011101100010111101100110011101010111001101100101011100110110111101100011010111110110110001101001011000100111001001100001011100100110100101100101011100110010111101110011011001010111001001110110001011110111001101110111001011110111001101101001011011010111000001101100011001010101111101000010010011000100010100101110011010000110010101111000
Generating RTLIL representation for module `$paramod$e8de6df17cd5cb4ef3b1bd6c4e9ad0e59bffa785\service'.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/servant/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:175.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/servant/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:175.

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/servant/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:175.

31. Executing SYNTH_ICE40 pass.

31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

31.2. Executing HIERARCHY pass (managing design hierarchy).

31.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/servant/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/servant/service.v:175.

31.3.1. Analyzing design hierarchy..
Top module:  \service

31.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.
src/servant_1.2.1/servant/uart_tx.v:108: Warning: Identifier `\done' is implicitly declared.

31.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

31.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile = 448'0010111101101000011011110110110101100101001011110111000001100001011101010110110000101111011100110110010101110010011101100010111101100110011101010111001101100101011100110110111101100011010111110110110001101001011000100111001001100001011100100110100101100101011100110010111101110011011001010111001001110110001011110111001101110111001011110111001101101001011011010111000001101100011001010101111101000010010011000100010100101110011010000110010101111000
Generating RTLIL representation for module `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram'.
Preloading $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram from /home/paul/serv/fusesoc_libraries/serv/sw/simple_BLE.hex

31.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
Parameter \memfile = 448'0010111101101000011011110110110101100101001011110111000001100001011101010110110000101111011100110110010101110010011101100010111101100110011101010111001101100101011100110110111101100011010111110110110001101001011000100111001001100001011100100110100101100101011100110010111101110011011001010111001001110110001011110111001101110111001011110111001101101001011011010111000001101100011001010101111101000010010011000100010100101110011010000110010101111000
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$c5785aca136200f0b267002c03e454e095a89f25\servant'.

31.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

31.3.7. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram
Used module:     $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

31.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/servant/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

31.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

31.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

31.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

31.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

31.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

31.3.14. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram
Used module:     $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

31.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

31.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

31.3.18. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram
Used module:     $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

31.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

31.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

31.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

31.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

31.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

31.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

31.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

31.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

31.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

31.3.29. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram
Used module:     $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.30. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram
Used module:     $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 27 unused modules.

31.4. Executing PROC pass (convert processes to netlists).

31.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$707'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$413'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$413'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
Found and cleaned up 1 empty switch in `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:38$171'.
Removing empty process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:38$171'.
Cleaned up 7 empty switches.

31.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/servant/servant_timer.v:26$174 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/servant/servant_ram.v:24$148 in module $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/servant/uart_rx.v:40$123 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/servant/uart_rx.v:40$123 in module uart_rx.
Removed 1 dead cases from process $proc$src/servant_1.2.1/servant/uart_tx.v:26$105 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/servant/uart_tx.v:26$105 in module uart_tx.
Removed a total of 2 dead cases.

31.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:30$141'.
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:29$140'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:28$139'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:25$138'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:23$137'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:21$136'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:20$135'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:19$134'.
  Set init value: \r_Rx_temp = 1'1
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:24$121'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:23$120'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:22$119'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:20$118'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:18$117'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:10$116'.
  Set init value: \o_data = 1'1
Found init rule in `\service.$proc$src/servant_1.2.1/servant/service.v:144$104'.
  Set init value: \recieve = 1'0
Found init rule in `\service.$proc$src/servant_1.2.1/servant/service.v:134$103'.
  Set init value: \my_adr = 12582912

31.4.4. Executing PROC_ARST pass (detect async resets in processes).

31.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$707'.
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\ibus_cyc[0:0]
     6/7: $0\init_done[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$435'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$389'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$330'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
     5/10: $0\mcause31[0:0]
     6/10: $0\timer_irq_r[0:0]
     7/10: $0\mie_mtie[0:0]
     8/10: $0\mstatus_mpie[0:0]
     9/10: $0\mstatus_mie[0:0]
    10/10: $0\o_new_irq[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$228'.
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$227'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$220'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$207'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN[1:0]$204
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_DATA[1:0]$205
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_ADDR[9:0]$203
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/servant/ice40_pll.v:13$197'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/servant/servant_mux.v:42$182'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/servant/servant_gpio.v:9$178'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:21$173'.
     1/1: $0\o_wb_dat[31:0]
Creating decoders for process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
     1/13: $0\o_wb_rdt[31:0]
     2/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156
     3/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_DATA[31:0]$159
     4/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_ADDR[10:0]$155
     5/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157
     6/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_DATA[31:0]$153
     7/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_ADDR[10:0]$154
     8/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161
     9/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_DATA[31:0]$160
    10/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_ADDR[10:0]$158
    11/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164
    12/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_DATA[31:0]$163
    13/13: $0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_ADDR[10:0]$162
Creating decoders for process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:24$148'.
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:30$141'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:29$140'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:28$139'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:25$138'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:23$137'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:21$136'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:20$135'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:19$134'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
    10/13: $0\clock_count[6:0]
    11/13: $0\state[1:0]
    12/13: $0\temp_done[0:0]
    13/13: $0\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:34$122'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:24$121'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:23$120'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:22$119'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:20$118'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:18$117'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:10$116'.
     1/1: $1\o_data[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
     1/6: $0\clock_count[6:0]
     2/6: $0\state[1:0]
     3/6: $0\temp_done[0:0]
     4/6: $0\data_index[2:0]
     5/6: $0\temp_data[7:0]
     6/6: $0\o_data[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/servant/service.v:144$104'.
     1/1: $1\recieve[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/servant/service.v:134$103'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
     1/4: $0\recieve[0:0]
     2/4: $0\my_adr[31:0]
     3/4: $0\data_to_ble[7:0]
     4/4: $0\tx_active[0:0]

31.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:21$173'.

31.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$707'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1152' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1153' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1154' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1155' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1156' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1157' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1158' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
  created $dff cell `$procdff$1159' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1160' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1161' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1162' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1163' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$435'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
  created $dff cell `$procdff$1172' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$389'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$389'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$330'.
  created $dff cell `$procdff$1175' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1176' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1177' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1178' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1179' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1180' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1181' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
  created $dff cell `$procdff$1182' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$228'.
  created $dff cell `$procdff$1183' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$227'.
  created $dff cell `$procdff$1184' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
  created $dff cell `$procdff$1185' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
  created $dff cell `$procdff$1186' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
  created $dff cell `$procdff$1187' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
  created $dff cell `$procdff$1188' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
  created $dff cell `$procdff$1189' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$220'.
  created $dff cell `$procdff$1190' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$220'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$220'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$207'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/servant/ice40_pll.v:13$197'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/servant/servant_mux.v:42$182'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/servant/servant_gpio.v:9$178'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/servant/servant_gpio.v:9$178'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.\o_wb_rdt' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_DATA' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_ADDR' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_ADDR' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_ADDR' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_DATA' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_DATA' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_ADDR' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_DATA' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.\o_wb_ack' using process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:24$148'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:34$122'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:34$122'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\uart_tx.\o_data' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\service.\my_adr' using process `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\service.\recieve' using process `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
  created $dff cell `$procdff$1236' with positive edge clock.

31.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$707'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$707'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$683'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$621'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$620'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$459'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$445'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$435'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$435'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$404'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$389'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$389'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$330'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$330'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$251'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$228'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$228'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$227'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$224'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$220'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$207'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$202'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/servant/ice40_pll.v:13$197'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/servant/servant_mux.v:42$182'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/servant/servant_mux.v:42$182'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/servant/servant_gpio.v:9$178'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/servant/servant_gpio.v:9$178'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:26$174'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/servant/servant_timer.v:21$173'.
Found and cleaned up 4 empty switches in `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
Removing empty process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:30$152'.
Found and cleaned up 1 empty switch in `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:24$148'.
Removing empty process `$paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.$proc$src/servant_1.2.1/servant/servant_ram.v:24$148'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:30$141'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:29$140'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:28$139'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:25$138'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:23$137'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:21$136'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:20$135'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:19$134'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:40$123'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/servant/uart_rx.v:34$122'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:24$121'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:23$120'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:22$119'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:20$118'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:18$117'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:10$116'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/servant/uart_tx.v:26$105'.
Removing empty process `service.$proc$src/servant_1.2.1/servant/service.v:144$104'.
Removing empty process `service.$proc$src/servant_1.2.1/servant/service.v:134$103'.
Found and cleaned up 4 empty switches in `\service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
Removing empty process `service.$proc$src/servant_1.2.1/servant/service.v:146$79'.
Cleaned up 60 empty switches.

31.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram for cells of type $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.
Using template $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant for cells of type $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant.
Using template uart_rx for cells of type uart_rx.
Using template uart_tx for cells of type uart_tx.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~24 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$c5785aca136200f0b267002c03e454e095a89f25\servant.
Deleting now unused module $paramod$a71722fe484450e337c73af1ce92da7dd0ec6e5a\servant_ram.
Deleting now unused module uart_rx.
Deleting now unused module uart_tx.

31.6. Executing TRIBUF pass.

31.7. Executing DEMINOUT pass (demote inout ports to input or output).

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~91 debug messages>

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 22 unused cells and 479 unused wires.
<suppressed ~26 debug messages>

31.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

31.11. Executing OPT pass (performing simple optimizations).

31.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~348 debug messages>
Removed a total of 116 cells.

31.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1140: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

31.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$208: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$624: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$336: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$555: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    New ctrl vector for $mux cell $procmux$1140: { }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$827:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$833:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$839:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$845:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$145_EN[31:0]$164 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$807:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN[1:0]$204
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN[1:0]$204 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN[1:0]$204 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$201_EN[1:0]$204 [0]
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1129: { $techmap\tx_to_ble.$procmux$1083_CMP $techmap\tx_to_ble.$procmux$1079_CMP $auto$opt_reduce.cc:132:opt_mux$1238 }
  Optimizing cells in module \service.
Performed a total of 11 changes.

31.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoted 2 init specs to constant drivers.

31.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 126 unused wires.
<suppressed ~7 debug messages>

31.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.9. Rerunning OPT passes. (Maybe there is more to do..)

31.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

31.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\rx_from_ble.$procmux$1018: { $techmap\rx_from_ble.$procmux$1031_CMP $techmap\rx_from_ble.$procmux$1001_CMP $auto$opt_reduce.cc:132:opt_mux$1240 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1074: { $techmap\tx_to_ble.$procmux$1084_CMP $auto$opt_reduce.cc:132:opt_mux$1242 }
  Optimizing cells in module \service.
Performed a total of 2 changes.

31.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.16. Rerunning OPT passes. (Maybe there is more to do..)

31.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

31.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.23. Finished OPT passes. (There is nothing left to do.)

31.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/servant/servant_ram.v:43$166 (ram.mem).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/servant/service.v:173$81 ($eq).
Removed top 30 bits (of 32) from port B of cell service.$add$src/servant_1.2.1/servant/service.v:157$80 ($add).
Removed top 24 bits (of 32) from port B of cell service.$and$src/servant_1.2.1/servant/service.v:189$101 ($and).
Removed top 24 bits (of 32) from port Y of cell service.$and$src/servant_1.2.1/servant/service.v:189$101 ($and).
Removed top 24 bits (of 32) from port B of cell service.$or$src/servant_1.2.1/servant/service.v:189$102 ($or).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1214 ($dff).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1217 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1210 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1209 ($dff).
Removed cell service.$techmap\ram.$procmux$849 ($mux).
Removed cell service.$techmap\ram.$procmux$847 ($mux).
Removed cell service.$techmap\ram.$procmux$843 ($mux).
Removed cell service.$techmap\ram.$procmux$841 ($mux).
Removed cell service.$techmap\ram.$procmux$837 ($mux).
Removed cell service.$techmap\ram.$procmux$835 ($mux).
Removed cell service.$techmap\ram.$procmux$831 ($mux).
Removed cell service.$techmap\ram.$procmux$829 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1052 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1038 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\rx_from_ble.$procmux$1001_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$967_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$946_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$926_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/servant/uart_rx.v:109$132 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/servant/uart_rx.v:94$130 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\rx_from_ble.$eq$src/servant_1.2.1/servant/uart_rx.v:60$125 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1102 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1091 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1083_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:77$113 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:77$113 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/servant/uart_tx.v:75$112 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/servant/uart_tx.v:50$107 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/servant/servant_mux.v:58$187 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1196 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$811 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$809 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$225 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$219 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$219 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$619 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$613 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$443 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$443 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$636 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$237 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$230 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$356 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$348 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$429 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$423 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1214 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1210 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1209 ($dff).
Removed top 24 bits (of 32) from wire service.$and$src/servant_1.2.1/servant/service.v:189$101_Y.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_DATA[31:0]$159.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN[31:0]$156.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_DATA[31:0]$153.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN[31:0]$157.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_DATA[31:0]$160.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN[31:0]$161.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$142_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$143_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$144_EN.
Removed top 25 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133_Y.
Removed top 29 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$1038_Y.
Removed top 1 bits (of 2) from wire service.$techmap\rx_from_ble.$procmux$1052_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108_Y.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

31.13. Executing PEEPOPT pass (run peephole optimizers).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 33 unused wires.
<suppressed ~2 debug messages>

31.15. Executing SHARE pass (SAT-based resource sharing).

31.16. Executing TECHMAP pass (map to technology primitives).

31.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.16.2. Continuing TECHMAP pass.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~345 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 87 unused wires.
<suppressed ~1 debug messages>

31.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
  creating $macc model for $add$src/servant_1.2.1/servant/service.v:157$80 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$367 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$368 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$370 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$371 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$443 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$444 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$392 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$393 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$400 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$401 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$225 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$219 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:77$113 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$400 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$401.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$392 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$393.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$443 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$444.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$370 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$371.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$367 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$368.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$401.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$225.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$393.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$219.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$444.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$371.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$368.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:77$113.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133.
  creating $alu model for $macc $add$src/servant_1.2.1/servant/service.v:157$80.
  creating $alu model for $gt$src/servant_1.2.1/servant/service.v:179$82 ($gt): new $alu
  creating $alu model for $techmap\rx_from_ble.$lt$src/servant_1.2.1/servant/uart_rx.v:109$132 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/servant/servant_timer.v:30$177 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/servant/uart_tx.v:50$107 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/servant/uart_tx.v:50$107: $auto$alumacc.cc:474:replace_alu$1307
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/servant/servant_timer.v:30$177: $auto$alumacc.cc:474:replace_alu$1312
  creating $alu cell for $techmap\rx_from_ble.$lt$src/servant_1.2.1/servant/uart_rx.v:109$132: $auto$alumacc.cc:474:replace_alu$1325
  creating $alu cell for $gt$src/servant_1.2.1/servant/service.v:179$82: $auto$alumacc.cc:474:replace_alu$1330
  creating $alu cell for $add$src/servant_1.2.1/servant/service.v:157$80: $auto$alumacc.cc:474:replace_alu$1341
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:112$133: $auto$alumacc.cc:474:replace_alu$1344
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/servant/uart_rx.v:96$131: $auto$alumacc.cc:474:replace_alu$1347
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:77$113: $auto$alumacc.cc:474:replace_alu$1350
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$368: $auto$alumacc.cc:474:replace_alu$1353
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/servant/uart_tx.v:53$108: $auto$alumacc.cc:474:replace_alu$1356
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$371: $auto$alumacc.cc:474:replace_alu$1359
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176: $auto$alumacc.cc:474:replace_alu$1362
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$444: $auto$alumacc.cc:474:replace_alu$1365
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$419: $auto$alumacc.cc:474:replace_alu$1368
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$219: $auto$alumacc.cc:474:replace_alu$1371
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$393: $auto$alumacc.cc:474:replace_alu$1374
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$225: $auto$alumacc.cc:474:replace_alu$1377
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$401: $auto$alumacc.cc:474:replace_alu$1380
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693: $auto$alumacc.cc:474:replace_alu$1383
  created 19 $alu and 0 $macc cells.

31.20. Executing OPT pass (performing simple optimizations).

31.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~20 debug messages>

31.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

31.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1323: { $auto$rtlil.cc:1832:Not$1322 $auto$rtlil.cc:1835:ReduceAnd$1316 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1333: { $auto$alumacc.cc:490:replace_alu$1331 [0] $auto$alumacc.cc:490:replace_alu$1331 [1] $auto$alumacc.cc:490:replace_alu$1331 [2] $auto$alumacc.cc:490:replace_alu$1331 [3] $auto$alumacc.cc:490:replace_alu$1331 [4] $auto$alumacc.cc:490:replace_alu$1331 [5] $auto$alumacc.cc:490:replace_alu$1331 [6] $auto$alumacc.cc:490:replace_alu$1331 [7] $auto$alumacc.cc:490:replace_alu$1331 [8] $auto$alumacc.cc:490:replace_alu$1331 [9] $auto$alumacc.cc:490:replace_alu$1331 [10] $auto$alumacc.cc:490:replace_alu$1331 [11] $auto$alumacc.cc:490:replace_alu$1331 [12] $auto$alumacc.cc:490:replace_alu$1331 [13] $auto$alumacc.cc:490:replace_alu$1331 [14] $auto$alumacc.cc:490:replace_alu$1331 [15] $auto$alumacc.cc:490:replace_alu$1331 [16] $auto$alumacc.cc:490:replace_alu$1331 [17] $auto$alumacc.cc:490:replace_alu$1331 [18] $auto$alumacc.cc:490:replace_alu$1331 [19] $auto$alumacc.cc:490:replace_alu$1331 [20] $auto$alumacc.cc:490:replace_alu$1331 [21] $auto$alumacc.cc:490:replace_alu$1331 [22] $auto$alumacc.cc:490:replace_alu$1331 [23] $auto$alumacc.cc:490:replace_alu$1331 [24] $auto$alumacc.cc:490:replace_alu$1331 [25] $auto$alumacc.cc:490:replace_alu$1331 [26] $auto$alumacc.cc:490:replace_alu$1331 [27] $auto$alumacc.cc:490:replace_alu$1331 [28] $auto$alumacc.cc:490:replace_alu$1331 [29] $auto$alumacc.cc:490:replace_alu$1331 [30] $auto$alumacc.cc:490:replace_alu$1331 [31] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1315: { $auto$alumacc.cc:490:replace_alu$1313 [0] $auto$alumacc.cc:490:replace_alu$1313 [1] $auto$alumacc.cc:490:replace_alu$1313 [2] $auto$alumacc.cc:490:replace_alu$1313 [3] $auto$alumacc.cc:490:replace_alu$1313 [4] $auto$alumacc.cc:490:replace_alu$1313 [5] $auto$alumacc.cc:490:replace_alu$1313 [6] $auto$alumacc.cc:490:replace_alu$1313 [7] $auto$alumacc.cc:490:replace_alu$1313 [8] $auto$alumacc.cc:490:replace_alu$1313 [9] $auto$alumacc.cc:490:replace_alu$1313 [10] $auto$alumacc.cc:490:replace_alu$1313 [11] $auto$alumacc.cc:490:replace_alu$1313 [12] $auto$alumacc.cc:490:replace_alu$1313 [13] $auto$alumacc.cc:490:replace_alu$1313 [14] $auto$alumacc.cc:490:replace_alu$1313 [15] $auto$alumacc.cc:490:replace_alu$1313 [16] $auto$alumacc.cc:490:replace_alu$1313 [17] $auto$alumacc.cc:490:replace_alu$1313 [18] $auto$alumacc.cc:490:replace_alu$1313 [19] $auto$alumacc.cc:490:replace_alu$1313 [20] $auto$alumacc.cc:490:replace_alu$1313 [21] $auto$alumacc.cc:490:replace_alu$1313 [22] $auto$alumacc.cc:490:replace_alu$1313 [23] $auto$alumacc.cc:490:replace_alu$1313 [24] $auto$alumacc.cc:490:replace_alu$1313 [25] $auto$alumacc.cc:490:replace_alu$1313 [26] $auto$alumacc.cc:490:replace_alu$1313 [27] $auto$alumacc.cc:490:replace_alu$1313 [28] $auto$alumacc.cc:490:replace_alu$1313 [29] $auto$alumacc.cc:490:replace_alu$1313 [30] $auto$alumacc.cc:490:replace_alu$1313 [31] }
  Optimizing cells in module \service.
Performed a total of 3 changes.

31.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 8 unused cells and 15 unused wires.
<suppressed ~9 debug messages>

31.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.9. Rerunning OPT passes. (Maybe there is more to do..)

31.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

31.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.16. Finished OPT passes. (There is nothing left to do.)

31.21. Executing FSM pass (extract and optimize FSM).

31.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.rx_from_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

31.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

31.22. Executing OPT pass (performing simple optimizations).

31.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.22.5. Finished fast OPT passes.

31.23. Executing MEMORY pass.

31.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$167' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$168' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$169' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$170' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$212' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/servant/servant_ram.v:35$165' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$206' in module `\service': merged data $dff to cell.

31.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 14 unused cells and 16 unused wires.
<suppressed ~15 debug messages>

31.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \clock_gen.pll.o_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:31$167) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:32$168) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:33$169) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$170) has addr \adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

31.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/servant/servant_ram.v:43$166 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/servant/servant_ram.v:34$170 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/servant/servant_ram.v:35$165 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$212 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$206 ($memrd)

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clock_gen.pll.o_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

31.26. Executing TECHMAP pass (map to technology primitives).

31.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

31.26.2. Continuing TECHMAP pass.
Using template $paramod$6f7e242ae3bd5fab7a316ad39cde58aefd6da41a\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$6013e198994465b91babe033149966b809645609\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a62eed08c78bad2732ea067235cf9013eba5096e\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$f873354b587fdc336f04e4f654d45b5720948dcc\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

31.27. Executing ICE40_BRAMINIT pass.

31.28. Executing OPT pass (performing simple optimizations).

31.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~70 debug messages>

31.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

31.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 391 unused wires.
<suppressed ~2 debug messages>

31.28.5. Finished fast OPT passes.

31.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

31.30. Executing OPT pass (performing simple optimizations).

31.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

31.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1599\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [1] $auto$rtlil.cc:1906:Mux$1558 [2] $auto$rtlil.cc:1906:Mux$1558 [3] $auto$rtlil.cc:1906:Mux$1558 [4] $auto$rtlil.cc:1906:Mux$1558 [5] $auto$rtlil.cc:1906:Mux$1558 [6] $auto$rtlil.cc:1906:Mux$1558 [7] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [9] $auto$rtlil.cc:1906:Mux$1558 [10] $auto$rtlil.cc:1906:Mux$1558 [11] $auto$rtlil.cc:1906:Mux$1558 [12] $auto$rtlil.cc:1906:Mux$1558 [13] $auto$rtlil.cc:1906:Mux$1558 [14] $auto$rtlil.cc:1906:Mux$1558 [15] }
    New input vector for $reduce_or cell $techmap$techmap1598\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [1] $auto$rtlil.cc:1906:Mux$1467 [2] $auto$rtlil.cc:1906:Mux$1467 [3] $auto$rtlil.cc:1906:Mux$1467 [4] $auto$rtlil.cc:1906:Mux$1467 [5] $auto$rtlil.cc:1906:Mux$1467 [6] $auto$rtlil.cc:1906:Mux$1467 [7] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [9] $auto$rtlil.cc:1906:Mux$1467 [10] $auto$rtlil.cc:1906:Mux$1467 [11] $auto$rtlil.cc:1906:Mux$1467 [12] $auto$rtlil.cc:1906:Mux$1467 [13] $auto$rtlil.cc:1906:Mux$1467 [14] $auto$rtlil.cc:1906:Mux$1467 [15] }
    New input vector for $reduce_or cell $techmap$techmap1597\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [1] $auto$rtlil.cc:1906:Mux$1454 [2] $auto$rtlil.cc:1906:Mux$1454 [3] $auto$rtlil.cc:1906:Mux$1454 [4] $auto$rtlil.cc:1906:Mux$1454 [5] $auto$rtlil.cc:1906:Mux$1454 [6] $auto$rtlil.cc:1906:Mux$1454 [7] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [9] $auto$rtlil.cc:1906:Mux$1454 [10] $auto$rtlil.cc:1906:Mux$1454 [11] $auto$rtlil.cc:1906:Mux$1454 [12] $auto$rtlil.cc:1906:Mux$1454 [13] $auto$rtlil.cc:1906:Mux$1454 [14] $auto$rtlil.cc:1906:Mux$1454 [15] }
    New input vector for $reduce_or cell $techmap$techmap1596\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [1] $auto$rtlil.cc:1906:Mux$1545 [2] $auto$rtlil.cc:1906:Mux$1545 [3] $auto$rtlil.cc:1906:Mux$1545 [4] $auto$rtlil.cc:1906:Mux$1545 [5] $auto$rtlil.cc:1906:Mux$1545 [6] $auto$rtlil.cc:1906:Mux$1545 [7] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [9] $auto$rtlil.cc:1906:Mux$1545 [10] $auto$rtlil.cc:1906:Mux$1545 [11] $auto$rtlil.cc:1906:Mux$1545 [12] $auto$rtlil.cc:1906:Mux$1545 [13] $auto$rtlil.cc:1906:Mux$1545 [14] $auto$rtlil.cc:1906:Mux$1545 [15] }
    New input vector for $reduce_or cell $techmap$techmap1595\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [1] $auto$rtlil.cc:1906:Mux$1428 [2] $auto$rtlil.cc:1906:Mux$1428 [3] $auto$rtlil.cc:1906:Mux$1428 [4] $auto$rtlil.cc:1906:Mux$1428 [5] $auto$rtlil.cc:1906:Mux$1428 [6] $auto$rtlil.cc:1906:Mux$1428 [7] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [9] $auto$rtlil.cc:1906:Mux$1428 [10] $auto$rtlil.cc:1906:Mux$1428 [11] $auto$rtlil.cc:1906:Mux$1428 [12] $auto$rtlil.cc:1906:Mux$1428 [13] $auto$rtlil.cc:1906:Mux$1428 [14] $auto$rtlil.cc:1906:Mux$1428 [15] }
    New input vector for $reduce_or cell $techmap$techmap1594\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [1] $auto$rtlil.cc:1906:Mux$1571 [2] $auto$rtlil.cc:1906:Mux$1571 [3] $auto$rtlil.cc:1906:Mux$1571 [4] $auto$rtlil.cc:1906:Mux$1571 [5] $auto$rtlil.cc:1906:Mux$1571 [6] $auto$rtlil.cc:1906:Mux$1571 [7] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [9] $auto$rtlil.cc:1906:Mux$1571 [10] $auto$rtlil.cc:1906:Mux$1571 [11] $auto$rtlil.cc:1906:Mux$1571 [12] $auto$rtlil.cc:1906:Mux$1571 [13] $auto$rtlil.cc:1906:Mux$1571 [14] $auto$rtlil.cc:1906:Mux$1571 [15] }
    New input vector for $reduce_or cell $techmap$techmap1591\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [1] $auto$rtlil.cc:1906:Mux$1532 [2] $auto$rtlil.cc:1906:Mux$1532 [3] $auto$rtlil.cc:1906:Mux$1532 [4] $auto$rtlil.cc:1906:Mux$1532 [5] $auto$rtlil.cc:1906:Mux$1532 [6] $auto$rtlil.cc:1906:Mux$1532 [7] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [9] $auto$rtlil.cc:1906:Mux$1532 [10] $auto$rtlil.cc:1906:Mux$1532 [11] $auto$rtlil.cc:1906:Mux$1532 [12] $auto$rtlil.cc:1906:Mux$1532 [13] $auto$rtlil.cc:1906:Mux$1532 [14] $auto$rtlil.cc:1906:Mux$1532 [15] }
    New input vector for $reduce_or cell $techmap$techmap1590\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [1] $auto$rtlil.cc:1906:Mux$1506 [2] $auto$rtlil.cc:1906:Mux$1506 [3] $auto$rtlil.cc:1906:Mux$1506 [4] $auto$rtlil.cc:1906:Mux$1506 [5] $auto$rtlil.cc:1906:Mux$1506 [6] $auto$rtlil.cc:1906:Mux$1506 [7] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [9] $auto$rtlil.cc:1906:Mux$1506 [10] $auto$rtlil.cc:1906:Mux$1506 [11] $auto$rtlil.cc:1906:Mux$1506 [12] $auto$rtlil.cc:1906:Mux$1506 [13] $auto$rtlil.cc:1906:Mux$1506 [14] $auto$rtlil.cc:1906:Mux$1506 [15] }
    New input vector for $reduce_or cell $techmap$techmap1589\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [1] $auto$rtlil.cc:1906:Mux$1519 [2] $auto$rtlil.cc:1906:Mux$1519 [3] $auto$rtlil.cc:1906:Mux$1519 [4] $auto$rtlil.cc:1906:Mux$1519 [5] $auto$rtlil.cc:1906:Mux$1519 [6] $auto$rtlil.cc:1906:Mux$1519 [7] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [9] $auto$rtlil.cc:1906:Mux$1519 [10] $auto$rtlil.cc:1906:Mux$1519 [11] $auto$rtlil.cc:1906:Mux$1519 [12] $auto$rtlil.cc:1906:Mux$1519 [13] $auto$rtlil.cc:1906:Mux$1519 [14] $auto$rtlil.cc:1906:Mux$1519 [15] }
    New input vector for $reduce_or cell $techmap$techmap1588\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [1] $auto$rtlil.cc:1906:Mux$1480 [2] $auto$rtlil.cc:1906:Mux$1480 [3] $auto$rtlil.cc:1906:Mux$1480 [4] $auto$rtlil.cc:1906:Mux$1480 [5] $auto$rtlil.cc:1906:Mux$1480 [6] $auto$rtlil.cc:1906:Mux$1480 [7] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [9] $auto$rtlil.cc:1906:Mux$1480 [10] $auto$rtlil.cc:1906:Mux$1480 [11] $auto$rtlil.cc:1906:Mux$1480 [12] $auto$rtlil.cc:1906:Mux$1480 [13] $auto$rtlil.cc:1906:Mux$1480 [14] $auto$rtlil.cc:1906:Mux$1480 [15] }
    New input vector for $reduce_or cell $techmap$techmap1587\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1586: { $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [1] $auto$rtlil.cc:1906:Mux$1402 [2] $auto$rtlil.cc:1906:Mux$1402 [3] $auto$rtlil.cc:1906:Mux$1402 [4] $auto$rtlil.cc:1906:Mux$1402 [5] $auto$rtlil.cc:1906:Mux$1402 [6] $auto$rtlil.cc:1906:Mux$1402 [7] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [9] $auto$rtlil.cc:1906:Mux$1402 [10] $auto$rtlil.cc:1906:Mux$1402 [11] $auto$rtlil.cc:1906:Mux$1402 [12] $auto$rtlil.cc:1906:Mux$1402 [13] $auto$rtlil.cc:1906:Mux$1402 [14] $auto$rtlil.cc:1906:Mux$1402 [15] }
    New input vector for $reduce_or cell $techmap$techmap1584\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [1] $auto$rtlil.cc:1906:Mux$1415 [2] $auto$rtlil.cc:1906:Mux$1415 [3] $auto$rtlil.cc:1906:Mux$1415 [4] $auto$rtlil.cc:1906:Mux$1415 [5] $auto$rtlil.cc:1906:Mux$1415 [6] $auto$rtlil.cc:1906:Mux$1415 [7] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [9] $auto$rtlil.cc:1906:Mux$1415 [10] $auto$rtlil.cc:1906:Mux$1415 [11] $auto$rtlil.cc:1906:Mux$1415 [12] $auto$rtlil.cc:1906:Mux$1415 [13] $auto$rtlil.cc:1906:Mux$1415 [14] $auto$rtlil.cc:1906:Mux$1415 [15] }
    New input vector for $reduce_or cell $techmap$techmap1583\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [1] $auto$rtlil.cc:1906:Mux$1441 [2] $auto$rtlil.cc:1906:Mux$1441 [3] $auto$rtlil.cc:1906:Mux$1441 [4] $auto$rtlil.cc:1906:Mux$1441 [5] $auto$rtlil.cc:1906:Mux$1441 [6] $auto$rtlil.cc:1906:Mux$1441 [7] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [9] $auto$rtlil.cc:1906:Mux$1441 [10] $auto$rtlil.cc:1906:Mux$1441 [11] $auto$rtlil.cc:1906:Mux$1441 [12] $auto$rtlil.cc:1906:Mux$1441 [13] $auto$rtlil.cc:1906:Mux$1441 [14] $auto$rtlil.cc:1906:Mux$1441 [15] }
    New input vector for $reduce_or cell $techmap$techmap1580\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1579: { $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [1] $auto$rtlil.cc:1906:Mux$1493 [2] $auto$rtlil.cc:1906:Mux$1493 [3] $auto$rtlil.cc:1906:Mux$1493 [4] $auto$rtlil.cc:1906:Mux$1493 [5] $auto$rtlil.cc:1906:Mux$1493 [6] $auto$rtlil.cc:1906:Mux$1493 [7] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [9] $auto$rtlil.cc:1906:Mux$1493 [10] $auto$rtlil.cc:1906:Mux$1493 [11] $auto$rtlil.cc:1906:Mux$1493 [12] $auto$rtlil.cc:1906:Mux$1493 [13] $auto$rtlil.cc:1906:Mux$1493 [14] $auto$rtlil.cc:1906:Mux$1493 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1401:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1402
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1402 [15:9] $auto$rtlil.cc:1906:Mux$1402 [7:1] } = { $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [8] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1414:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1415
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1415 [15:9] $auto$rtlil.cc:1906:Mux$1415 [7:1] } = { $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [8] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1427:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1428
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1428 [15:9] $auto$rtlil.cc:1906:Mux$1428 [7:1] } = { $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [8] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1440:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1441
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1441 [15:9] $auto$rtlil.cc:1906:Mux$1441 [7:1] } = { $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [8] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1453:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1454
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1454 [15:9] $auto$rtlil.cc:1906:Mux$1454 [7:1] } = { $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [8] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1466:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1467
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1467 [15:9] $auto$rtlil.cc:1906:Mux$1467 [7:1] } = { $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [8] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1479:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1480
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1480 [15:9] $auto$rtlil.cc:1906:Mux$1480 [7:1] } = { $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [8] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1492:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1493
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1493 [15:9] $auto$rtlil.cc:1906:Mux$1493 [7:1] } = { $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [8] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1505:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1506
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1506 [15:9] $auto$rtlil.cc:1906:Mux$1506 [7:1] } = { $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [8] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1518:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1519
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1519 [15:9] $auto$rtlil.cc:1906:Mux$1519 [7:1] } = { $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [8] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1531:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1532
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1532 [15:9] $auto$rtlil.cc:1906:Mux$1532 [7:1] } = { $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [8] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1544:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1545
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1545 [15:9] $auto$rtlil.cc:1906:Mux$1545 [7:1] } = { $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [8] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1557:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1558
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1558 [15:9] $auto$rtlil.cc:1906:Mux$1558 [7:1] } = { $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [8] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1570:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1571
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1571 [15:9] $auto$rtlil.cc:1906:Mux$1571 [7:1] } = { $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [8] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [0] }
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1033:
      Old ports: A=2'11, B=2'00, Y=$techmap\rx_from_ble.$procmux$1033_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1033_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1033_Y [1] = $techmap\rx_from_ble.$procmux$1033_Y [0]
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1041:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:455:run$1255 [0] }, Y=$techmap\rx_from_ble.$procmux$1041_Y
      New ports: A=1'0, B=$auto$wreduce.cc:455:run$1255 [0], Y=$techmap\rx_from_ble.$procmux$1041_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1041_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1046:
      Old ports: A=2'10, B=2'00, Y=$techmap\rx_from_ble.$procmux$1046_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1046_Y [1]
      New connections: $techmap\rx_from_ble.$procmux$1046_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1086:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1086_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1086_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1086_Y [1] = $techmap\tx_to_ble.$procmux$1086_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1094:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_ble.$procmux$1091_Y [0] }, Y=$techmap\tx_to_ble.$procmux$1094_Y
      New ports: A=1'0, B=$techmap\tx_to_ble.$procmux$1091_Y [0], Y=$techmap\tx_to_ble.$procmux$1094_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1094_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1599\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1558 [0] $auto$rtlil.cc:1906:Mux$1558 [8] }
    New input vector for $reduce_or cell $techmap$techmap1598\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1467 [0] $auto$rtlil.cc:1906:Mux$1467 [8] }
    New input vector for $reduce_or cell $techmap$techmap1597\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1454 [0] $auto$rtlil.cc:1906:Mux$1454 [8] }
    New input vector for $reduce_or cell $techmap$techmap1596\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1545 [0] $auto$rtlil.cc:1906:Mux$1545 [8] }
    New input vector for $reduce_or cell $techmap$techmap1595\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1428 [0] $auto$rtlil.cc:1906:Mux$1428 [8] }
    New input vector for $reduce_or cell $techmap$techmap1594\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1571 [0] $auto$rtlil.cc:1906:Mux$1571 [8] }
    New input vector for $reduce_or cell $techmap$techmap1591\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1532 [0] $auto$rtlil.cc:1906:Mux$1532 [8] }
    New input vector for $reduce_or cell $techmap$techmap1590\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1506 [0] $auto$rtlil.cc:1906:Mux$1506 [8] }
    New input vector for $reduce_or cell $techmap$techmap1589\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1519 [0] $auto$rtlil.cc:1906:Mux$1519 [8] }
    New input vector for $reduce_or cell $techmap$techmap1588\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1480 [0] $auto$rtlil.cc:1906:Mux$1480 [8] }
    New input vector for $reduce_or cell $techmap$techmap1587\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1586: { $auto$rtlil.cc:1906:Mux$1402 [0] $auto$rtlil.cc:1906:Mux$1402 [8] }
    New input vector for $reduce_or cell $techmap$techmap1584\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1415 [0] $auto$rtlil.cc:1906:Mux$1415 [8] }
    New input vector for $reduce_or cell $techmap$techmap1583\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1582: { $auto$rtlil.cc:1906:Mux$1441 [0] $auto$rtlil.cc:1906:Mux$1441 [8] }
    New input vector for $reduce_or cell $techmap$techmap1580\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1579: { $auto$rtlil.cc:1906:Mux$1493 [0] $auto$rtlil.cc:1906:Mux$1493 [8] }
  Optimizing cells in module \service.
Performed a total of 47 changes.

31.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

31.30.9. Rerunning OPT passes. (Maybe there is more to do..)

31.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~102 debug messages>

31.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

31.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.16. Finished OPT passes. (There is nothing left to do.)

31.31. Executing TECHMAP pass (map to technology primitives).

31.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

31.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~1515 debug messages>

31.32. Executing ICE40_OPT pass (performing simple optimizations).

31.32.1. Running ICE40 specific optimizations.

31.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~609 debug messages>

31.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

31.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 214 unused cells and 827 unused wires.
<suppressed ~219 debug messages>

31.32.6. Rerunning OPT passes. (Removed registers in this run.)

31.32.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1307.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1325.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1341.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1344.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1347.slice[0].carry: CO=\rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1350.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1356.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1362.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1368.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1371.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1377.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1341.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1344.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1347.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1350.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1356.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1362.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1368.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1371.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1377.slice[1].adder back to logic.

31.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~116 debug messages>

31.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

31.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

31.32.12. Rerunning OPT passes. (Removed registers in this run.)

31.32.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1341.slice[1].carry: CO=\my_adr [1]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1341.slice[2].adder back to logic.

31.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~13 debug messages>

31.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

31.32.18. Rerunning OPT passes. (Removed registers in this run.)

31.32.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[2].carry: CO=1'1

31.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.24. Rerunning OPT passes. (Removed registers in this run.)

31.32.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[3].carry: CO=1'1

31.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.30. Rerunning OPT passes. (Removed registers in this run.)

31.32.31. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[4].carry: CO=1'1

31.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.36. Rerunning OPT passes. (Removed registers in this run.)

31.32.37. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[5].carry: CO=1'1

31.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.42. Rerunning OPT passes. (Removed registers in this run.)

31.32.43. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[6].carry: CO=1'1

31.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.48. Rerunning OPT passes. (Removed registers in this run.)

31.32.49. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[7].carry: CO=1'1

31.32.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.52. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.54. Rerunning OPT passes. (Removed registers in this run.)

31.32.55. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[8].carry: CO=1'1

31.32.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.58. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.60. Rerunning OPT passes. (Removed registers in this run.)

31.32.61. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[9].carry: CO=1'1

31.32.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.64. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.66. Rerunning OPT passes. (Removed registers in this run.)

31.32.67. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[10].carry: CO=1'1

31.32.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.70. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.72. Rerunning OPT passes. (Removed registers in this run.)

31.32.73. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[11].carry: CO=1'1

31.32.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.76. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.78. Rerunning OPT passes. (Removed registers in this run.)

31.32.79. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[12].carry: CO=1'1

31.32.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.82. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.84. Rerunning OPT passes. (Removed registers in this run.)

31.32.85. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[13].carry: CO=1'1

31.32.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.88. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.90. Rerunning OPT passes. (Removed registers in this run.)

31.32.91. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[14].carry: CO=1'1

31.32.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.94. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.96. Rerunning OPT passes. (Removed registers in this run.)

31.32.97. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[15].carry: CO=1'1

31.32.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.100. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.102. Rerunning OPT passes. (Removed registers in this run.)

31.32.103. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1330.slice[16].carry: CO=\my_adr [16]

31.32.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.106. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.108. Rerunning OPT passes. (Removed registers in this run.)

31.32.109. Running ICE40 specific optimizations.

31.32.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.112. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.114. Finished OPT passes. (There is nothing left to do.)

31.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

31.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2039 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2040 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2041 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2042 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2043 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2044 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2045 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2046 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2047 to $_DFFE_PP_ for $0\my_adr[31:0] [0] -> \my_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2048 to $_DFFE_PP_ for $0\my_adr[31:0] [1] -> \my_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2049 to $_DFFE_PP_ for $0\my_adr[31:0] [2] -> \my_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2050 to $_DFFE_PP_ for $0\my_adr[31:0] [3] -> \my_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2051 to $_DFFE_PP_ for $0\my_adr[31:0] [4] -> \my_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2052 to $_DFFE_PP_ for $0\my_adr[31:0] [5] -> \my_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2053 to $_DFFE_PP_ for $0\my_adr[31:0] [6] -> \my_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2054 to $_DFFE_PP_ for $0\my_adr[31:0] [7] -> \my_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2055 to $_DFFE_PP_ for $0\my_adr[31:0] [8] -> \my_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2056 to $_DFFE_PP_ for $0\my_adr[31:0] [9] -> \my_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2057 to $_DFFE_PP_ for $0\my_adr[31:0] [10] -> \my_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2058 to $_DFFE_PP_ for $0\my_adr[31:0] [11] -> \my_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2059 to $_DFFE_PP_ for $0\my_adr[31:0] [12] -> \my_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2060 to $_DFFE_PP_ for $0\my_adr[31:0] [13] -> \my_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2061 to $_DFFE_PP_ for $0\my_adr[31:0] [14] -> \my_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2062 to $_DFFE_PP_ for $0\my_adr[31:0] [15] -> \my_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2063 to $_DFFE_PP_ for $0\my_adr[31:0] [16] -> \my_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2064 to $_DFFE_PP_ for $0\my_adr[31:0] [17] -> \my_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $0\my_adr[31:0] [18] -> \my_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $0\my_adr[31:0] [19] -> \my_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $0\my_adr[31:0] [20] -> \my_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $0\my_adr[31:0] [21] -> \my_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $0\my_adr[31:0] [22] -> \my_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $0\my_adr[31:0] [23] -> \my_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $0\my_adr[31:0] [24] -> \my_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $0\my_adr[31:0] [25] -> \my_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $0\my_adr[31:0] [26] -> \my_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2074 to $_DFFE_PP_ for $0\my_adr[31:0] [27] -> \my_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2075 to $_DFFE_PP_ for $0\my_adr[31:0] [28] -> \my_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $0\my_adr[31:0] [29] -> \my_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $0\my_adr[31:0] [30] -> \my_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $0\my_adr[31:0] [31] -> \my_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2179 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$993.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2180 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$971.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2181 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$950.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2182 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$930.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2183 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$911.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2184 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$893.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2185 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$876.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2186 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$860.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.rx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2187 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [0] -> \rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2188 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [1] -> \rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2189 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [2] -> \rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2190 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [3] -> \rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2191 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [4] -> \rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2192 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [5] -> \rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2193 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1018.$ternary$/usr/bin/../share/yosys/techmap.v:445$2254_Y [6] -> \rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2196 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1058.$ternary$/usr/bin/../share/yosys/techmap.v:445$2214_Y -> \rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2197 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1068.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [0] -> \rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2198 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1068.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [1] -> \rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2199 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1068.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [2] -> \rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2354 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2355 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2356 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2357 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2358 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2359 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2360 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2361 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1126.$ternary$/usr/bin/../share/yosys/techmap.v:445$2423_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2363 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2371 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1118.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2372 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1118.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2373 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1118.$ternary$/usr/bin/../share/yosys/techmap.v:445$2201_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2495 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2496 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2497 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2498 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2499 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2500 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2501 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2502 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2503 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2504 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2505 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2506 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2507 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2508 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2509 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2510 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2511 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2512 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2513 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2514 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2515 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2516 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2517 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2518 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2519 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2520 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2521 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2522 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2523 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2524 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2525 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2526 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2528 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2695 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2813 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2849 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2951 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2952 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2953 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2954 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2955 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2956 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2957 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2958 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2959 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2960 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2961 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2962 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3162 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3164 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3165 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3166 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3167 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3168 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3169 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3170 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3171 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3172 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3173 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3174 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3175 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3176 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3177 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3178 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3179 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3180 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3181 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3182 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3183 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3184 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3185 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3186 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3187 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3188 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3189 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3190 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3191 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3192 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3193 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3240 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3281 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3285 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3286 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3287 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3403 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3404 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3405 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3406 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3407 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3408 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3411 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3412 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3413 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3414 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3415 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3416 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3417 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3418 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3419 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3420 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3421 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3422 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3423 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3424 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3425 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3426 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3427 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3428 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3429 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3430 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3431 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3432 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3526 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3527 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3528 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3529 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3530 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3531 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3532 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3533 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3534 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3626 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3627 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3628 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3629 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3630 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3631 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3632 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3633 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3634 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3635 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3636 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3637 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3638 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3639 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3640 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3641 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3642 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3643 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3644 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3645 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3646 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3647 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3648 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3649 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3650 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3651 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3652 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3653 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3654 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3655 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3656 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3657 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3859 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3860 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3861 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3862 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3863 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3864 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3865 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3866 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3867 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3868 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3869 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3870 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3871 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3872 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3873 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3874 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3875 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3876 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3877 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3878 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3879 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3880 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3881 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3882 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3883 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3884 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3885 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3886 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3887 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3888 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3889 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3890 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3951 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.

31.35. Executing TECHMAP pass (map to technology primitives).

31.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

31.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~345 debug messages>

31.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~513 debug messages>

31.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE): \my_adr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFFE): \my_adr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFFE): \my_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFFE): \my_adr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFFE): \my_adr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFFE): \my_adr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFFE): \my_adr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2054 (SB_DFFE): \my_adr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2056 (SB_DFFE): \my_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2057 (SB_DFFE): \my_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2058 (SB_DFFE): \my_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2059 (SB_DFFE): \my_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2060 (SB_DFFE): \my_adr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2061 (SB_DFFE): \my_adr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2062 (SB_DFFE): \my_adr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2063 (SB_DFFE): \my_adr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2064 (SB_DFFE): \my_adr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE): \my_adr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE): \my_adr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE): \my_adr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE): \my_adr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2069 (SB_DFFE): \my_adr [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2070 (SB_DFFE): \my_adr [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE): \my_adr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE): \my_adr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE): \my_adr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE): \my_adr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE): \my_adr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE): \my_adr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE): \my_adr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE): \my_adr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFF): \recieve = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2055 (SB_DFFE): \my_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2181 (SB_DFFE): \rx_from_ble.rx_byte [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2180 (SB_DFFE): \rx_from_ble.rx_byte [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2178 (SB_DFF): \rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2177 (SB_DFF): \rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2182 (SB_DFFE): \rx_from_ble.rx_byte [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2183 (SB_DFFE): \rx_from_ble.rx_byte [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2184 (SB_DFFE): \rx_from_ble.rx_byte [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2185 (SB_DFFE): \rx_from_ble.rx_byte [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2186 (SB_DFFE): \rx_from_ble.rx_byte [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2187 (SB_DFFE): \rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2188 (SB_DFFE): \rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2189 (SB_DFFE): \rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2190 (SB_DFFE): \rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2191 (SB_DFFE): \rx_from_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2192 (SB_DFFE): \rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2193 (SB_DFFE): \rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2196 (SB_DFFE): \rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF): \rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2179 (SB_DFFE): \rx_from_ble.rx_byte [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2198 (SB_DFFE): \rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2194 (SB_DFF): \rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2199 (SB_DFFE): \rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2360 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2356 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2357 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2358 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2359 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2361 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2197 (SB_DFFE): \rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2371 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2354 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2372 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2373 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2369 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2374 (SB_DFF): \tx_to_ble.o_data = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2355 (SB_DFFE): \tx_to_ble.temp_data [1] = 1

31.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$2004 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [0], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2005 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [1], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2006 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$5576 [1], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2007 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [3], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2008 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [4], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2009 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [5], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2010 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [6], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2011 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [7], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2054 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2013 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [9], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2056 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2014 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [10], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2057 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2015 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [11], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2058 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2016 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [12], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2059 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2017 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [13], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2060 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2018 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [14], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2061 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2019 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [15], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2062 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2020 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [16], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2063 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2021 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [17], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2064 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2022 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [18], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2023 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [19], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2024 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [20], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2025 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [21], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2028 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [24], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2029 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [25], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2030 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [26], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2031 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [27], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2032 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [28], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2033 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [29], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2034 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [30], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2035 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [31], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2081 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/servant/servant_ram.v:28$151_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2012 (A=1'0, B=$add$src/servant_1.2.1/servant/service.v:157$80_Y [8], S=$auto$rtlil.cc:1863:Or$1338) into $auto$simplemap.cc:420:simplemap_dff$2055 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5164 (A=1'0, B=$techmap$techmap\rx_from_ble.$procmux$1035.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2234_Y, S=$auto$simplemap.cc:127:simplemap_reduce$5068) into $auto$simplemap.cc:420:simplemap_dff$2195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2468 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2362 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2469 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2363 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2470 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2364 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2471 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2365 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2472 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2366 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2473 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2367 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2474 (A=1'0, B=$techmap\tx_to_ble.$procmux$1072_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2368 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4297 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1088.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2234_Y, S=$auto$opt_reduce.cc:132:opt_mux$1242) into $auto$simplemap.cc:420:simplemap_dff$2370 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2561 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2565 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2562 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2563 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2564 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2566 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2567 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2568 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2569 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2570 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2571 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2572 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2573 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2574 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2575 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2576 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2577 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2578 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2579 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2514 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2580 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2581 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2582 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2583 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2584 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2585 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2520 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2586 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2521 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2587 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2588 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2589 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2590 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2591 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2624 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2625 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$5500 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2626 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2627 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2628 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2629 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2630 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2631 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2633 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2560 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2634 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2635 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2636 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2637 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2638 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2643 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2642 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2639 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2646 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2644 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2645 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2640 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2647 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2641 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2649 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2650 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2702 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/servant/servant_mux.v:44$184_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2652 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2653 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2654 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2655 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2632 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2651 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2814 (A=$techmap\servant.cpu.rf_ram_if.$procmux$803_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2806 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2815 (A=$techmap\servant.cpu.rf_ram_if.$procmux$803_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2807 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2824 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2816 (A=$techmap\servant.cpu.rf_ram_if.$procmux$803_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2817 (A=$techmap\servant.cpu.rf_ram_if.$procmux$803_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2818 (A=$techmap\servant.cpu.rf_ram_if.$procmux$803_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$2810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2827 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$2812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2825 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2648 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/servant/servant_timer.v:29$176_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3298 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$698_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3276 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3300 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3301 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3279 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3296 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3283 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3297 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3284 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3294 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$692_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3290 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$688_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3293 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$691_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3273 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3295 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$693_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3288 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$689_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3535 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$255_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3408 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3302 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$708_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3539 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3532 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3694 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3627 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3695 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3628 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3696 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3629 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3697 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3630 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3698 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3631 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3699 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3632 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3700 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3633 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3701 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3702 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3703 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3704 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3637 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3705 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3638 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3706 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3639 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3707 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3640 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3708 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3641 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3709 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3642 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3710 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3643 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3711 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3644 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3712 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3645 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3713 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3646 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3714 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3647 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3715 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3648 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3716 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3649 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3717 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3650 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3718 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3651 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3719 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3652 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3720 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3653 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3721 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3654 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3722 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3655 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3723 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3656 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3724 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3657 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3693 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3626 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3299 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3277 (SB_DFF).

31.40. Executing ICE40_OPT pass (performing simple optimizations).

31.40.1. Running ICE40 specific optimizations.

31.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~208 debug messages>

31.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~873 debug messages>
Removed a total of 291 cells.

31.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 160 unused cells and 2101 unused wires.
<suppressed ~162 debug messages>

31.40.6. Rerunning OPT passes. (Removed registers in this run.)

31.40.7. Running ICE40 specific optimizations.

31.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.40.12. Finished OPT passes. (There is nothing left to do.)

31.41. Executing TECHMAP pass (map to technology primitives).

31.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.41.2. Continuing TECHMAP pass.
No more expansions possible.

31.42. Executing ABC pass (technology mapping using ABC).

31.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
Extracted 1748 gates and 2342 wires to a netlist network with 592 inputs and 345 outputs.

31.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     627.
ABC: Participating nodes from both networks       =    1350.
ABC: Participating nodes from the first network   =     629. (  79.92 % of nodes)
ABC: Participating nodes from the second network  =     721. (  91.61 % of nodes)
ABC: Node pairs (any polarity)                    =     629. (  79.92 % of names can be moved)
ABC: Node pairs (same polarity)                   =     514. (  65.31 % of names can be moved)
ABC: Total runtime =     0.03 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

31.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1570
ABC RESULTS:        internal signals:     1405
ABC RESULTS:           input signals:      592
ABC RESULTS:          output signals:      345
Removing temp directory.
Removed 0 unused cells and 1432 unused wires.

31.43. Executing TECHMAP pass (map to technology primitives).

31.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
No more expansions possible.
<suppressed ~2071 debug messages>
Removed 0 unused cells and 1568 unused wires.

31.44. Executing HIERARCHY pass (managing design hierarchy).

31.44.1. Analyzing design hierarchy..
Top module:  \service

31.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

31.45. Printing statistics.

=== service ===

   Number of wires:               1411
   Number of wire bits:           4024
   Number of public wires:         428
   Number of public wire bits:    2795
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1380
     SB_CARRY                      142
     SB_DFF                         29
     SB_DFFE                       157
     SB_DFFESR                     101
     SB_DFFSR                       57
     SB_DFFSS                        1
     SB_LUT4                       877
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

31.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32. Executing JSON backend.

Warnings: 5 unique messages, 14 total
End of script. Logfile hash: a3f6f7cb11
CPU: user 3.29s system 0.03s, MEM: 82.98 MB total, 64.97 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 27% 39x opt_clean (0 sec), 20% 39x opt_expr (0 sec), ...
