
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `tcl edalize_yosys_template.tcl' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `abc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `determine_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffe' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dff2dffs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffsr2dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_ffssr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_unlut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_rmdff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sf2_iobs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_bufreg2.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_bufreg2.v' to AST representation.
Storing AST representation for module `$abstract\serv_bufreg2'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_alu.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_alu.v' to AST representation.
Storing AST representation for module `$abstract\serv_alu'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_csr.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_csr.v' to AST representation.
Storing AST representation for module `$abstract\serv_csr'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_ctrl.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_ctrl.v' to AST representation.
Storing AST representation for module `$abstract\serv_ctrl'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_decode.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_decode.v' to AST representation.
Storing AST representation for module `$abstract\serv_decode'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_immdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_immdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_immdec'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_mem_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_mem_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_mem_if'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_if'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram_if.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram_if.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram_if'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_ram.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_ram.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_ram'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_state.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_state.v' to AST representation.
Storing AST representation for module `$abstract\serv_state'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_top'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_rf_top.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_rf_top.v' to AST representation.
Storing AST representation for module `$abstract\serv_rf_top'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_aligner.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_aligner.v' to AST representation.
Storing AST representation for module `$abstract\serv_aligner'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: src/serv_1.2.1/rtl/serv_compdec.v
Parsing Verilog input from `src/serv_1.2.1/rtl/serv_compdec.v' to AST representation.
Storing AST representation for module `$abstract\serv_compdec'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_clock_gen.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_clock_gen.v' to AST representation.
Storing AST representation for module `$abstract\servant_clock_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_timer.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_timer.v' to AST representation.
Storing AST representation for module `$abstract\servant_timer'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_gpio.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_gpio.v' to AST representation.
Storing AST representation for module `$abstract\servant_gpio'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_arbiter.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_arbiter.v' to AST representation.
Storing AST representation for module `$abstract\servant_arbiter'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_mux.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_mux.v' to AST representation.
Storing AST representation for module `$abstract\servant_mux'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_tx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_tx.v' to AST representation.
Storing AST representation for module `$abstract\uart_tx'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: src/servant_1.2.1/service/uart_rx.v
Parsing Verilog input from `src/servant_1.2.1/service/uart_rx.v' to AST representation.
Storing AST representation for module `$abstract\uart_rx'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant_ram.v
Parsing Verilog input from `src/servant_1.2.1/service/servant_ram.v' to AST representation.
Storing AST representation for module `$abstract\servant_ram'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: src/servant_1.2.1/service/servant.v
Parsing Verilog input from `src/servant_1.2.1/service/servant.v' to AST representation.
Storing AST representation for module `$abstract\servant'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: src/servant_1.2.1/service/ice40_pll.v
Parsing Verilog input from `src/servant_1.2.1/service/ice40_pll.v' to AST representation.
Storing AST representation for module `$abstract\ice40_pll'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: src/servant_1.2.1/service/service.v
Parsing Verilog input from `src/servant_1.2.1/service/service.v' to AST representation.
Storing AST representation for module `$abstract\service'.
Successfully finished Verilog frontend.

28. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memfile
Generating RTLIL representation for module `$paramod$f1f69d35145dc335c26e91ab6cce31100837bffd\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:163.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:175.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:181.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:182.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:185.

29. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod\service\memsize=7168'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:163.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:175.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:181.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:182.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:185.

30. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:163.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:175.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:181.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:182.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:185.

31. Executing SYNTH_ICE40 pass.

31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

31.2. Executing HIERARCHY pass (managing design hierarchy).

31.3. Executing AST frontend in derive mode using pre-parsed AST for module `\service'.
Generating RTLIL representation for module `\service'.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:149.
Warning: wire '\pc_active' is assigned in a block at src/servant_1.2.1/service/service.v:163.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:169.
Warning: wire '\data_to_ble' is assigned in a block at src/servant_1.2.1/service/service.v:174.
Warning: wire '\tx_active' is assigned in a block at src/servant_1.2.1/service/service.v:175.
Warning: wire '\adr' is assigned in a block at src/servant_1.2.1/service/service.v:181.
Warning: wire '\cyc' is assigned in a block at src/servant_1.2.1/service/service.v:182.
Warning: wire '\we' is assigned in a block at src/servant_1.2.1/service/service.v:183.
Warning: wire '\sel' is assigned in a block at src/servant_1.2.1/service/service.v:184.
Warning: wire '\dat' is assigned in a block at src/servant_1.2.1/service/service.v:185.

31.3.1. Analyzing design hierarchy..
Top module:  \service

31.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_tx'.
Generating RTLIL representation for module `\uart_tx'.
src/servant_1.2.1/service/uart_tx.v:108: Warning: Identifier `\done' is implicitly declared.

31.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_rx'.
Generating RTLIL representation for module `\uart_rx'.

31.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_ram'.
Parameter \depth = 7168
Parameter \RESET_STRATEGY = 1296649801
Parameter \memfile
Generating RTLIL representation for module `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram'.
Preloading $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram from /home/paul/Bachelor_Project/fusesoc_libraries/serv/sw/simple_BLE.hex

31.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\servant'.
Parameter \memfile = 544'0010111101101000011011110110110101100101001011110111000001100001011101010110110000101111010000100110000101100011011010000110010101101100011011110111001001011111010100000111001001101111011010100110010101100011011101000010111101100110011101010111001101100101011100110110111101100011010111110110110001101001011000100111001001100001011100100110100101100101011100110010111101110011011001010111001001110110001011110111001101110111001011110111001101101001011011010111000001101100011001010101111101000010010011000100010100101110011010000110010101111000
Parameter \memsize = 7168
Generating RTLIL representation for module `$paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant'.

31.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_clock_gen'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen'.

31.3.7. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen

31.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_timer'.
Parameter \WIDTH = 32
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801'.
Note: Assuming pure combinatorial block at src/servant_1.2.1/service/servant_timer.v:21 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

31.3.9. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_top'.
Parameter \RESET_PC = 0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top'.

31.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_gpio'.
Generating RTLIL representation for module `\servant_gpio'.

31.3.11. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_mux'.
Parameter 1 (\sim) = 0
Generating RTLIL representation for module `$paramod\servant_mux\sim=0'.

31.3.12. Executing AST frontend in derive mode using pre-parsed AST for module `\servant_arbiter'.
Generating RTLIL representation for module `\servant_arbiter'.

31.3.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40_pll'.
Parameter \PLL = 80'01001001010000110100010100110100001100000101111101000011010011110101001001000101
Generating RTLIL representation for module `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll'.

31.3.14. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.15. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_top'.
Parameter \WITH_CSR = 1
Parameter \PRE_REGISTER = 1
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \MDU = 1'0
Parameter \COMPRESSED = 1'0
Parameter \ALIGN = 1'0
Generating RTLIL representation for module `$paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top'.

31.3.16. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram'.
Parameter \width = 2
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram\width=2\csr_regs=4'.

31.3.17. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_ram_if'.
Parameter \width = 2
Parameter \reset_strategy = 1296649801
Parameter \csr_regs = 4
Generating RTLIL representation for module `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4'.

31.3.18. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.19. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_csr'.
Parameter \RESET_STRATEGY = 1296649801
Generating RTLIL representation for module `$paramod\serv_csr\RESET_STRATEGY=1296649801'.

31.3.20. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_mem_if'.
Parameter \WITH_CSR = 1'1
Generating RTLIL representation for module `$paramod\serv_mem_if\WITH_CSR=1'1'.

31.3.21. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_rf_if'.
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_rf_if\WITH_CSR=1'.

31.3.22. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_alu'.
Generating RTLIL representation for module `\serv_alu'.

31.3.23. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_ctrl'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \RESET_PC = 0
Parameter \WITH_CSR = 1
Generating RTLIL representation for module `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1'.

31.3.24. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg2'.
Generating RTLIL representation for module `\serv_bufreg2'.

31.3.25. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_bufreg'.
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_bufreg\MDU=1'0'.

31.3.26. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_immdec'.
Generating RTLIL representation for module `\serv_immdec'.

31.3.27. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_decode'.
Parameter \PRE_REGISTER = 1
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0'.

31.3.28. Executing AST frontend in derive mode using pre-parsed AST for module `\serv_state'.
Parameter \RESET_STRATEGY = 1296649801
Parameter \WITH_CSR = 1'1
Parameter \ALIGN = 1'0
Parameter \MDU = 1'0
Generating RTLIL representation for module `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0'.

31.3.29. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll

31.3.30. Analyzing design hierarchy..
Top module:  \service
Used module:     \uart_tx
Used module:     \uart_rx
Used module:     $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram
Used module:     $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant
Used module:         $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801
Used module:         $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top
Used module:             $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top
Used module:                 $paramod\serv_csr\RESET_STRATEGY=1296649801
Used module:                 $paramod\serv_mem_if\WITH_CSR=1'1
Used module:                 $paramod\serv_rf_if\WITH_CSR=1
Used module:                 \serv_alu
Used module:                 $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1
Used module:                 \serv_bufreg2
Used module:                 $paramod\serv_bufreg\MDU=1'0
Used module:                 \serv_immdec
Used module:                 $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0
Used module:                 $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0
Used module:             $paramod\serv_rf_ram\width=2\csr_regs=4
Used module:             $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4
Used module:         \servant_gpio
Used module:         $paramod\servant_mux\sim=0
Used module:         \servant_arbiter
Used module:     $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen
Used module:         $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll
Removing unused module `$abstract\service'.
Removing unused module `$abstract\ice40_pll'.
Removing unused module `$abstract\servant'.
Removing unused module `$abstract\servant_ram'.
Removing unused module `$abstract\uart_rx'.
Removing unused module `$abstract\uart_tx'.
Removing unused module `$abstract\servant_mux'.
Removing unused module `$abstract\servant_arbiter'.
Removing unused module `$abstract\servant_gpio'.
Removing unused module `$abstract\servant_timer'.
Removing unused module `$abstract\servant_clock_gen'.
Removing unused module `$abstract\serv_compdec'.
Removing unused module `$abstract\serv_aligner'.
Removing unused module `$abstract\serv_rf_top'.
Removing unused module `$abstract\serv_top'.
Removing unused module `$abstract\serv_state'.
Removing unused module `$abstract\serv_rf_ram'.
Removing unused module `$abstract\serv_rf_ram_if'.
Removing unused module `$abstract\serv_rf_if'.
Removing unused module `$abstract\serv_mem_if'.
Removing unused module `$abstract\serv_immdec'.
Removing unused module `$abstract\serv_decode'.
Removing unused module `$abstract\serv_ctrl'.
Removing unused module `$abstract\serv_csr'.
Removing unused module `$abstract\serv_alu'.
Removing unused module `$abstract\serv_bufreg2'.
Removing unused module `$abstract\serv_bufreg'.
Removed 27 unused modules.

31.4. Executing PROC pass (convert processes to netlists).

31.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$751'.
Found and cleaned up 1 empty switch in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$457'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:69$457'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
Found and cleaned up 1 empty switch in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:63$215'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:63$215'.
Cleaned up 7 empty switches.

31.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_timer.v:26$218 in module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Marked 1 switch rules as full_case in process $proc$src/servant_1.2.1/service/servant_ram.v:48$192 in module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_rx.v:41$167 in module uart_rx.
Marked 8 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_rx.v:41$167 in module uart_rx.
Removed 1 dead cases from process $proc$src/servant_1.2.1/service/uart_tx.v:26$149 in module uart_tx.
Marked 6 switch rules as full_case in process $proc$src/servant_1.2.1/service/uart_tx.v:26$149 in module uart_tx.
Removed a total of 2 dead cases.

31.4.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$185'.
  Set init value: \state = 2'00
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$184'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$183'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$182'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$181'.
  Set init value: \rx_byte = 8'00000000
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$180'.
  Set init value: \temp_active = 1'0
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$179'.
  Set init value: \rx_bit = 1'1
Found init rule in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$178'.
  Set init value: \r_Rx_temp = 1'1
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$165'.
  Set init value: \data_index = 3'000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$164'.
  Set init value: \clock_count = 7'0000000
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$163'.
  Set init value: \state = 2'00
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$162'.
  Set init value: \temp_data = 8'11111111
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$161'.
  Set init value: \temp_done = 1'0
Found init rule in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$160'.
  Set init value: \o_wb_rdt = 1'1
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:144$148'.
  Set init value: \recieve = 1'0
Found init rule in `\service.$proc$src/servant_1.2.1/service/service.v:134$147'.
  Set init value: \my_adr = 12582912

31.4.4. Executing PROC_ARST pass (detect async resets in processes).

31.4.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$751'.
     1/1: $0\misalign_trap_sync_r[0:0]
Creating decoders for process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
     1/7: $0\o_cnt_r[3:0]
     2/7: $0\o_cnt[2:0]
     3/7: $0\stage_two_req[0:0]
     4/7: $0\o_cnt_done[0:0]
     5/7: $0\ibus_cyc[0:0]
     6/7: $0\init_done[0:0]
     7/7: $0\o_ctrl_jump[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
     1/45: $0\o_rd_mem_en[0:0]
     2/45: $0\o_rd_alu_en[0:0]
     3/45: $0\o_rd_csr_en[0:0]
     4/45: $0\o_op_b_source[0:0]
     5/45: $0\o_immdec_en[3:0]
     6/45: $0\o_immdec_ctrl[3:0]
     7/45: $0\o_csr_imm_en[0:0]
     8/45: $0\o_csr_d_sel[0:0]
     9/45: $0\o_csr_source[1:0]
    10/45: $0\o_csr_mcause_en[0:0]
    11/45: $0\o_csr_mie_en[0:0]
    12/45: $0\o_csr_mstatus_en[0:0]
    13/45: $0\o_csr_addr[1:0]
    14/45: $0\o_csr_en[0:0]
    15/45: $0\o_mem_cmd[0:0]
    16/45: $0\o_mem_half[0:0]
    17/45: $0\o_mem_word[0:0]
    18/45: $0\o_mem_signed[0:0]
    19/45: $0\o_alu_rd_sel[2:0]
    20/45: $0\o_alu_cmp_sig[0:0]
    21/45: $0\o_alu_cmp_eq[0:0]
    22/45: $0\o_alu_bool_op[1:0]
    23/45: $0\o_alu_sub[0:0]
    24/45: $0\o_ctrl_mret[0:0]
    25/45: $0\o_ctrl_pc_rel[0:0]
    26/45: $0\o_ctrl_utype[0:0]
    27/45: $0\o_ctrl_jal_or_jalr[0:0]
    28/45: $0\o_bufreg_sh_signed[0:0]
    29/45: $0\o_bufreg_clr_lsb[0:0]
    30/45: $0\o_bufreg_imm_en[0:0]
    31/45: $0\o_bufreg_rs1_en[0:0]
    32/45: $0\o_ext_funct3[2:0]
    33/45: $0\o_mdu_op[0:0]
    34/45: $0\o_rd_op[0:0]
    35/45: $0\o_slt_or_branch[0:0]
    36/45: $0\o_shift_op[0:0]
    37/45: $0\o_branch_op[0:0]
    38/45: $0\o_ebreak[0:0]
    39/45: $0\o_e_op[0:0]
    40/45: $0\o_two_stage_op[0:0]
    41/45: $0\o_mtval_pc[0:0]
    42/45: $0\o_dbus_en[0:0]
    43/45: $0\o_cond_branch[0:0]
    44/45: $0\o_bne_or_bge[0:0]
    45/45: $0\o_sh_right[0:0]
Creating decoders for process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
     1/8: $0\op22[0:0]
     2/8: $0\op20[0:0]
     3/8: $0\funct3[2:0]
     4/8: $0\opcode[4:0]
     5/8: $0\imm30[0:0]
     6/8: $0\imm25[0:0]
     7/8: $0\op26[0:0]
     8/8: $0\op21[0:0]
Creating decoders for process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
     1/6: $0\imm7[0:0]
     2/6: $0\imm19_12_20[8:0]
     3/6: $0\imm11_7[4:0]
     4/6: $0\imm24_20[4:0]
     5/6: $0\imm31[0:0]
     6/6: $0\imm30_25[5:0]
Creating decoders for process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
     1/3: $0\c_r[0:0]
     2/3: $0\lsb[1:0]
     3/3: $0\data[29:0]
Creating decoders for process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$479'.
     1/1: $0\dat[31:0]
Creating decoders for process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
     1/3: $0\pc_plus_offset_cy_r[0:0]
     2/3: $0\pc_plus_4_cy_r[0:0]
     3/3: $0\o_ibus_adr[31:0]
Creating decoders for process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$433'.
     1/2: $0\add_cy_r[0:0]
     2/2: $0\cmp_r[0:0]
Creating decoders for process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$374'.
     1/1: $0\signbit[0:0]
Creating decoders for process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
     1/10: $0\mcause3_0[3:0] [1]
     2/10: $0\mcause3_0[3:0] [0]
     3/10: $0\mcause3_0[3:0] [2]
     4/10: $0\mcause3_0[3:0] [3]
     5/10: $0\timer_irq_r[0:0]
     6/10: $0\mstatus_mpie[0:0]
     7/10: $0\mie_mtie[0:0]
     8/10: $0\mcause31[0:0]
     9/10: $0\o_new_irq[0:0]
    10/10: $0\mstatus_mie[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$272'.
     1/1: $0\rdata1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$271'.
     1/1: $0\wdata0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
     1/5: $0\rdata0[1:0]
     2/5: $0\rgnt[0:0]
     3/5: $0\rreq_r[0:0]
     4/5: $0\rcnt[4:0]
     5/5: $0\rtrig1[0:0]
Creating decoders for process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$264'.
     1/3: $0\wdata1_r[1:0]
     2/3: $0\wen1_r[0:0]
     3/3: $0\wen0_r[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$251'.
     1/1: $0\regzero[0:0]
Creating decoders for process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
     1/4: $0\rdata[1:0]
     2/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN[1:0]$248
     3/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_DATA[1:0]$249
     4/4: $0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_ADDR[9:0]$247
Creating decoders for process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$241'.
     1/1: $0\rst_reg[1:0]
Creating decoders for process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$226'.
     1/1: $0\o_wb_cpu_ack[0:0]
Creating decoders for process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$222'.
     1/2: $0\o_wb_rdt[0:0]
     2/2: $0\o_gpio[0:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
     1/3: $0\o_irq[0:0]
     2/3: $0\mtime[31:0]
     3/3: $0\mtimecmp[31:0]
Creating decoders for process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$217'.
     1/1: $0\o_wb_dat[31:0]
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
     1/13: $0\o_wb_rdt[31:0]
     2/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198
     3/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_DATA[31:0]$199
     4/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_ADDR[10:0]$202
     5/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201
     6/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_DATA[31:0]$200
     7/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_ADDR[10:0]$197
     8/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205
     9/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_DATA[31:0]$204
    10/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_ADDR[10:0]$203
    11/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208
    12/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_DATA[31:0]$207
    13/13: $0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_ADDR[10:0]$206
Creating decoders for process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$192'.
     1/1: $0\o_wb_ack[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$185'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$184'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$183'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$182'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$181'.
     1/1: $1\rx_byte[7:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$180'.
     1/1: $1\temp_active[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$179'.
     1/1: $1\rx_bit[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$178'.
     1/1: $1\r_Rx_temp[0:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
     1/13: $0\rx_byte[7:0] [7]
     2/13: $0\rx_byte[7:0] [6]
     3/13: $0\rx_byte[7:0] [5]
     4/13: $0\rx_byte[7:0] [4]
     5/13: $0\rx_byte[7:0] [3]
     6/13: $0\rx_byte[7:0] [2]
     7/13: $0\rx_byte[7:0] [1]
     8/13: $0\rx_byte[7:0] [0]
     9/13: $0\temp_active[0:0]
    10/13: $0\clock_count[6:0]
    11/13: $0\state[1:0]
    12/13: $0\temp_done[0:0]
    13/13: $0\data_index[2:0]
Creating decoders for process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$166'.
     1/2: $0\rx_bit[0:0]
     2/2: $0\r_Rx_temp[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$165'.
     1/1: $1\data_index[2:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$164'.
     1/1: $1\clock_count[6:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$163'.
     1/1: $1\state[1:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$162'.
     1/1: $1\temp_data[7:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$161'.
     1/1: $1\temp_done[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$160'.
     1/1: $1\o_wb_rdt[0:0]
Creating decoders for process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
     1/6: $0\clock_count[6:0]
     2/6: $0\state[1:0]
     3/6: $0\temp_done[0:0]
     4/6: $0\data_index[2:0]
     5/6: $0\temp_data[7:0]
     6/6: $0\o_wb_rdt[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:144$148'.
     1/1: $1\recieve[0:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:134$147'.
     1/1: $1\my_adr[31:0]
Creating decoders for process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
     1/11: $0\dat[31:0]
     2/11: $0\sel[3:0]
     3/11: $0\we[0:0]
     4/11: $0\cyc[0:0]
     5/11: $0\adr[31:0]
     6/11: $0\recieve[0:0]
     7/11: $0\my_adr[31:0]
     8/11: $0\data_to[7:0]
     9/11: $0\pc_active[0:0]
    10/11: $0\data_to_ble[7:0]
    11/11: $0\tx_active[0:0]

31.4.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ext_funct3' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bne_or_bge' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_cond_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_dbus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_e_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ebreak' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_branch_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_shift_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_slt_or_branch' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_sh_right' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mdu_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_two_stage_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_rs1_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_clr_lsb' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_bufreg_sh_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_op_b_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_jal_or_jalr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_utype' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_pc_rel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_ctrl_mret' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_sub' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_bool_op' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_eq' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_cmp_sig' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_alu_rd_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_cmd' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_signed' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_word' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mem_half' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_addr' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mstatus_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mie_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_mcause_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_source' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_d_sel' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_csr_imm_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_mtval_pc' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_ctrl' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_immdec_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_mem_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_csr_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\o_rd_alu_en' from process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
No latch inferred for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_wb_dat' from process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$217'.

31.4.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\misalign_trap_sync_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$751'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_ctrl_jump' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\init_done' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\ibus_cyc' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\stage_two_req' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.\o_cnt_r' using process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op21' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op26' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm25' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\imm30' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\opcode' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\funct3' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op20' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.\op22' using process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\serv_immdec.\imm30_25' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\serv_immdec.\imm31' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\serv_immdec.\imm24_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\serv_immdec.\imm11_7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\serv_immdec.\imm19_12_20' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\serv_immdec.\imm7' using process `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\data' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\lsb' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `$paramod\serv_bufreg\MDU=1'0.\c_r' using process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\serv_bufreg2.\dat' using process `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$479'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\o_ibus_adr' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_4_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.\pc_plus_offset_cy_r' using process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\serv_alu.\cmp_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$433'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\serv_alu.\add_cy_r' using process `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$433'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `$paramod\serv_mem_if\WITH_CSR=1'1.\signbit' using process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$374'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\o_new_irq' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause31' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mie_mtie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mstatus_mpie' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\timer_irq_r' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `$paramod\serv_csr\RESET_STRATEGY=1296649801.\mcause3_0' using process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$272'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$271'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rdata0' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rcnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rgnt' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rtrig1' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\rreq_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen0_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$264'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wen1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$264'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.\wdata1_r' using process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$264'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\regzero' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$251'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.\rdata' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_ADDR' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `$paramod\serv_rf_ram\width=2\csr_regs=4.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_DATA' using process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.\rst_reg' using process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$241'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `$paramod\servant_mux\sim=0.\o_wb_cpu_ack' using process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$226'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\servant_gpio.\o_wb_rdt' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$222'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\servant_gpio.\o_gpio' using process `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$222'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\o_irq' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtime' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.\mtimecmp' using process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_rdt' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1264' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_ADDR' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1265' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_DATA' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1266' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
  created $dff cell `$procdff$1267' with positive edge clock.
Creating register for signal `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.\o_wb_ack' using process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$192'.
  created $dff cell `$procdff$1268' with positive edge clock.
Creating register for signal `\uart_rx.\data_index' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1269' with positive edge clock.
Creating register for signal `\uart_rx.\temp_done' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1270' with positive edge clock.
Creating register for signal `\uart_rx.\state' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1271' with positive edge clock.
Creating register for signal `\uart_rx.\clock_count' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1272' with positive edge clock.
Creating register for signal `\uart_rx.\temp_active' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1273' with positive edge clock.
Creating register for signal `\uart_rx.\rx_byte' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
  created $dff cell `$procdff$1274' with positive edge clock.
Creating register for signal `\uart_rx.\r_Rx_temp' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$166'.
  created $dff cell `$procdff$1275' with positive edge clock.
Creating register for signal `\uart_rx.\rx_bit' using process `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$166'.
  created $dff cell `$procdff$1276' with positive edge clock.
Creating register for signal `\uart_tx.\o_wb_rdt' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1277' with positive edge clock.
Creating register for signal `\uart_tx.\temp_data' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1278' with positive edge clock.
Creating register for signal `\uart_tx.\data_index' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1279' with positive edge clock.
Creating register for signal `\uart_tx.\temp_done' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1280' with positive edge clock.
Creating register for signal `\uart_tx.\state' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1281' with positive edge clock.
Creating register for signal `\uart_tx.\clock_count' using process `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
  created $dff cell `$procdff$1282' with positive edge clock.
Creating register for signal `\service.\tx_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1283' with positive edge clock.
Creating register for signal `\service.\data_to_ble' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1284' with positive edge clock.
Creating register for signal `\service.\pc_active' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1285' with positive edge clock.
Creating register for signal `\service.\data_to' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1286' with positive edge clock.
Creating register for signal `\service.\my_adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1287' with positive edge clock.
Creating register for signal `\service.\cyc' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1288' with positive edge clock.
Creating register for signal `\service.\we' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1289' with positive edge clock.
Creating register for signal `\service.\sel' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1290' with positive edge clock.
Creating register for signal `\service.\dat' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1291' with positive edge clock.
Creating register for signal `\service.\adr' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1292' with positive edge clock.
Creating register for signal `\service.\recieve' using process `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
  created $dff cell `$procdff$1293' with positive edge clock.

31.4.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$751'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:193$751'.
Found and cleaned up 3 empty switches in `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
Removing empty process `$paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_state.v:124$727'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:251$665'.
Found and cleaned up 1 empty switch in `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
Removing empty process `$paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_decode.v:238$664'.
Found and cleaned up 6 empty switches in `\serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
Removing empty process `serv_immdec.$proc$src/serv_1.2.1/rtl/serv_immdec.v:41$503'.
Found and cleaned up 2 empty switches in `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
Removing empty process `$paramod\serv_bufreg\MDU=1'0.$proc$src/serv_1.2.1/rtl/serv_bufreg.v:35$489'.
Found and cleaned up 1 empty switch in `\serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$479'.
Removing empty process `serv_bufreg2.$proc$src/serv_1.2.1/rtl/serv_bufreg2.v:60$479'.
Found and cleaned up 1 empty switch in `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
Removing empty process `$paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.$proc$src/serv_1.2.1/rtl/serv_ctrl.v:71$448'.
Found and cleaned up 1 empty switch in `\serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$433'.
Removing empty process `serv_alu.$proc$src/serv_1.2.1/rtl/serv_alu.v:61$433'.
Found and cleaned up 1 empty switch in `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$374'.
Removing empty process `$paramod\serv_mem_if\WITH_CSR=1'1.$proc$src/serv_1.2.1/rtl/serv_mem_if.v:53$374'.
Found and cleaned up 7 empty switches in `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
Removing empty process `$paramod\serv_csr\RESET_STRATEGY=1296649801.$proc$src/serv_1.2.1/rtl/serv_csr.v:76$295'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$272'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:122$272'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:77$271'.
Found and cleaned up 4 empty switches in `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:125$268'.
Removing empty process `$paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram_if.v:82$264'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:33$251'.
Found and cleaned up 1 empty switch in `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
Removing empty process `$paramod\serv_rf_ram\width=2\csr_regs=4.$proc$src/serv_1.2.1/rtl/serv_rf_ram.v:15$246'.
Removing empty process `$paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.$proc$src/servant_1.2.1/service/ice40_pll.v:13$241'.
Found and cleaned up 2 empty switches in `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$226'.
Removing empty process `$paramod\servant_mux\sim=0.$proc$src/servant_1.2.1/service/servant_mux.v:42$226'.
Found and cleaned up 1 empty switch in `\servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$222'.
Removing empty process `servant_gpio.$proc$src/servant_1.2.1/service/servant_gpio.v:9$222'.
Found and cleaned up 3 empty switches in `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:26$218'.
Removing empty process `$paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.$proc$src/servant_1.2.1/service/servant_timer.v:21$217'.
Found and cleaned up 4 empty switches in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:55$196'.
Found and cleaned up 1 empty switch in `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$192'.
Removing empty process `$paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.$proc$src/servant_1.2.1/service/servant_ram.v:48$192'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:31$185'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:30$184'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:29$183'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:26$182'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:24$181'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:22$180'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:21$179'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:20$178'.
Found and cleaned up 8 empty switches in `\uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:41$167'.
Removing empty process `uart_rx.$proc$src/servant_1.2.1/service/uart_rx.v:35$166'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:24$165'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:23$164'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:22$163'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:20$162'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:18$161'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:10$160'.
Found and cleaned up 6 empty switches in `\uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
Removing empty process `uart_tx.$proc$src/servant_1.2.1/service/uart_tx.v:26$149'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:144$148'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:134$147'.
Found and cleaned up 6 empty switches in `\service.$proc$src/servant_1.2.1/service/service.v:146$112'.
Removing empty process `service.$proc$src/servant_1.2.1/service/service.v:146$112'.
Cleaned up 62 empty switches.

31.5. Executing FLATTEN pass (flatten design).
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Using template $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram for cells of type $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Using template $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant for cells of type $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Using template uart_rx for cells of type uart_rx.
Using template uart_tx for cells of type uart_tx.
Using template $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll for cells of type $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Using template $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801 for cells of type $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Using template servant_arbiter for cells of type servant_arbiter.
Using template $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top for cells of type $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Using template servant_gpio for cells of type servant_gpio.
Using template $paramod\servant_mux\sim=0 for cells of type $paramod\servant_mux\sim=0.
Using template $paramod\serv_rf_ram\width=2\csr_regs=4 for cells of type $paramod\serv_rf_ram\width=2\csr_regs=4.
Using template $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4 for cells of type $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Using template $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top for cells of type $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Using template $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0 for cells of type $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Using template $paramod\serv_bufreg\MDU=1'0 for cells of type $paramod\serv_bufreg\MDU=1'0.
Using template serv_alu for cells of type serv_alu.
Using template $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0 for cells of type $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Using template serv_immdec for cells of type serv_immdec.
Using template $paramod\serv_csr\RESET_STRATEGY=1296649801 for cells of type $paramod\serv_csr\RESET_STRATEGY=1296649801.
Using template $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1 for cells of type $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Using template $paramod\serv_rf_if\WITH_CSR=1 for cells of type $paramod\serv_rf_if\WITH_CSR=1.
Using template serv_bufreg2 for cells of type serv_bufreg2.
Using template $paramod\serv_mem_if\WITH_CSR=1'1 for cells of type $paramod\serv_mem_if\WITH_CSR=1'1.
<suppressed ~25 debug messages>
No more expansions possible.
Deleting now unused module $paramod\serv_state\RESET_STRATEGY=1296649801\WITH_CSR=1'1\ALIGN=1'0\MDU=1'0.
Deleting now unused module $paramod\serv_decode\PRE_REGISTER=1\MDU=1'0.
Deleting now unused module serv_immdec.
Deleting now unused module $paramod\serv_bufreg\MDU=1'0.
Deleting now unused module serv_bufreg2.
Deleting now unused module $paramod\serv_ctrl\RESET_STRATEGY=1296649801\RESET_PC=0\WITH_CSR=1.
Deleting now unused module serv_alu.
Deleting now unused module $paramod\serv_rf_if\WITH_CSR=1.
Deleting now unused module $paramod\serv_mem_if\WITH_CSR=1'1.
Deleting now unused module $paramod\serv_csr\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod\serv_rf_ram_if\width=2\reset_strategy=1296649801\csr_regs=4.
Deleting now unused module $paramod\serv_rf_ram\width=2\csr_regs=4.
Deleting now unused module $paramod$c4ea62c059c8afe4f863648afd023e4dbaeae79c\serv_top.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\ice40_pll.
Deleting now unused module servant_arbiter.
Deleting now unused module $paramod\servant_mux\sim=0.
Deleting now unused module servant_gpio.
Deleting now unused module $paramod$0f2b8312cc11a2c944705af7e400629663b7037c\serv_rf_top.
Deleting now unused module $paramod\servant_timer\WIDTH=32\RESET_STRATEGY=1296649801.
Deleting now unused module $paramod$0433322fa94b7eb73a1cac7cc4070f05a56d78f6\servant_clock_gen.
Deleting now unused module $paramod$d18a899f8ae43f61b5fd46c9a6b6a966e10ca7f7\servant.
Deleting now unused module $paramod$c95e02045f71f2d7b7656a0cf1183e2bcf50fd1f\servant_ram.
Deleting now unused module uart_rx.
Deleting now unused module uart_tx.

31.6. Executing TRIBUF pass.

31.7. Executing DEMINOUT pass (demote inout ports to input or output).

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~98 debug messages>

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 27 unused cells and 515 unused wires.
<suppressed ~33 debug messages>

31.10. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

31.11. Executing OPT pass (performing simple optimizations).

31.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~420 debug messages>
Removed a total of 140 cells.

31.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1184: \pc_active -> 1'0
      Replacing known input bits on port A of cell $procmux$1190: \tx_active -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap\servant.cpu.rf_ram.$reduce_or$src/serv_1.2.1/rtl/serv_rf_ram.v:34$252: { \servant.cpu.rf_ram_if.rreg [0] \servant.cpu.rf_ram_if.rreg [1] \servant.cpu.rf_ram_if.rreg [2] \servant.cpu.rf_ram_if.rreg [3] \servant.cpu.rf_ram_if.rreg [4] \servant.cpu.rf_ram_if.rreg [5] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.state.$reduce_or$src/serv_1.2.1/rtl/serv_state.v:69$668: { \servant.cpu.cpu.state.o_cnt_r [0] \servant.cpu.cpu.state.o_cnt_r [1] \servant.cpu.cpu.state.o_cnt_r [2] \servant.cpu.cpu.state.o_cnt_r [3] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.rf_if.$reduce_or$src/serv_1.2.1/rtl/serv_rf_if.v:53$380: { \servant.cpu.cpu.immdec.imm11_7 [0] \servant.cpu.cpu.immdec.imm11_7 [1] \servant.cpu.cpu.immdec.imm11_7 [2] \servant.cpu.cpu.immdec.imm11_7 [3] \servant.cpu.cpu.immdec.imm11_7 [4] }
    New input vector for $reduce_or cell $techmap\servant.cpu.cpu.decode.$reduce_or$src/serv_1.2.1/rtl/serv_decode.v:133$599: { \servant.cpu.cpu.decode.funct3 [0] \servant.cpu.cpu.decode.funct3 [1] \servant.cpu.cpu.decode.funct3 [2] }
    New ctrl vector for $mux cell $procmux$1184: { }
    New ctrl vector for $mux cell $procmux$1190: { }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$871:
      Old ports: A=0, B=255, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0]
      New connections: $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [31:1] = { 24'000000000000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198 [0] }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$877:
      Old ports: A=0, B=65280, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [31:9] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [7:0] } = { 16'0000000000000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$883:
      Old ports: A=0, B=16711680, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [31:17] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [15:0] } = { 8'00000000 $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\ram.$procmux$889:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208
      New ports: A=1'0, B=1'1, Y=$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24]
      New connections: { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [31:25] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [23:0] } = { $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] $techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN[31:0]$208 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $techmap\servant.cpu.rf_ram.$procmux$851:
      Old ports: A=2'00, B=2'11, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN[1:0]$248
      New ports: A=1'0, B=1'1, Y=$techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN[1:0]$248 [0]
      New connections: $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN[1:0]$248 [1] = $techmap\servant.cpu.rf_ram.$0$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$245_EN[1:0]$248 [0]
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1173: { $techmap\tx_to_ble.$procmux$1127_CMP $techmap\tx_to_ble.$procmux$1123_CMP $auto$opt_reduce.cc:132:opt_mux$1295 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1173: { $techmap\tx_to_pc.$procmux$1127_CMP $techmap\tx_to_pc.$procmux$1123_CMP $auto$opt_reduce.cc:132:opt_mux$1297 }
  Optimizing cells in module \service.
Performed a total of 13 changes.

31.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

31.11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \rx_from_ble.temp_active = 1'0 to constant driver in module service.
Promoting init spec \tx_to_ble.temp_done = 1'0 to constant driver in module service.
Promoting init spec \tx_to_pc.temp_done = 1'0 to constant driver in module service.
Promoted 3 init specs to constant drivers.

31.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 155 unused wires.
<suppressed ~9 debug messages>

31.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.9. Rerunning OPT passes. (Maybe there is more to do..)

31.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New ctrl vector for $pmux cell $techmap\rx_from_ble.$procmux$1062: { $techmap\rx_from_ble.$procmux$1075_CMP $techmap\rx_from_ble.$procmux$1002_CMP $auto$opt_reduce.cc:132:opt_mux$1299 }
    New ctrl vector for $pmux cell $techmap\tx_to_ble.$procmux$1118: { $techmap\tx_to_ble.$procmux$1128_CMP $auto$opt_reduce.cc:132:opt_mux$1301 }
    New ctrl vector for $pmux cell $techmap\tx_to_pc.$procmux$1118: { $techmap\tx_to_pc.$procmux$1128_CMP $auto$opt_reduce.cc:132:opt_mux$1303 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1298: { $techmap\rx_from_ble.$procmux$1063_CMP $techmap\rx_from_ble.$procmux$1016_CMP }
  Optimizing cells in module \service.
Performed a total of 4 changes.

31.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.16. Rerunning OPT passes. (Maybe there is more to do..)

31.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~106 debug messages>

31.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.11.20. Executing OPT_RMDFF pass (remove dff with constant values).

31.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.11.23. Finished OPT passes. (There is nothing left to do.)

31.12. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 address bits (of 32) from memory init port service.$techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:68$210 (ram.mem).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:161$114 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$eq$src/servant_1.2.1/service/service.v:173$115 ($eq).
Removed top 8 bits (of 32) from port B of cell service.$gt$src/servant_1.2.1/service/service.v:179$116 ($gt).
Removed top 30 bits (of 32) from port B of cell service.$add$src/servant_1.2.1/service/service.v:157$113 ($add).
Removed top 24 bits (of 32) from port B of cell service.$and$src/servant_1.2.1/service/service.v:185$145 ($and).
Removed top 24 bits (of 32) from port Y of cell service.$and$src/servant_1.2.1/service/service.v:185$145 ($and).
Removed top 24 bits (of 32) from port B of cell service.$or$src/servant_1.2.1/service/service.v:185$146 ($or).
Removed top 7 bits (of 32) from FF cell service.$techmap\ram.$procdff$1267 ($dff).
Removed top 8 bits (of 32) from FF cell service.$techmap\ram.$procdff$1264 ($dff).
Removed top 16 bits (of 32) from FF cell service.$techmap\ram.$procdff$1260 ($dff).
Removed top 24 bits (of 32) from FF cell service.$techmap\ram.$procdff$1257 ($dff).
Removed cell service.$techmap\ram.$procmux$893 ($mux).
Removed cell service.$techmap\ram.$procmux$891 ($mux).
Removed cell service.$techmap\ram.$procmux$887 ($mux).
Removed cell service.$techmap\ram.$procmux$885 ($mux).
Removed cell service.$techmap\ram.$procmux$881 ($mux).
Removed cell service.$techmap\ram.$procmux$879 ($mux).
Removed cell service.$techmap\ram.$procmux$875 ($mux).
Removed cell service.$techmap\ram.$procmux$873 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1096 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\rx_from_ble.$procmux$1082 ($mux).
Removed top 2 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$1011_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\rx_from_ble.$procmux$1002_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$990_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell service.$techmap\rx_from_ble.$procmux$970_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$176 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:95$174 ($lt).
Removed top 1 bits (of 7) from port B of cell service.$techmap\rx_from_ble.$eq$src/servant_1.2.1/service/uart_rx.v:61$169 ($eq).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1146 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_ble.$procmux$1135 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_ble.$procmux$1127_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:75$156 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$151 ($lt).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1146 ($mux).
Removed top 1 bits (of 2) from mux cell service.$techmap\tx_to_pc.$procmux$1135 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\tx_to_pc.$procmux$1127_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
Removed top 29 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
Removed top 29 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:75$156 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
Removed top 25 bits (of 32) from port Y of cell service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
Removed top 25 bits (of 32) from port B of cell service.$techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$151 ($lt).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.servant_mux.$eq$src/servant_1.2.1/service/servant_mux.v:58$231 ($eq).
Removed top 1 bits (of 2) from FF cell service.$techmap\servant.cpu.rf_ram.$procdff$1246 ($dff).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$855 ($mux).
Removed cell service.$techmap\servant.cpu.rf_ram.$procmux$853 ($mux).
Removed top 4 bits (of 5) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$269 ($add).
Removed top 30 bits (of 32) from port B of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$263 ($sub).
Removed top 27 bits (of 32) from port Y of cell service.$techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$263 ($sub).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:228$663 ($eq).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.decode.$eq$src/serv_1.2.1/rtl/serv_decode.v:223$657 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$487 ($add).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$487 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737 ($add).
Removed top 2 bits (of 3) from port B of cell service.$techmap\servant.cpu.cpu.state.$eq$src/serv_1.2.1/rtl/serv_state.v:79$680 ($eq).
Removed cell service.$techmap\servant.cpu.cpu.csr.$ternary$src/serv_1.2.1/rtl/serv_csr.v:60$281 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.csr.$eq$src/serv_1.2.1/rtl/serv_csr.v:56$274 ($eq).
Removed top 1 bits (of 2) from port A of cell service.$techmap\servant.cpu.cpu.rf_if.$or$src/serv_1.2.1/rtl/serv_rf_if.v:115$400 ($or).
Removed top 4 bits (of 6) from mux cell service.$techmap\servant.cpu.cpu.rf_if.$ternary$src/serv_1.2.1/rtl/serv_rf_if.v:79$392 ($mux).
Removed top 1 bits (of 2) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$eq$src/serv_1.2.1/rtl/serv_bufreg2.v:55$473 ($eq).
Removed top 26 bits (of 32) from mux cell service.$techmap\servant.cpu.cpu.bufreg2.$ternary$src/serv_1.2.1/rtl/serv_bufreg2.v:47$467 ($mux).
Removed top 31 bits (of 32) from port B of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463 ($sub).
Removed top 26 bits (of 32) from port Y of cell service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463 ($sub).
Removed top 7 bits (of 24) from FF cell service.$techmap\ram.$procdff$1264 ($dff).
Removed top 7 bits (of 16) from FF cell service.$techmap\ram.$procdff$1260 ($dff).
Removed top 7 bits (of 8) from FF cell service.$techmap\ram.$procdff$1257 ($dff).
Removed top 24 bits (of 32) from wire service.$and$src/servant_1.2.1/service/service.v:185$145_Y.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_DATA[31:0]$199.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN[31:0]$198.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_DATA[31:0]$200.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN[31:0]$201.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_DATA[31:0]$204.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$0$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN[31:0]$205.
Removed top 24 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$186_EN.
Removed top 16 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$187_EN.
Removed top 8 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$188_EN.
Removed top 4 bits (of 11) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_ADDR.
Removed top 1 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_DATA.
Removed top 9 bits (of 32) from wire service.$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$189_EN.
Removed top 25 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177_Y.
Removed top 29 bits (of 32) from wire service.$techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175_Y.
Removed top 26 bits (of 32) from wire service.$techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152_Y.
Removed top 25 bits (of 32) from wire service.$techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152_Y.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.cpu.rf_if.o_wreg1.
Removed top 4 bits (of 6) from wire service.servant.cpu.rf_ram_if.i_wreg1.

31.13. Executing PEEPOPT pass (run peephole optimizers).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 35 unused wires.
<suppressed ~2 debug messages>

31.15. Executing SHARE pass (SAT-based resource sharing).

31.16. Executing TECHMAP pass (map to technology primitives).

31.16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

31.16.2. Continuing TECHMAP pass.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$690ddad12f1252acd48fb06712ff33cbd769c3f8\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~365 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 99 unused wires.
<suppressed ~1 debug messages>

31.19. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module service:
  creating $macc model for $add$src/servant_1.2.1/service/service.v:157$113 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177 ($add).
  creating $macc model for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$411 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$412 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$414 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$415 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$487 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$488 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463 ($sub).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$436 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$437 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$444 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$445 ($add).
  creating $macc model for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$269 ($add).
  creating $macc model for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$263 ($sub).
  creating $macc model for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
  creating $macc model for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152 ($add).
  creating $macc model for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$157 ($add).
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$444 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$445.
  merging $macc model for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$436 into $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$437.
  merging $macc model for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$487 into $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$488.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$414 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$415.
  merging $macc model for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$411 into $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$412.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$263.
  creating $alu model for $macc $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$269.
  creating $alu model for $macc $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$445.
  creating $alu model for $macc $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220.
  creating $alu model for $macc $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$437.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463.
  creating $alu model for $macc $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$488.
  creating $alu model for $macc $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$157.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$415.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152.
  creating $alu model for $macc $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$412.
  creating $alu model for $macc $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$157.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175.
  creating $alu model for $macc $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177.
  creating $alu model for $macc $add$src/servant_1.2.1/service/service.v:157$113.
  creating $alu model for $gt$src/servant_1.2.1/service/service.v:179$116 ($gt): new $alu
  creating $alu model for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$176 ($lt): new $alu
  creating $alu model for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$221 ($ge): new $alu
  creating $alu model for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$151 ($lt): new $alu
  creating $alu model for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$151 ($lt): new $alu
  creating $alu cell for $techmap\tx_to_pc.$lt$src/servant_1.2.1/service/uart_tx.v:50$151: $auto$alumacc.cc:474:replace_alu$1375
  creating $alu cell for $techmap\tx_to_ble.$lt$src/servant_1.2.1/service/uart_tx.v:50$151: $auto$alumacc.cc:474:replace_alu$1380
  creating $alu cell for $techmap\servant.timer.$ge$src/servant_1.2.1/service/servant_timer.v:30$221: $auto$alumacc.cc:474:replace_alu$1385
  creating $alu cell for $techmap\rx_from_ble.$lt$src/servant_1.2.1/service/uart_rx.v:110$176: $auto$alumacc.cc:474:replace_alu$1398
  creating $alu cell for $gt$src/servant_1.2.1/service/service.v:179$116: $auto$alumacc.cc:474:replace_alu$1403
  creating $alu cell for $add$src/servant_1.2.1/service/service.v:157$113: $auto$alumacc.cc:474:replace_alu$1408
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:112$177: $auto$alumacc.cc:474:replace_alu$1411
  creating $alu cell for $techmap\rx_from_ble.$add$src/servant_1.2.1/service/uart_rx.v:97$175: $auto$alumacc.cc:474:replace_alu$1414
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:77$157: $auto$alumacc.cc:474:replace_alu$1417
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:34$412: $auto$alumacc.cc:474:replace_alu$1420
  creating $alu cell for $techmap\tx_to_pc.$add$src/servant_1.2.1/service/uart_tx.v:53$152: $auto$alumacc.cc:474:replace_alu$1423
  creating $alu cell for $techmap\servant.cpu.cpu.alu.$add$src/serv_1.2.1/rtl/serv_alu.v:36$415: $auto$alumacc.cc:474:replace_alu$1426
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:77$157: $auto$alumacc.cc:474:replace_alu$1429
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg.$add$src/serv_1.2.1/rtl/serv_bufreg.v:33$488: $auto$alumacc.cc:474:replace_alu$1432
  creating $alu cell for $techmap\servant.cpu.cpu.bufreg2.$sub$src/serv_1.2.1/rtl/serv_bufreg2.v:45$463: $auto$alumacc.cc:474:replace_alu$1435
  creating $alu cell for $techmap\tx_to_ble.$add$src/servant_1.2.1/service/uart_tx.v:53$152: $auto$alumacc.cc:474:replace_alu$1438
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:53$437: $auto$alumacc.cc:474:replace_alu$1441
  creating $alu cell for $techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220: $auto$alumacc.cc:474:replace_alu$1444
  creating $alu cell for $techmap\servant.cpu.cpu.ctrl.$add$src/serv_1.2.1/rtl/serv_ctrl.v:65$445: $auto$alumacc.cc:474:replace_alu$1447
  creating $alu cell for $techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737: $auto$alumacc.cc:474:replace_alu$1450
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$add$src/serv_1.2.1/rtl/serv_rf_ram_if.v:127$269: $auto$alumacc.cc:474:replace_alu$1453
  creating $alu cell for $techmap\servant.cpu.rf_ram_if.$sub$src/serv_1.2.1/rtl/serv_rf_ram_if.v:80$263: $auto$alumacc.cc:474:replace_alu$1456
  created 22 $alu and 0 $macc cells.

31.20. Executing OPT pass (performing simple optimizations).

31.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~26 debug messages>

31.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

31.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

31.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1396: { $auto$rtlil.cc:1832:Not$1395 $auto$rtlil.cc:1835:ReduceAnd$1389 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1388: { $auto$alumacc.cc:490:replace_alu$1386 [0] $auto$alumacc.cc:490:replace_alu$1386 [1] $auto$alumacc.cc:490:replace_alu$1386 [2] $auto$alumacc.cc:490:replace_alu$1386 [3] $auto$alumacc.cc:490:replace_alu$1386 [4] $auto$alumacc.cc:490:replace_alu$1386 [5] $auto$alumacc.cc:490:replace_alu$1386 [6] $auto$alumacc.cc:490:replace_alu$1386 [7] $auto$alumacc.cc:490:replace_alu$1386 [8] $auto$alumacc.cc:490:replace_alu$1386 [9] $auto$alumacc.cc:490:replace_alu$1386 [10] $auto$alumacc.cc:490:replace_alu$1386 [11] $auto$alumacc.cc:490:replace_alu$1386 [12] $auto$alumacc.cc:490:replace_alu$1386 [13] $auto$alumacc.cc:490:replace_alu$1386 [14] $auto$alumacc.cc:490:replace_alu$1386 [15] $auto$alumacc.cc:490:replace_alu$1386 [16] $auto$alumacc.cc:490:replace_alu$1386 [17] $auto$alumacc.cc:490:replace_alu$1386 [18] $auto$alumacc.cc:490:replace_alu$1386 [19] $auto$alumacc.cc:490:replace_alu$1386 [20] $auto$alumacc.cc:490:replace_alu$1386 [21] $auto$alumacc.cc:490:replace_alu$1386 [22] $auto$alumacc.cc:490:replace_alu$1386 [23] $auto$alumacc.cc:490:replace_alu$1386 [24] $auto$alumacc.cc:490:replace_alu$1386 [25] $auto$alumacc.cc:490:replace_alu$1386 [26] $auto$alumacc.cc:490:replace_alu$1386 [27] $auto$alumacc.cc:490:replace_alu$1386 [28] $auto$alumacc.cc:490:replace_alu$1386 [29] $auto$alumacc.cc:490:replace_alu$1386 [30] $auto$alumacc.cc:490:replace_alu$1386 [31] }
  Optimizing cells in module \service.
Performed a total of 2 changes.

31.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 9 unused cells and 17 unused wires.
<suppressed ~10 debug messages>

31.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.9. Rerunning OPT passes. (Maybe there is more to do..)

31.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

31.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.20.16. Finished OPT passes. (There is nothing left to do.)

31.21. Executing FSM pass (extract and optimize FSM).

31.21.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking service.rx_from_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_ble.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking service.tx_to_pc.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

31.21.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.21.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.21.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.21.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.21.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.21.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

31.22. Executing OPT pass (performing simple optimizations).

31.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.22.5. Finished fast OPT passes.

31.23. Executing MEMORY pass.

31.23.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$211' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$212' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$213' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$214' in module `\service': merged $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$256' in module `\service': merged $dff to cell.
Checking cell `$techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:60$209' in module `\service': merged data $dff to cell.
Checking cell `$techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$250' in module `\service': merged data $dff to cell.

31.23.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 14 unused cells and 16 unused wires.
<suppressed ~15 debug messages>

31.23.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory service.ram.mem by address:
  New clock domain: posedge \i_clk
    Port 0 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:56$211) has addr \adr [12:2].
      Active bits: 00000000000000000000000011111111
    Port 1 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:57$212) has addr \adr [12:2].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:58$213) has addr \adr [12:2].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$214) has addr \adr [12:2].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

31.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.23.5. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\ram.mem' in module `\service':
  $techmap\ram.$meminit$\mem$src/servant_1.2.1/service/servant_ram.v:68$210 ($meminit)
  $techmap\ram.$memwr$\mem$src/servant_1.2.1/service/servant_ram.v:59$214 ($memwr)
  $techmap\ram.$memrd$\mem$src/servant_1.2.1/service/servant_ram.v:60$209 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\servant.cpu.rf_ram.memory' in module `\service':
  $techmap\servant.cpu.rf_ram.$memwr$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:17$256 ($memwr)
  $techmap\servant.cpu.rf_ram.$memrd$\memory$src/serv_1.2.1/rtl/serv_rf_ram.v:18$250 ($memrd)

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.25. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing service.ram.mem:
  Properties: ports=2 bits=57344 rports=1 wports=1 dbits=32 abits=11 words=1792
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=1024 waste=1024 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=1024 efficiency=87
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=512 waste=512 efficiency=87
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=512 efficiency=87
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=87, cells=16, acells=1
    Efficiency for rule 2.2: efficiency=87, cells=16, acells=2
    Efficiency for rule 2.1: efficiency=87, cells=16, acells=4
    Efficiency for rule 1.1: efficiency=100, cells=14, acells=7
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: ram.mem.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 1 0>: ram.mem.0.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 2 0>: ram.mem.0.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 3 0>: ram.mem.0.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 4 0>: ram.mem.0.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 5 0>: ram.mem.0.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 6 0>: ram.mem.0.6.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: ram.mem.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 1 0>: ram.mem.1.1.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 2 0>: ram.mem.1.2.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 3 0>: ram.mem.1.3.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 4 0>: ram.mem.1.4.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 5 0>: ram.mem.1.5.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 6 0>: ram.mem.1.6.0
Processing service.servant.cpu.rf_ram.memory:
  Properties: ports=2 bits=1152 rports=1 wports=1 dbits=2 abits=10 words=576
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=192 dwaste=14 bwaste=3968 waste=3968 efficiency=9
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=9
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=6 bwaste=3968 waste=3968 efficiency=14
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=14
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=448 dwaste=2 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1472 dwaste=0 bwaste=2944 waste=2944 efficiency=28
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2944 efficiency=28
      Storing for later selection.
  Selecting best of 4 rules:
    Efficiency for rule 2.3: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.2: efficiency=28, cells=1, acells=1
    Efficiency for rule 2.1: efficiency=14, cells=2, acells=2
    Efficiency for rule 1.1: efficiency=9, cells=3, acells=3
    Selected rule 2.3 with efficiency 28.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \i_clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \i_clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: servant.cpu.rf_ram.memory.0.0.0

31.26. Executing TECHMAP pass (map to technology primitives).

31.26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

31.26.2. Continuing TECHMAP pass.
Using template $paramod$590fc92e73966fe892bde63e9987a4c2f78effe8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$804e18c4c84e4a9748378e31c7d4a334fe6ad2f8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$cc55b443195d5b2ba47c2d0d5520d0c3b22a49e8\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=11\CFG_DBITS=2\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4200c10d2e07b3359d49ca78f8f6d43ec6f7e316\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$149ebf6d5b09d1509cbaa4dfe62ee2d2ac4d67ce\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$05c2d5a12193daec10832c52a42d10c5c3df40f5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c580e88c60026da015257f05680f05599f0d3ee1\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~195 debug messages>

31.27. Executing ICE40_BRAMINIT pass.

31.28. Executing OPT pass (performing simple optimizations).

31.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~66 debug messages>

31.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

31.28.3. Executing OPT_RMDFF pass (remove dff with constant values).

31.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 1 unused cells and 390 unused wires.
<suppressed ~2 debug messages>

31.28.5. Finished fast OPT passes.

31.29. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

31.30. Executing OPT pass (performing simple optimizations).

31.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~107 debug messages>

31.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1672\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [1] $auto$rtlil.cc:1906:Mux$1579 [2] $auto$rtlil.cc:1906:Mux$1579 [3] $auto$rtlil.cc:1906:Mux$1579 [4] $auto$rtlil.cc:1906:Mux$1579 [5] $auto$rtlil.cc:1906:Mux$1579 [6] $auto$rtlil.cc:1906:Mux$1579 [7] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [9] $auto$rtlil.cc:1906:Mux$1579 [10] $auto$rtlil.cc:1906:Mux$1579 [11] $auto$rtlil.cc:1906:Mux$1579 [12] $auto$rtlil.cc:1906:Mux$1579 [13] $auto$rtlil.cc:1906:Mux$1579 [14] $auto$rtlil.cc:1906:Mux$1579 [15] }
    New input vector for $reduce_or cell $techmap$techmap1669\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [1] $auto$rtlil.cc:1906:Mux$1501 [2] $auto$rtlil.cc:1906:Mux$1501 [3] $auto$rtlil.cc:1906:Mux$1501 [4] $auto$rtlil.cc:1906:Mux$1501 [5] $auto$rtlil.cc:1906:Mux$1501 [6] $auto$rtlil.cc:1906:Mux$1501 [7] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [9] $auto$rtlil.cc:1906:Mux$1501 [10] $auto$rtlil.cc:1906:Mux$1501 [11] $auto$rtlil.cc:1906:Mux$1501 [12] $auto$rtlil.cc:1906:Mux$1501 [13] $auto$rtlil.cc:1906:Mux$1501 [14] $auto$rtlil.cc:1906:Mux$1501 [15] }
    New input vector for $reduce_or cell $techmap$techmap1668\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [1] $auto$rtlil.cc:1906:Mux$1514 [2] $auto$rtlil.cc:1906:Mux$1514 [3] $auto$rtlil.cc:1906:Mux$1514 [4] $auto$rtlil.cc:1906:Mux$1514 [5] $auto$rtlil.cc:1906:Mux$1514 [6] $auto$rtlil.cc:1906:Mux$1514 [7] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [9] $auto$rtlil.cc:1906:Mux$1514 [10] $auto$rtlil.cc:1906:Mux$1514 [11] $auto$rtlil.cc:1906:Mux$1514 [12] $auto$rtlil.cc:1906:Mux$1514 [13] $auto$rtlil.cc:1906:Mux$1514 [14] $auto$rtlil.cc:1906:Mux$1514 [15] }
    New input vector for $reduce_or cell $techmap$techmap1667\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1666: { $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [1] $auto$rtlil.cc:1906:Mux$1566 [2] $auto$rtlil.cc:1906:Mux$1566 [3] $auto$rtlil.cc:1906:Mux$1566 [4] $auto$rtlil.cc:1906:Mux$1566 [5] $auto$rtlil.cc:1906:Mux$1566 [6] $auto$rtlil.cc:1906:Mux$1566 [7] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [9] $auto$rtlil.cc:1906:Mux$1566 [10] $auto$rtlil.cc:1906:Mux$1566 [11] $auto$rtlil.cc:1906:Mux$1566 [12] $auto$rtlil.cc:1906:Mux$1566 [13] $auto$rtlil.cc:1906:Mux$1566 [14] $auto$rtlil.cc:1906:Mux$1566 [15] }
    New input vector for $reduce_or cell $techmap$techmap1664\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [1] $auto$rtlil.cc:1906:Mux$1631 [2] $auto$rtlil.cc:1906:Mux$1631 [3] $auto$rtlil.cc:1906:Mux$1631 [4] $auto$rtlil.cc:1906:Mux$1631 [5] $auto$rtlil.cc:1906:Mux$1631 [6] $auto$rtlil.cc:1906:Mux$1631 [7] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [9] $auto$rtlil.cc:1906:Mux$1631 [10] $auto$rtlil.cc:1906:Mux$1631 [11] $auto$rtlil.cc:1906:Mux$1631 [12] $auto$rtlil.cc:1906:Mux$1631 [13] $auto$rtlil.cc:1906:Mux$1631 [14] $auto$rtlil.cc:1906:Mux$1631 [15] }
    New input vector for $reduce_or cell $techmap$techmap1663\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [1] $auto$rtlil.cc:1906:Mux$1605 [2] $auto$rtlil.cc:1906:Mux$1605 [3] $auto$rtlil.cc:1906:Mux$1605 [4] $auto$rtlil.cc:1906:Mux$1605 [5] $auto$rtlil.cc:1906:Mux$1605 [6] $auto$rtlil.cc:1906:Mux$1605 [7] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [9] $auto$rtlil.cc:1906:Mux$1605 [10] $auto$rtlil.cc:1906:Mux$1605 [11] $auto$rtlil.cc:1906:Mux$1605 [12] $auto$rtlil.cc:1906:Mux$1605 [13] $auto$rtlil.cc:1906:Mux$1605 [14] $auto$rtlil.cc:1906:Mux$1605 [15] }
    New input vector for $reduce_or cell $techmap$techmap1662\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [1] $auto$rtlil.cc:1906:Mux$1527 [2] $auto$rtlil.cc:1906:Mux$1527 [3] $auto$rtlil.cc:1906:Mux$1527 [4] $auto$rtlil.cc:1906:Mux$1527 [5] $auto$rtlil.cc:1906:Mux$1527 [6] $auto$rtlil.cc:1906:Mux$1527 [7] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [9] $auto$rtlil.cc:1906:Mux$1527 [10] $auto$rtlil.cc:1906:Mux$1527 [11] $auto$rtlil.cc:1906:Mux$1527 [12] $auto$rtlil.cc:1906:Mux$1527 [13] $auto$rtlil.cc:1906:Mux$1527 [14] $auto$rtlil.cc:1906:Mux$1527 [15] }
    New input vector for $reduce_or cell $techmap$techmap1661\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [1] $auto$rtlil.cc:1906:Mux$1644 [2] $auto$rtlil.cc:1906:Mux$1644 [3] $auto$rtlil.cc:1906:Mux$1644 [4] $auto$rtlil.cc:1906:Mux$1644 [5] $auto$rtlil.cc:1906:Mux$1644 [6] $auto$rtlil.cc:1906:Mux$1644 [7] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [9] $auto$rtlil.cc:1906:Mux$1644 [10] $auto$rtlil.cc:1906:Mux$1644 [11] $auto$rtlil.cc:1906:Mux$1644 [12] $auto$rtlil.cc:1906:Mux$1644 [13] $auto$rtlil.cc:1906:Mux$1644 [14] $auto$rtlil.cc:1906:Mux$1644 [15] }
    New input vector for $reduce_or cell $techmap$techmap1660\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [1] $auto$rtlil.cc:1906:Mux$1592 [2] $auto$rtlil.cc:1906:Mux$1592 [3] $auto$rtlil.cc:1906:Mux$1592 [4] $auto$rtlil.cc:1906:Mux$1592 [5] $auto$rtlil.cc:1906:Mux$1592 [6] $auto$rtlil.cc:1906:Mux$1592 [7] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [9] $auto$rtlil.cc:1906:Mux$1592 [10] $auto$rtlil.cc:1906:Mux$1592 [11] $auto$rtlil.cc:1906:Mux$1592 [12] $auto$rtlil.cc:1906:Mux$1592 [13] $auto$rtlil.cc:1906:Mux$1592 [14] $auto$rtlil.cc:1906:Mux$1592 [15] }
    New input vector for $reduce_or cell $techmap$techmap1659\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [1] $auto$rtlil.cc:1906:Mux$1540 [2] $auto$rtlil.cc:1906:Mux$1540 [3] $auto$rtlil.cc:1906:Mux$1540 [4] $auto$rtlil.cc:1906:Mux$1540 [5] $auto$rtlil.cc:1906:Mux$1540 [6] $auto$rtlil.cc:1906:Mux$1540 [7] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [9] $auto$rtlil.cc:1906:Mux$1540 [10] $auto$rtlil.cc:1906:Mux$1540 [11] $auto$rtlil.cc:1906:Mux$1540 [12] $auto$rtlil.cc:1906:Mux$1540 [13] $auto$rtlil.cc:1906:Mux$1540 [14] $auto$rtlil.cc:1906:Mux$1540 [15] }
    New input vector for $reduce_or cell $techmap$techmap1658\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1657: { $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [1] $auto$rtlil.cc:1906:Mux$1475 [2] $auto$rtlil.cc:1906:Mux$1475 [3] $auto$rtlil.cc:1906:Mux$1475 [4] $auto$rtlil.cc:1906:Mux$1475 [5] $auto$rtlil.cc:1906:Mux$1475 [6] $auto$rtlil.cc:1906:Mux$1475 [7] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [9] $auto$rtlil.cc:1906:Mux$1475 [10] $auto$rtlil.cc:1906:Mux$1475 [11] $auto$rtlil.cc:1906:Mux$1475 [12] $auto$rtlil.cc:1906:Mux$1475 [13] $auto$rtlil.cc:1906:Mux$1475 [14] $auto$rtlil.cc:1906:Mux$1475 [15] }
    New input vector for $reduce_or cell $techmap$techmap1655\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [1] $auto$rtlil.cc:1906:Mux$1488 [2] $auto$rtlil.cc:1906:Mux$1488 [3] $auto$rtlil.cc:1906:Mux$1488 [4] $auto$rtlil.cc:1906:Mux$1488 [5] $auto$rtlil.cc:1906:Mux$1488 [6] $auto$rtlil.cc:1906:Mux$1488 [7] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [9] $auto$rtlil.cc:1906:Mux$1488 [10] $auto$rtlil.cc:1906:Mux$1488 [11] $auto$rtlil.cc:1906:Mux$1488 [12] $auto$rtlil.cc:1906:Mux$1488 [13] $auto$rtlil.cc:1906:Mux$1488 [14] $auto$rtlil.cc:1906:Mux$1488 [15] }
    New input vector for $reduce_or cell $techmap$techmap1654\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [1] $auto$rtlil.cc:1906:Mux$1553 [2] $auto$rtlil.cc:1906:Mux$1553 [3] $auto$rtlil.cc:1906:Mux$1553 [4] $auto$rtlil.cc:1906:Mux$1553 [5] $auto$rtlil.cc:1906:Mux$1553 [6] $auto$rtlil.cc:1906:Mux$1553 [7] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [9] $auto$rtlil.cc:1906:Mux$1553 [10] $auto$rtlil.cc:1906:Mux$1553 [11] $auto$rtlil.cc:1906:Mux$1553 [12] $auto$rtlil.cc:1906:Mux$1553 [13] $auto$rtlil.cc:1906:Mux$1553 [14] $auto$rtlil.cc:1906:Mux$1553 [15] }
    New input vector for $reduce_or cell $techmap$techmap1653\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [1] $auto$rtlil.cc:1906:Mux$1618 [2] $auto$rtlil.cc:1906:Mux$1618 [3] $auto$rtlil.cc:1906:Mux$1618 [4] $auto$rtlil.cc:1906:Mux$1618 [5] $auto$rtlil.cc:1906:Mux$1618 [6] $auto$rtlil.cc:1906:Mux$1618 [7] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [9] $auto$rtlil.cc:1906:Mux$1618 [10] $auto$rtlil.cc:1906:Mux$1618 [11] $auto$rtlil.cc:1906:Mux$1618 [12] $auto$rtlil.cc:1906:Mux$1618 [13] $auto$rtlil.cc:1906:Mux$1618 [14] $auto$rtlil.cc:1906:Mux$1618 [15] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1474:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1475
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1475 [15:9] $auto$rtlil.cc:1906:Mux$1475 [7:1] } = { $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [8] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1487:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1488
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1488 [15:9] $auto$rtlil.cc:1906:Mux$1488 [7:1] } = { $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [8] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1500:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1501
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1501 [15:9] $auto$rtlil.cc:1906:Mux$1501 [7:1] } = { $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [8] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1513:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1514
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1514 [15:9] $auto$rtlil.cc:1906:Mux$1514 [7:1] } = { $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [8] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1526:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1527
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1527 [15:9] $auto$rtlil.cc:1906:Mux$1527 [7:1] } = { $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [8] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1539:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1540
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1540 [15:9] $auto$rtlil.cc:1906:Mux$1540 [7:1] } = { $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [8] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1552:
      Old ports: A=16'0000000000000000, B={ \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1] \ram.we [1:0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] \ram.we [0] }, Y=$auto$rtlil.cc:1906:Mux$1553
      New ports: A=2'00, B=\ram.we [1:0], Y={ $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1553 [15:9] $auto$rtlil.cc:1906:Mux$1553 [7:1] } = { $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [8] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1565:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1566
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1566 [15:9] $auto$rtlil.cc:1906:Mux$1566 [7:1] } = { $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [8] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1578:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1579
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1579 [15:9] $auto$rtlil.cc:1906:Mux$1579 [7:1] } = { $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [8] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1591:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1592
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1592 [15:9] $auto$rtlil.cc:1906:Mux$1592 [7:1] } = { $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [8] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1604:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1605
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1605 [15:9] $auto$rtlil.cc:1906:Mux$1605 [7:1] } = { $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [8] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1617:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1618
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1618 [15:9] $auto$rtlil.cc:1906:Mux$1618 [7:1] } = { $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [8] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1630:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1631
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1631 [15:9] $auto$rtlil.cc:1906:Mux$1631 [7:1] } = { $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [8] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [0] }
    Consolidated identical input bits for $mux cell $auto$memory_bram.cc:898:replace_cell$1643:
      Old ports: A=16'0000000000000000, B={ \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3] \ram.we [3:2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] \ram.we [2] }, Y=$auto$rtlil.cc:1906:Mux$1644
      New ports: A=2'00, B=\ram.we [3:2], Y={ $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [0] }
      New connections: { $auto$rtlil.cc:1906:Mux$1644 [15:9] $auto$rtlil.cc:1906:Mux$1644 [7:1] } = { $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [8] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [0] }
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1077:
      Old ports: A=2'11, B=2'00, Y=$techmap\rx_from_ble.$procmux$1077_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1077_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1077_Y [1] = $techmap\rx_from_ble.$procmux$1077_Y [0]
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1085:
      Old ports: A=2'10, B={ 1'1 $techmap\rx_from_ble.$procmux$1082_Y [0] }, Y=$techmap\rx_from_ble.$procmux$1085_Y
      New ports: A=1'0, B=$techmap\rx_from_ble.$procmux$1082_Y [0], Y=$techmap\rx_from_ble.$procmux$1085_Y [0]
      New connections: $techmap\rx_from_ble.$procmux$1085_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\rx_from_ble.$procmux$1090:
      Old ports: A=2'10, B=2'00, Y=$techmap\rx_from_ble.$procmux$1090_Y
      New ports: A=1'1, B=1'0, Y=$techmap\rx_from_ble.$procmux$1090_Y [1]
      New connections: $techmap\rx_from_ble.$procmux$1090_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1130:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_ble.$procmux$1130_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_ble.$procmux$1130_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1130_Y [1] = $techmap\tx_to_ble.$procmux$1130_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_ble.$procmux$1138:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_ble.$procmux$1135_Y [0] }, Y=$techmap\tx_to_ble.$procmux$1138_Y
      New ports: A=1'0, B=$techmap\tx_to_ble.$procmux$1135_Y [0], Y=$techmap\tx_to_ble.$procmux$1138_Y [0]
      New connections: $techmap\tx_to_ble.$procmux$1138_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1130:
      Old ports: A=2'11, B=2'00, Y=$techmap\tx_to_pc.$procmux$1130_Y
      New ports: A=1'1, B=1'0, Y=$techmap\tx_to_pc.$procmux$1130_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1130_Y [1] = $techmap\tx_to_pc.$procmux$1130_Y [0]
    Consolidated identical input bits for $mux cell $techmap\tx_to_pc.$procmux$1138:
      Old ports: A=2'10, B={ 1'1 $techmap\tx_to_pc.$procmux$1135_Y [0] }, Y=$techmap\tx_to_pc.$procmux$1138_Y
      New ports: A=1'0, B=$techmap\tx_to_pc.$procmux$1135_Y [0], Y=$techmap\tx_to_pc.$procmux$1138_Y [0]
      New connections: $techmap\tx_to_pc.$procmux$1138_Y [1] = 1'1
  Optimizing cells in module \service.
    New input vector for $reduce_or cell $techmap$techmap1672\ram.mem.1.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1579 [0] $auto$rtlil.cc:1906:Mux$1579 [8] }
    New input vector for $reduce_or cell $techmap$techmap1669\ram.mem.0.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1501 [0] $auto$rtlil.cc:1906:Mux$1501 [8] }
    New input vector for $reduce_or cell $techmap$techmap1668\ram.mem.0.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1514 [0] $auto$rtlil.cc:1906:Mux$1514 [8] }
    New input vector for $reduce_or cell $techmap$techmap1667\ram.mem.1.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1666: { $auto$rtlil.cc:1906:Mux$1566 [0] $auto$rtlil.cc:1906:Mux$1566 [8] }
    New input vector for $reduce_or cell $techmap$techmap1664\ram.mem.1.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1631 [0] $auto$rtlil.cc:1906:Mux$1631 [8] }
    New input vector for $reduce_or cell $techmap$techmap1663\ram.mem.1.3.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1605 [0] $auto$rtlil.cc:1906:Mux$1605 [8] }
    New input vector for $reduce_or cell $techmap$techmap1662\ram.mem.0.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1527 [0] $auto$rtlil.cc:1906:Mux$1527 [8] }
    New input vector for $reduce_or cell $techmap$techmap1661\ram.mem.1.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1644 [0] $auto$rtlil.cc:1906:Mux$1644 [8] }
    New input vector for $reduce_or cell $techmap$techmap1660\ram.mem.1.2.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1592 [0] $auto$rtlil.cc:1906:Mux$1592 [8] }
    New input vector for $reduce_or cell $techmap$techmap1659\ram.mem.0.5.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1540 [0] $auto$rtlil.cc:1906:Mux$1540 [8] }
    New input vector for $reduce_or cell $techmap$techmap1658\ram.mem.0.0.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1657: { $auto$rtlil.cc:1906:Mux$1475 [0] $auto$rtlil.cc:1906:Mux$1475 [8] }
    New input vector for $reduce_or cell $techmap$techmap1655\ram.mem.0.1.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1488 [0] $auto$rtlil.cc:1906:Mux$1488 [8] }
    New input vector for $reduce_or cell $techmap$techmap1654\ram.mem.0.6.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1553 [0] $auto$rtlil.cc:1906:Mux$1553 [8] }
    New input vector for $reduce_or cell $techmap$techmap1653\ram.mem.1.4.0.$reduce_or$/usr/bin/../share/yosys/ice40/brams_map.v:222$1652: { $auto$rtlil.cc:1906:Mux$1618 [0] $auto$rtlil.cc:1906:Mux$1618 [8] }
  Optimizing cells in module \service.
Performed a total of 49 changes.

31.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.30.6. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~42 debug messages>

31.30.9. Rerunning OPT passes. (Maybe there is more to do..)

31.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \service..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

31.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \service.
Performed a total of 0 changes.

31.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.30.13. Executing OPT_RMDFF pass (remove dff with constant values).

31.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

31.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.30.16. Finished OPT passes. (There is nothing left to do.)

31.31. Executing TECHMAP pass (map to technology primitives).

31.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

31.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

31.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=2\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=3 for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$1297efc30c1e19551d1f4e269f2cbfa7dd15f801\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
No more expansions possible.
<suppressed ~1615 debug messages>

31.32. Executing ICE40_OPT pass (performing simple optimizations).

31.32.1. Running ICE40 specific optimizations.

31.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~700 debug messages>

31.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~351 debug messages>
Removed a total of 117 cells.

31.32.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 218 unused cells and 961 unused wires.
<suppressed ~223 debug messages>

31.32.6. Rerunning OPT passes. (Removed registers in this run.)

31.32.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1375.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1380.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1398.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1403.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$1403.BB [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1408.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1411.slice[0].carry: CO=\rx_from_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1414.slice[0].carry: CO=\rx_from_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1417.slice[0].carry: CO=\tx_to_pc.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1423.slice[0].carry: CO=\tx_to_pc.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1429.slice[0].carry: CO=\tx_to_ble.data_index [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1435.slice[0].carry: CO=\servant.cpu.cpu.bufreg2.dat [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1438.slice[0].carry: CO=\tx_to_ble.clock_count [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1444.slice[0].carry: CO=\servant.timer.mtime [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1453.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1456.slice[0].carry: CO=\servant.cpu.rf_ram_if.rcnt [0]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1408.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1411.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1414.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1417.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1423.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1429.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1435.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1438.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1444.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1453.slice[1].adder back to logic.
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1456.slice[1].adder back to logic.

31.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~142 debug messages>

31.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

31.32.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

31.32.12. Rerunning OPT passes. (Removed registers in this run.)

31.32.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell service.$auto$alumacc.cc:474:replace_alu$1408.slice[1].carry: CO=\my_adr [1]
Mapping SB_LUT4 cell service.$auto$alumacc.cc:474:replace_alu$1408.slice[2].adder back to logic.

31.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~13 debug messages>

31.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

31.32.18. Rerunning OPT passes. (Removed registers in this run.)

31.32.19. Running ICE40 specific optimizations.

31.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

31.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.32.24. Finished OPT passes. (There is nothing left to do.)

31.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

31.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module service:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2184 to $_DFFE_PP_ for $0\data_to_ble[7:0] [0] -> \data_to_ble [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2185 to $_DFFE_PP_ for $0\data_to_ble[7:0] [1] -> \data_to_ble [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2186 to $_DFFE_PP_ for $0\data_to_ble[7:0] [2] -> \data_to_ble [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2187 to $_DFFE_PP_ for $0\data_to_ble[7:0] [3] -> \data_to_ble [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2188 to $_DFFE_PP_ for $0\data_to_ble[7:0] [4] -> \data_to_ble [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2189 to $_DFFE_PP_ for $0\data_to_ble[7:0] [5] -> \data_to_ble [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2190 to $_DFFE_PP_ for $0\data_to_ble[7:0] [6] -> \data_to_ble [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2191 to $_DFFE_PP_ for $0\data_to_ble[7:0] [7] -> \data_to_ble [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2193 to $_DFFE_PP_ for $0\data_to[7:0] [0] -> \data_to [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2194 to $_DFFE_PP_ for $0\data_to[7:0] [1] -> \data_to [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2195 to $_DFFE_PP_ for $0\data_to[7:0] [2] -> \data_to [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2196 to $_DFFE_PP_ for $0\data_to[7:0] [3] -> \data_to [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2197 to $_DFFE_PP_ for $0\data_to[7:0] [4] -> \data_to [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2198 to $_DFFE_PP_ for $0\data_to[7:0] [5] -> \data_to [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2199 to $_DFFE_PP_ for $0\data_to[7:0] [6] -> \data_to [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2200 to $_DFFE_PP_ for $0\data_to[7:0] [7] -> \data_to [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2201 to $_DFFE_PP_ for $0\my_adr[31:0] [0] -> \my_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2202 to $_DFFE_PP_ for $0\my_adr[31:0] [1] -> \my_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2203 to $_DFFE_PP_ for $0\my_adr[31:0] [2] -> \my_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2204 to $_DFFE_PP_ for $0\my_adr[31:0] [3] -> \my_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2205 to $_DFFE_PP_ for $0\my_adr[31:0] [4] -> \my_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2206 to $_DFFE_PP_ for $0\my_adr[31:0] [5] -> \my_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2207 to $_DFFE_PP_ for $0\my_adr[31:0] [6] -> \my_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2208 to $_DFFE_PP_ for $0\my_adr[31:0] [7] -> \my_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2209 to $_DFFE_PP_ for $0\my_adr[31:0] [8] -> \my_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2210 to $_DFFE_PP_ for $0\my_adr[31:0] [9] -> \my_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2211 to $_DFFE_PP_ for $0\my_adr[31:0] [10] -> \my_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2212 to $_DFFE_PP_ for $0\my_adr[31:0] [11] -> \my_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2213 to $_DFFE_PP_ for $0\my_adr[31:0] [12] -> \my_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2214 to $_DFFE_PP_ for $0\my_adr[31:0] [13] -> \my_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2215 to $_DFFE_PP_ for $0\my_adr[31:0] [14] -> \my_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2216 to $_DFFE_PP_ for $0\my_adr[31:0] [15] -> \my_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2217 to $_DFFE_PP_ for $0\my_adr[31:0] [16] -> \my_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2218 to $_DFFE_PP_ for $0\my_adr[31:0] [17] -> \my_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2219 to $_DFFE_PP_ for $0\my_adr[31:0] [18] -> \my_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2220 to $_DFFE_PP_ for $0\my_adr[31:0] [19] -> \my_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2221 to $_DFFE_PP_ for $0\my_adr[31:0] [20] -> \my_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2222 to $_DFFE_PP_ for $0\my_adr[31:0] [21] -> \my_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2223 to $_DFFE_PP_ for $0\my_adr[31:0] [22] -> \my_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2224 to $_DFFE_PP_ for $0\my_adr[31:0] [23] -> \my_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2225 to $_DFFE_PP_ for $0\my_adr[31:0] [24] -> \my_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2226 to $_DFFE_PP_ for $0\my_adr[31:0] [25] -> \my_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2227 to $_DFFE_PP_ for $0\my_adr[31:0] [26] -> \my_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2228 to $_DFFE_PP_ for $0\my_adr[31:0] [27] -> \my_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2229 to $_DFFE_PP_ for $0\my_adr[31:0] [28] -> \my_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2230 to $_DFFE_PP_ for $0\my_adr[31:0] [29] -> \my_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2231 to $_DFFE_PP_ for $0\my_adr[31:0] [30] -> \my_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2232 to $_DFFE_PP_ for $0\my_adr[31:0] [31] -> \my_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2431 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1037.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2432 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1015.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2433 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$994.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2434 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$974.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2435 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$955.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2436 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$937.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2437 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$920.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2438 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$904.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.rx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2439 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [0] -> \rx_from_ble.clock_count [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2440 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [1] -> \rx_from_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2441 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [2] -> \rx_from_ble.clock_count [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2442 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [3] -> \rx_from_ble.clock_count [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2443 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [4] -> \rx_from_ble.clock_count [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2444 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [5] -> \rx_from_ble.clock_count [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2445 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1062.$ternary$/usr/bin/../share/yosys/techmap.v:445$2506_Y [6] -> \rx_from_ble.clock_count [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2448 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1102.$ternary$/usr/bin/../share/yosys/techmap.v:445$2466_Y -> \rx_from_ble.temp_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2449 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1112.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [0] -> \rx_from_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2450 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1112.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [1] -> \rx_from_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2451 to $_DFFE_PP_ for $techmap$techmap\rx_from_ble.$procmux$1112.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [2] -> \rx_from_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2608 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [0] -> \tx_to_ble.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2609 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [1] -> \tx_to_ble.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2610 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [2] -> \tx_to_ble.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2611 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [3] -> \tx_to_ble.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2612 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [4] -> \tx_to_ble.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2613 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [5] -> \tx_to_ble.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2614 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [6] -> \tx_to_ble.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2615 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [7] -> \tx_to_ble.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2619 to $_DFFE_PP_ for $techmap\tx_to_ble.$0\clock_count[6:0] [1] -> \tx_to_ble.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2627 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [0] -> \tx_to_ble.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2628 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [1] -> \tx_to_ble.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2629 to $_DFFE_PP_ for $techmap$techmap\tx_to_ble.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [2] -> \tx_to_ble.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2774 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [0] -> \tx_to_pc.temp_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2775 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [1] -> \tx_to_pc.temp_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2776 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [2] -> \tx_to_pc.temp_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2777 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [3] -> \tx_to_pc.temp_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2778 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [4] -> \tx_to_pc.temp_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2779 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [5] -> \tx_to_pc.temp_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2780 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [6] -> \tx_to_pc.temp_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2781 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1170.$ternary$/usr/bin/../share/yosys/techmap.v:445$2667_Y [7] -> \tx_to_pc.temp_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2783 to $_DFFE_PP_ for $techmap\tx_to_pc.$0\clock_count[6:0] [1] -> \tx_to_pc.clock_count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2791 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [0] -> \tx_to_pc.data_index [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2792 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [1] -> \tx_to_pc.data_index [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2793 to $_DFFE_PP_ for $techmap$techmap\tx_to_pc.$procmux$1162.$ternary$/usr/bin/../share/yosys/techmap.v:445$2453_Y [2] -> \tx_to_pc.data_index [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2890 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [0] -> \servant.timer.mtimecmp [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2891 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [1] -> \servant.timer.mtimecmp [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2892 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [2] -> \servant.timer.mtimecmp [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2893 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [3] -> \servant.timer.mtimecmp [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2894 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [4] -> \servant.timer.mtimecmp [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2895 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [5] -> \servant.timer.mtimecmp [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2896 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [6] -> \servant.timer.mtimecmp [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2897 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [7] -> \servant.timer.mtimecmp [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2898 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [8] -> \servant.timer.mtimecmp [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2899 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [9] -> \servant.timer.mtimecmp [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2900 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [10] -> \servant.timer.mtimecmp [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2901 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [11] -> \servant.timer.mtimecmp [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2902 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [12] -> \servant.timer.mtimecmp [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2903 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [13] -> \servant.timer.mtimecmp [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2904 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [14] -> \servant.timer.mtimecmp [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2905 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [15] -> \servant.timer.mtimecmp [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2906 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [16] -> \servant.timer.mtimecmp [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2907 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [17] -> \servant.timer.mtimecmp [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2908 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [18] -> \servant.timer.mtimecmp [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2909 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [19] -> \servant.timer.mtimecmp [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2910 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [20] -> \servant.timer.mtimecmp [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2911 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [21] -> \servant.timer.mtimecmp [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2912 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [22] -> \servant.timer.mtimecmp [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2913 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [23] -> \servant.timer.mtimecmp [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2914 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [24] -> \servant.timer.mtimecmp [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2915 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [25] -> \servant.timer.mtimecmp [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2916 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [26] -> \servant.timer.mtimecmp [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2917 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [27] -> \servant.timer.mtimecmp [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2918 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [28] -> \servant.timer.mtimecmp [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2919 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [29] -> \servant.timer.mtimecmp [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2920 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [30] -> \servant.timer.mtimecmp [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2921 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtimecmp[31:0] [31] -> \servant.timer.mtimecmp [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2923 to $_DFFE_PP_ for $techmap\servant.timer.$0\mtime[31:0] [1] -> \servant.timer.mtime [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3095 to $_DFFE_PP_ for $techmap\servant.gpio.$0\o_gpio[0:0] -> \servant.gpio.o_gpio.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $techmap\servant.cpu.rf_ram_if.$0\rdata1[0:0] -> \servant.cpu.rf_ram_if.rdata1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3262 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op26[0:0] -> \servant.cpu.cpu.decode.op26.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op22[0:0] -> \servant.cpu.cpu.decode.op22.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op20[0:0] -> \servant.cpu.cpu.decode.op20.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [0] -> \servant.cpu.cpu.decode.funct3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [1] -> \servant.cpu.cpu.decode.funct3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\funct3[2:0] [2] -> \servant.cpu.cpu.decode.funct3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [0] -> \servant.cpu.cpu.decode.opcode [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [1] -> \servant.cpu.cpu.decode.opcode [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [2] -> \servant.cpu.cpu.decode.opcode [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [3] -> \servant.cpu.cpu.decode.opcode [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\opcode[4:0] [4] -> \servant.cpu.cpu.decode.opcode [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\imm30[0:0] -> \servant.cpu.cpu.decode.imm30.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.decode.$0\op21[0:0] -> \servant.cpu.cpu.decode.op21.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3513 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [0] -> \servant.cpu.cpu.bufreg.lsb [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3514 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\lsb[1:0] [1] -> \servant.cpu.cpu.bufreg.lsb [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3515 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [0] -> \servant.cpu.cpu.bufreg.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3516 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [1] -> \servant.cpu.cpu.bufreg.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3517 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [2] -> \servant.cpu.cpu.bufreg.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3518 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [3] -> \servant.cpu.cpu.bufreg.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3519 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [4] -> \servant.cpu.cpu.bufreg.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3520 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [5] -> \servant.cpu.cpu.bufreg.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3521 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [6] -> \servant.cpu.cpu.bufreg.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3522 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [7] -> \servant.cpu.cpu.bufreg.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3523 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [8] -> \servant.cpu.cpu.bufreg.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3524 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [9] -> \servant.cpu.cpu.bufreg.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3525 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [10] -> \servant.cpu.cpu.bufreg.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3526 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [11] -> \servant.cpu.cpu.bufreg.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3527 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [12] -> \servant.cpu.cpu.bufreg.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3528 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [13] -> \servant.cpu.cpu.bufreg.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3529 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [14] -> \servant.cpu.cpu.bufreg.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3530 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [15] -> \servant.cpu.cpu.bufreg.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3531 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [16] -> \servant.cpu.cpu.bufreg.data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3532 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [17] -> \servant.cpu.cpu.bufreg.data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3533 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [18] -> \servant.cpu.cpu.bufreg.data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3534 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [19] -> \servant.cpu.cpu.bufreg.data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3535 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [20] -> \servant.cpu.cpu.bufreg.data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3536 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [21] -> \servant.cpu.cpu.bufreg.data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3537 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [22] -> \servant.cpu.cpu.bufreg.data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3538 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [23] -> \servant.cpu.cpu.bufreg.data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3539 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [24] -> \servant.cpu.cpu.bufreg.data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3540 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [25] -> \servant.cpu.cpu.bufreg.data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3541 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [26] -> \servant.cpu.cpu.bufreg.data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3542 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [27] -> \servant.cpu.cpu.bufreg.data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3543 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [28] -> \servant.cpu.cpu.bufreg.data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3544 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg.$0\data[29:0] [29] -> \servant.cpu.cpu.bufreg.data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3589 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.alu.$0\cmp_r[0:0] -> \servant.cpu.cpu.alu.cmp_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3630 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\ibus_cyc[0:0] -> \servant.cpu.cpu.state.ibus_cyc.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3634 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\init_done[0:0] -> \servant.cpu.cpu.state.init_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3635 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\o_ctrl_jump[0:0] -> \servant.cpu.cpu.state.o_ctrl_jump.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3636 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.state.$0\misalign_trap_sync_r[0:0] -> \servant.cpu.cpu.state.misalign_trap_sync_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3759 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [0] -> \servant.cpu.cpu.immdec.imm11_7 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3760 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [1] -> \servant.cpu.cpu.immdec.imm11_7 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3761 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [2] -> \servant.cpu.cpu.immdec.imm11_7 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3762 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [3] -> \servant.cpu.cpu.immdec.imm11_7 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3763 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm11_7[4:0] [4] -> \servant.cpu.cpu.immdec.imm11_7 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3764 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mie[0:0] -> \servant.cpu.cpu.csr.mstatus_mie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3767 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm7[0:0] -> \servant.cpu.cpu.immdec.imm7.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3768 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [0] -> \servant.cpu.cpu.immdec.imm19_12_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3769 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [1] -> \servant.cpu.cpu.immdec.imm19_12_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3770 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [2] -> \servant.cpu.cpu.immdec.imm19_12_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3771 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [3] -> \servant.cpu.cpu.immdec.imm19_12_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3772 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [4] -> \servant.cpu.cpu.immdec.imm19_12_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3773 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [5] -> \servant.cpu.cpu.immdec.imm19_12_20 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3774 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [6] -> \servant.cpu.cpu.immdec.imm19_12_20 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3775 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [7] -> \servant.cpu.cpu.immdec.imm19_12_20 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3776 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm19_12_20[8:0] [8] -> \servant.cpu.cpu.immdec.imm19_12_20 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3777 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [0] -> \servant.cpu.cpu.immdec.imm24_20 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3778 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [1] -> \servant.cpu.cpu.immdec.imm24_20 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3779 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [2] -> \servant.cpu.cpu.immdec.imm24_20 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3780 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [3] -> \servant.cpu.cpu.immdec.imm24_20 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3781 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm24_20[4:0] [4] -> \servant.cpu.cpu.immdec.imm24_20 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3782 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm31[0:0] -> \servant.cpu.cpu.immdec.imm31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3783 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [0] -> \servant.cpu.cpu.immdec.imm30_25 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3784 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [1] -> \servant.cpu.cpu.immdec.imm30_25 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3785 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [2] -> \servant.cpu.cpu.immdec.imm30_25 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3786 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [3] -> \servant.cpu.cpu.immdec.imm30_25 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3787 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [4] -> \servant.cpu.cpu.immdec.imm30_25 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3788 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.immdec.$0\imm30_25[5:0] [5] -> \servant.cpu.cpu.immdec.imm30_25 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3885 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [0] -> \servant.cpu.cpu.csr.mcause3_0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3886 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [1] -> \servant.cpu.cpu.csr.mcause3_0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3887 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [2] -> \servant.cpu.cpu.csr.mcause3_0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3888 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause3_0[3:0] [3] -> \servant.cpu.cpu.csr.mcause3_0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3889 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\timer_irq_r[0:0] -> \servant.cpu.cpu.csr.timer_irq_r.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3890 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mstatus_mpie[0:0] -> \servant.cpu.cpu.csr.mstatus_mpie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3891 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mie_mtie[0:0] -> \servant.cpu.cpu.csr.mie_mtie.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3892 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\mcause31[0:0] -> \servant.cpu.cpu.csr.mcause31.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3893 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.csr.$0\o_new_irq[0:0] -> \servant.cpu.cpu.csr.o_new_irq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3973 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [0] -> \servant.cpu.cpu.ctrl.o_ibus_adr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3974 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [1] -> \servant.cpu.cpu.ctrl.o_ibus_adr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3975 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [2] -> \servant.cpu.cpu.ctrl.o_ibus_adr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3976 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [3] -> \servant.cpu.cpu.ctrl.o_ibus_adr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3977 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [4] -> \servant.cpu.cpu.ctrl.o_ibus_adr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3978 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [5] -> \servant.cpu.cpu.ctrl.o_ibus_adr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3979 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [6] -> \servant.cpu.cpu.ctrl.o_ibus_adr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3980 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [7] -> \servant.cpu.cpu.ctrl.o_ibus_adr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3981 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [8] -> \servant.cpu.cpu.ctrl.o_ibus_adr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3982 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [9] -> \servant.cpu.cpu.ctrl.o_ibus_adr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3983 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [10] -> \servant.cpu.cpu.ctrl.o_ibus_adr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3984 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [11] -> \servant.cpu.cpu.ctrl.o_ibus_adr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3985 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [12] -> \servant.cpu.cpu.ctrl.o_ibus_adr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3986 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [13] -> \servant.cpu.cpu.ctrl.o_ibus_adr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3987 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [14] -> \servant.cpu.cpu.ctrl.o_ibus_adr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3988 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [15] -> \servant.cpu.cpu.ctrl.o_ibus_adr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3989 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [16] -> \servant.cpu.cpu.ctrl.o_ibus_adr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3990 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [17] -> \servant.cpu.cpu.ctrl.o_ibus_adr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3991 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [18] -> \servant.cpu.cpu.ctrl.o_ibus_adr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3992 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [19] -> \servant.cpu.cpu.ctrl.o_ibus_adr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3993 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [20] -> \servant.cpu.cpu.ctrl.o_ibus_adr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3994 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [21] -> \servant.cpu.cpu.ctrl.o_ibus_adr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3995 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [22] -> \servant.cpu.cpu.ctrl.o_ibus_adr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3996 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [23] -> \servant.cpu.cpu.ctrl.o_ibus_adr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3997 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [24] -> \servant.cpu.cpu.ctrl.o_ibus_adr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3998 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [25] -> \servant.cpu.cpu.ctrl.o_ibus_adr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3999 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [26] -> \servant.cpu.cpu.ctrl.o_ibus_adr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4000 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [27] -> \servant.cpu.cpu.ctrl.o_ibus_adr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4001 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [28] -> \servant.cpu.cpu.ctrl.o_ibus_adr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4002 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [29] -> \servant.cpu.cpu.ctrl.o_ibus_adr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4003 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [30] -> \servant.cpu.cpu.ctrl.o_ibus_adr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4004 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.ctrl.$0\o_ibus_adr[31:0] [31] -> \servant.cpu.cpu.ctrl.o_ibus_adr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4165 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [0] -> \servant.cpu.cpu.bufreg2.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4166 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [1] -> \servant.cpu.cpu.bufreg2.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4167 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [2] -> \servant.cpu.cpu.bufreg2.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4168 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [3] -> \servant.cpu.cpu.bufreg2.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4169 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [4] -> \servant.cpu.cpu.bufreg2.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4170 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [5] -> \servant.cpu.cpu.bufreg2.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4171 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [6] -> \servant.cpu.cpu.bufreg2.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4172 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [7] -> \servant.cpu.cpu.bufreg2.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4173 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [8] -> \servant.cpu.cpu.bufreg2.dat [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4174 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [9] -> \servant.cpu.cpu.bufreg2.dat [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4175 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [10] -> \servant.cpu.cpu.bufreg2.dat [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4176 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [11] -> \servant.cpu.cpu.bufreg2.dat [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4177 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [12] -> \servant.cpu.cpu.bufreg2.dat [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4178 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [13] -> \servant.cpu.cpu.bufreg2.dat [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4179 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [14] -> \servant.cpu.cpu.bufreg2.dat [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4180 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [15] -> \servant.cpu.cpu.bufreg2.dat [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4181 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [16] -> \servant.cpu.cpu.bufreg2.dat [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4182 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [17] -> \servant.cpu.cpu.bufreg2.dat [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4183 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [18] -> \servant.cpu.cpu.bufreg2.dat [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4184 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [19] -> \servant.cpu.cpu.bufreg2.dat [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4185 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [20] -> \servant.cpu.cpu.bufreg2.dat [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4186 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [21] -> \servant.cpu.cpu.bufreg2.dat [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4187 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [22] -> \servant.cpu.cpu.bufreg2.dat [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4188 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [23] -> \servant.cpu.cpu.bufreg2.dat [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4189 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [24] -> \servant.cpu.cpu.bufreg2.dat [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4190 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [25] -> \servant.cpu.cpu.bufreg2.dat [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4191 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [26] -> \servant.cpu.cpu.bufreg2.dat [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4192 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [27] -> \servant.cpu.cpu.bufreg2.dat [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4193 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [28] -> \servant.cpu.cpu.bufreg2.dat [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4194 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [29] -> \servant.cpu.cpu.bufreg2.dat [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4195 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [30] -> \servant.cpu.cpu.bufreg2.dat [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4196 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.bufreg2.$0\dat[31:0] [31] -> \servant.cpu.cpu.bufreg2.dat [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4257 to $_DFFE_PP_ for $techmap\servant.cpu.cpu.mem_if.$0\signbit[0:0] -> \servant.cpu.cpu.mem_if.signbit.

31.35. Executing TECHMAP pass (map to technology primitives).

31.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

31.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~445 debug messages>

31.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~546 debug messages>

31.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).

31.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in service.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE): \my_adr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2436 (SB_DFFE): \rx_from_ble.rx_byte [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFFE): \my_adr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFFE): \my_adr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFFE): \my_adr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE): \my_adr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE): \my_adr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE): \my_adr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE): \my_adr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE): \my_adr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE): \my_adr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE): \my_adr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE): \my_adr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE): \my_adr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE): \my_adr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE): \my_adr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFFE): \my_adr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2791 (SB_DFFE): \tx_to_pc.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2223 (SB_DFFE): \my_adr [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2224 (SB_DFFE): \my_adr [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFF): \tx_to_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFFE): \my_adr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFFE): \my_adr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFFE): \my_adr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFFE): \my_adr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFFE): \my_adr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFFE): \my_adr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFFE): \my_adr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE): \my_adr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2438 (SB_DFFE): \rx_from_ble.rx_byte [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2794 (SB_DFF): \tx_to_pc.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2789 (SB_DFF): \tx_to_pc.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2630 (SB_DFF): \tx_to_ble.o_wb_rdt = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2627 (SB_DFFE): \tx_to_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2609 (SB_DFFE): \tx_to_ble.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2449 (SB_DFFE): \rx_from_ble.data_index [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2447 (SB_DFF): \rx_from_ble.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2303 (SB_DFF): \recieve = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE): \my_adr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2430 (SB_DFF): \rx_from_ble.r_Rx_temp = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2437 (SB_DFFE): \rx_from_ble.rx_byte [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2429 (SB_DFF): \rx_from_ble.rx_bit = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2432 (SB_DFFE): \rx_from_ble.rx_byte [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2433 (SB_DFFE): \rx_from_ble.rx_byte [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2434 (SB_DFFE): \rx_from_ble.rx_byte [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2439 (SB_DFFE): \rx_from_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2440 (SB_DFFE): \rx_from_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2441 (SB_DFFE): \rx_from_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2442 (SB_DFFE): \rx_from_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2443 (SB_DFFE): \rx_from_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2444 (SB_DFFE): \rx_from_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2445 (SB_DFFE): \rx_from_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2448 (SB_DFFE): \rx_from_ble.temp_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2431 (SB_DFFE): \rx_from_ble.rx_byte [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2450 (SB_DFFE): \rx_from_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2446 (SB_DFF): \rx_from_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2451 (SB_DFFE): \rx_from_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2610 (SB_DFFE): \tx_to_ble.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2615 (SB_DFFE): \tx_to_ble.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2611 (SB_DFFE): \tx_to_ble.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2612 (SB_DFFE): \tx_to_ble.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2614 (SB_DFFE): \tx_to_ble.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE): \tx_to_ble.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFF): \tx_to_ble.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFF): \tx_to_ble.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFF): \tx_to_ble.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFF): \tx_to_ble.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFF): \tx_to_ble.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2625 (SB_DFF): \tx_to_ble.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2608 (SB_DFFE): \tx_to_ble.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFFE): \my_adr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2628 (SB_DFFE): \tx_to_ble.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFF): \tx_to_ble.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2629 (SB_DFFE): \tx_to_ble.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2778 (SB_DFFE): \tx_to_pc.temp_data [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2780 (SB_DFFE): \tx_to_pc.temp_data [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2776 (SB_DFFE): \tx_to_pc.temp_data [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFFE): \my_adr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2779 (SB_DFFE): \tx_to_pc.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2775 (SB_DFFE): \tx_to_pc.temp_data [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2781 (SB_DFFE): \tx_to_pc.temp_data [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2782 (SB_DFF): \tx_to_pc.clock_count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2783 (SB_DFFE): \tx_to_pc.clock_count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2784 (SB_DFF): \tx_to_pc.clock_count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2785 (SB_DFF): \tx_to_pc.clock_count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2786 (SB_DFF): \tx_to_pc.clock_count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2787 (SB_DFF): \tx_to_pc.clock_count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2788 (SB_DFF): \tx_to_pc.clock_count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2790 (SB_DFF): \tx_to_pc.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2774 (SB_DFFE): \tx_to_pc.temp_data [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2792 (SB_DFFE): \tx_to_pc.data_index [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2793 (SB_DFFE): \tx_to_pc.data_index [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2777 (SB_DFFE): \tx_to_pc.temp_data [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2613 (SB_DFFE): \tx_to_ble.temp_data [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE): \my_adr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE): \my_adr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE): \my_adr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2435 (SB_DFFE): \rx_from_ble.rx_byte [4] = 0

31.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in service.
  Merging $auto$simplemap.cc:277:simplemap_mux$2154 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [13], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2141 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [0], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2142 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [1], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2143 (A=1'0, B=$auto$alumacc.cc:474:replace_alu$1403.BB [2], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2144 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [3], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2145 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [4], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2146 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [5], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2147 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [6], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2148 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [7], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2150 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [9], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2151 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [10], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2152 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [11], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2153 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [12], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2309 (A=1'0, B=$techmap\ram.$and$src/servant_1.2.1/service/servant_ram.v:52$195_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2308 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2156 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [15], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2973 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2908 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2159 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [18], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2976 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2911 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2161 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [20], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4580 (A=1'0, B=$techmap$techmap\tx_to_ble.$procmux$1132.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2484_Y, S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2166 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [25], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2167 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [26], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2168 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [27], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2169 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [28], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2170 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [29], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2172 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [31], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2171 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [30], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2149 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [8], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3036 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3033 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3027 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2930 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4390 (A=1'0, B=$techmap$techmap\rx_from_ble.$procmux$1079.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2484_Y, S=$auto$simplemap.cc:127:simplemap_reduce$4410) into $auto$simplemap.cc:420:simplemap_dff$2447 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3651 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:195$752_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3636 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2155 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [14], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2956 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2891 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3032 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2935 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2965 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2900 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2712 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2619 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2717 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2713 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2714 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2715 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2716 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2165 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [24], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2711 (A=1'0, B=$techmap\tx_to_ble.$procmux$1116_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1301) into $auto$simplemap.cc:420:simplemap_dff$2618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2162 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [21], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2855 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [0], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2782 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2856 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [1], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2783 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2857 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [2], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2784 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2858 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [3], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2785 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2859 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [4], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2860 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [5], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2861 (A=1'0, B=$techmap\tx_to_pc.$procmux$1116_Y [6], S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4673 (A=1'0, B=$techmap$techmap\tx_to_pc.$procmux$1132.$reduce_or$/usr/bin/../share/yosys/techmap.v:441$2484_Y, S=$auto$opt_reduce.cc:132:opt_mux$1303) into $auto$simplemap.cc:420:simplemap_dff$2790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2961 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2896 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2957 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2892 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2958 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2893 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2959 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2894 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2960 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2895 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2962 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2897 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2963 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2898 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2964 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2899 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2967 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2902 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2970 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2905 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2968 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2903 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2966 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2901 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2986 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2921 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2984 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2919 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2972 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2907 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2157 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [16], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2974 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2909 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2975 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2910 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2158 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [17], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2977 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2912 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2978 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2913 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2979 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2914 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2980 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2915 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2981 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2916 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2982 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2917 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2983 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2918 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2160 (A=1'0, B=$add$src/servant_1.2.1/service/service.v:157$113_Y [19], S=$auto$alumacc.cc:491:replace_alu$1405 [31]) into $auto$simplemap.cc:420:simplemap_dff$2220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2985 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2920 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$2969 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2904 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3019 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3020 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$6005 [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2923 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3021 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2924 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3022 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2925 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3023 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3024 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3025 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2928 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3026 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2929 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3028 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2931 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2955 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2890 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3029 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2932 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3030 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2933 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4041 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3974 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3031 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2934 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3040 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3037 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3038 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3035 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3034 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3039 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3043 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3103 (A=1'0, B=$techmap\servant.servant_mux.$and$src/servant_1.2.1/service/servant_mux.v:44$228_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3102 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3044 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3045 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3046 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3047 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3048 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3049 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3050 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3042 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2971 (A=1'0, B=\servant.cpu.cpu.bufreg2.dat [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2906 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3227 (A=$techmap\servant.cpu.rf_ram_if.$procmux$847_Y [0], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3228 (A=$techmap\servant.cpu.rf_ram_if.$procmux$847_Y [1], B=1'1, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3237 (A=1'0, B=\servant.cpu.rf_ram_if.i_rreq, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3229 (A=$techmap\servant.cpu.rf_ram_if.$procmux$847_Y [2], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3230 (A=$techmap\servant.cpu.rf_ram_if.$procmux$847_Y [3], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3231 (A=$techmap\servant.cpu.rf_ram_if.$procmux$847_Y [4], B=1'0, S=\servant.cpu.rf_ram_if.i_wreq) into $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3240 (A=1'0, B=\servant.cpu.rf_ram_if.i_rdata [1], S=\servant.cpu.rf_ram_if.rcnt [0]) into $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3238 (A=1'0, B=\servant.cpu.rf_ram_if.rreq_r, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3041 (A=1'0, B=$techmap\servant.timer.$add$src/servant_1.2.1/service/servant_timer.v:29$220_Y [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$2944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3647 (A=1'0, B=$techmap\servant.cpu.cpu.state.$or$src/serv_1.2.1/rtl/serv_state.v:169$742_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3648 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3649 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3650 (A=1'0, B=\servant.cpu.cpu.state.o_cnt_r [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3645 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737_Y [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3646 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737_Y [2], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3643 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:144$736_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3639 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:138$732_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3634 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3642 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:141$735_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3644 (A=1'0, B=$techmap\servant.cpu.cpu.state.$add$src/serv_1.2.1/rtl/serv_state.v:168$737_Y [0], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3637 (A=1'0, B=$techmap\servant.cpu.cpu.state.$and$src/serv_1.2.1/rtl/serv_state.v:139$733_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3635 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3898 (A=1'0, B=\servant.cpu.cpu.csr.csr_in, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3891 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3895 (A=1'0, B=$techmap\servant.cpu.cpu.csr.$and$src/serv_1.2.1/rtl/serv_csr.v:79$299_Y, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3893 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4043 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [4], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3976 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4044 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [5], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3977 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4045 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [6], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3978 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4046 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [7], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3979 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4047 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [8], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3980 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4048 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [9], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3981 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4049 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [10], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3982 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4050 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [11], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3983 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4051 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [12], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3984 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4052 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [13], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3985 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4053 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [14], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3986 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4055 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [16], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3988 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4066 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [27], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3999 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4056 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [17], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3989 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4057 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [18], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3990 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4058 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [19], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3991 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4059 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [20], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3992 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4060 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [21], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3993 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4061 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [22], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3994 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4063 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [24], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3996 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4054 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [15], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3987 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4064 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [25], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3997 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4065 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [26], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3998 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4062 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [23], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3995 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4067 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [28], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4000 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4068 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [29], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4069 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [30], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4070 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [31], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4071 (A=1'0, B=\servant.cpu.cpu.ctrl.new_pc, S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$4004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4042 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [3], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4040 (A=1'0, B=\servant.cpu.cpu.ctrl.o_ibus_adr [1], S=\clock_gen.pll.rst_reg [1]) into $auto$simplemap.cc:420:simplemap_dff$3973 (SB_DFFE).

31.40. Executing ICE40_OPT pass (performing simple optimizations).

31.40.1. Running ICE40 specific optimizations.

31.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.
<suppressed ~225 debug messages>

31.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
<suppressed ~915 debug messages>
Removed a total of 305 cells.

31.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..
Removed 168 unused cells and 2472 unused wires.
<suppressed ~170 debug messages>

31.40.6. Rerunning OPT passes. (Removed registers in this run.)

31.40.7. Running ICE40 specific optimizations.

31.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module service.

31.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\service'.
Removed a total of 0 cells.

31.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

31.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \service..

31.40.12. Finished OPT passes. (There is nothing left to do.)

31.41. Executing TECHMAP pass (map to technology primitives).

31.41.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

31.41.2. Continuing TECHMAP pass.
No more expansions possible.

31.42. Executing ABC pass (technology mapping using ABC).

31.42.1. Extracting gate netlist of module `\service' to `<abc-temp-dir>/input.blif'..
Extracted 1840 gates and 2506 wires to a netlist network with 664 inputs and 431 outputs.

31.42.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     744.
ABC: Participating nodes from both networks       =    1595.
ABC: Participating nodes from the first network   =     747. (  84.79 % of nodes)
ABC: Participating nodes from the second network  =     848. (  96.25 % of nodes)
ABC: Node pairs (any polarity)                    =     747. (  84.79 % of names can be moved)
ABC: Node pairs (same polarity)                   =     631. (  71.62 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

31.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1758
ABC RESULTS:        internal signals:     1411
ABC RESULTS:           input signals:      664
ABC RESULTS:          output signals:      431
Removing temp directory.
Removed 0 unused cells and 1588 unused wires.

31.43. Executing TECHMAP pass (map to technology primitives).

31.43.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

31.43.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000110011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011101111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100001101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
No more expansions possible.
<suppressed ~2296 debug messages>
Removed 0 unused cells and 1754 unused wires.

31.44. Executing HIERARCHY pass (managing design hierarchy).

31.44.1. Analyzing design hierarchy..
Top module:  \service

31.44.2. Analyzing design hierarchy..
Top module:  \service
Removed 0 unused modules.

31.45. Printing statistics.

=== service ===

   Number of wires:               1519
   Number of wire bits:           4271
   Number of public wires:         448
   Number of public wire bits:    2875
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1609
     SB_CARRY                      170
     SB_DFF                        102
     SB_DFFE                       176
     SB_DFFESR                     102
     SB_DFFSR                       64
     SB_DFFSS                        1
     SB_LUT4                       978
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    15

31.46. Executing CHECK pass (checking for obvious problems).
checking module service..
found and reported 0 problems.

32. Executing JSON backend.

Warnings: 11 unique messages, 41 total
End of script. Logfile hash: bafb8d82c3
CPU: user 3.43s system 0.01s, MEM: 83.62 MB total, 65.66 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 24% 24x opt_clean (0 sec), 16% 24x opt_expr (0 sec), ...
